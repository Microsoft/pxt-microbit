{
  "AcceleratorRange.EightG": "L'accélérateur mesure la force jusqu'à une gravité de 8",
  "AcceleratorRange.FourG": "L'accélérateur mesure la force jusqu'à une gravité de 4",
  "AcceleratorRange.OneG": "L'accélérateur mesure la force jusqu'à une gravité de 1",
  "AcceleratorRange.TwoG": "L'accélérateur mesure la force jusqu'à une gravité de 2",
  "Array": "Ajoutez, supprimez et remplacez des éléments des listes.\n\nAjoutez, supprimez et remplacez des éléments des listes.",
  "Array.filter": "Renvoyez les éléments d'un tableau qui correspondent aux conditions spécifiées dans une fonction callback.",
  "Array.filter|param|callbackfn": "Une fonction qui accepte jusqu'à deux arguments. La méthode de filtre appelle une fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.get": "Récupérez la valeur à un index en particulier.",
  "Array.get|param|index": "la position de l'objet dans la liste, basée sur zéro. Ex : 0",
  "Array.indexOf": "Renvoyez l'index de la première occurrence d'une valeur dans un tableau.",
  "Array.indexOf|param|fromIndex": "L'index du tableau à partir duquel commencer la recherche. Si fromIndex est omis, la recherche démarre à l'index 0.",
  "Array.indexOf|param|item": "La valeur à localiser dans le tableau.",
  "Array.insertAt": "Insérez la valeur à un index en particulier, augmentez de 1 la longueur du tableau.",
  "Array.insertAt|param|index": "la position où insérer la valeur dans la liste, basée sur zéro. Ex : 0",
  "Array.insertAt|param|value": "pour insérer, ex : 0",
  "Array.length": "Récupère ou définit la longueur du tableau. Ce nombre est supérieur de un au plus haut des éléments définis dans un tableau.",
  "Array.map": "Appelez une fonction callback définie sur chaque élément d'un tableau, et renvoyez un tableau contenant les résultats.",
  "Array.map|param|callbackfn": "Une fonction qui accepte jusqu'à deux arguments. La méthode de cartographie appelle une fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.pop": "Supprimez le dernier élément d'un tableau et renvoyez-le.",
  "Array.push": "Ajoutez un nouvel élément à un tableau.",
  "Array.push|param|item": "pour ajouter au tableau.",
  "Array.reduce": "Appelez la fonction callback spécifiée pour tous les éléments d'un tableau. La valeur de renvoi de la fonction callback correspond au résultat des accumulations, et est fournie sous la forme d'un argument dans le prochain appel de la fonction callback.",
  "Array.reduce|param|callbackfn": "Une fonction qui accepte jusqu'à trois arguments. La méthode de réduction appelle une fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.reduce|param|initialValue": "La valeur initiale pour commencer l'accumulation. Le premier appel de la fonction callbackfn fournit cette valeur sous la forme d'un argument au lieu d'une valeur de tableau.",
  "Array.removeAt": "Supprimez l'élément à un certain index.",
  "Array.removeAt|param|index": "la position - basée sur zéro - de la valeur à supprimer dans la liste. Ex : 0",
  "Array.removeElement": "Supprimez la première occurrence d'un objet. Vrai est renvoyé en cas de suppression.",
  "Array.reverse": "Inversez les éléments d'un tableau. Le premier élément du tableau devient le dernier, et le dernier élément du tableau devient le premier.",
  "Array.set": "Conservez une valeur à un index en particulier.",
  "Array.set|param|index": "la position où conserver la valeur dans la liste, basée sur zéro. Ex : 0",
  "Array.shift": "Supprimez le premier élément d'un tableau et renvoyez-le. Cette méthode modifie la longueur du tableau.",
  "Array.slice": "Renvoyez une section d'un tableau.",
  "Array.slice|param|end": "La fin de la portion spécifiée du tableau. Ex : 0",
  "Array.slice|param|start": "Le début de la portion spécifiée du tableau. Ex : 0",
  "Array.sort": "Trie les éléments d'un tableau en place et renvoie le tableau. Le tri n'est pas nécessairement stable.",
  "Array.splice": "Supprimez les éléments d'un tableau.",
  "Array.splice|param|deleteCount": "Le nombre d'éléments à supprimer. Ex : 0",
  "Array.splice|param|start": "L'emplacement, basé sur zéro, dans un tableau à partir duquel commencer à supprimer des éléments. Ex : 0",
  "Array.unshift": "Ajoutez un élément au début d'un tableau et renvoyez la nouvelle longueur du tableau.",
  "Array.unshift|param|value": "pour insérer au début du tableau.",
  "Boolean.toString": "Renvoie la représentation d'une chaîne d'un objet.",
  "Buffer.fill": "Remplissez (un fragment) du tampon avec la valeur donnée.",
  "Buffer.getNumber": "Lisez un nombre au format spécifié du tampon.",
  "Buffer.length": "Renvoie la longueur d'un objet du tampon.",
  "Buffer.rotate": "Pivotez le tampon laissé en place.",
  "Buffer.rotate|param|length": "nombre d'éléments du tampon. Si négatif, la longueur est définie comme longueur du tampon moins le début. ex : -1",
  "Buffer.rotate|param|offset": "nombre d'octets à transférer ; utilisez une valeur négative pour transférer à droite",
  "Buffer.rotate|param|start": "décalage de départ du tampon. La valeur par défaut est 0.",
  "Buffer.setNumber": "Écrivez un nombre au format spécifié dans le tampon.",
  "Buffer.shift": "Déplacez le tampon laissé sur place, avec zéro espacement.",
  "Buffer.shift|param|length": "nombre d'éléments du tampon. Si négatif, la longueur est définie comme longueur du tampon moins le début. ex : -1",
  "Buffer.shift|param|offset": "nombre d'octets à transférer ; utilisez une valeur négative pour transférer à droite",
  "Buffer.shift|param|start": "décalage de départ du tampon. La valeur par défaut est 0.",
  "Buffer.slice": "Renvoyez une copie d'un fragment d'un tampon.",
  "Buffer.write": "Écrivez le contenu de `src` à `dstOffset` dans le tampon actuel.",
  "EventCreationMode": "Comment créer l'événement.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent est initialisé, et ses gestionnaires d’événements sont déclenchés immédiatement (ne convient pas pour une utilisation dans les interruptions !).",
  "EventCreationMode.CreateOnly": "MicroBitEvent est initialisé, et aucune autre procédure ne se déroule.",
  "Gesture.EightG": "Déclenché quand un choc 8G est détecté",
  "Gesture.FreeFall": "Déclenché quand la carte tombe !",
  "Gesture.LogoDown": "Déclenché lorsque le logo est vers le bas et l’écran est vertical",
  "Gesture.LogoUp": "Déclenché quand le logo est vers le haut et l’écran est vertical",
  "Gesture.ScreenDown": "Déclenché quand l’écran est vers le haut et la carte est horizontale",
  "Gesture.ScreenUp": "Déclenché quand l’écran est vers le bas et la carte est horizontale",
  "Gesture.Shake": "Déclenché en cas de secousse",
  "Gesture.SixG": "Déclenché quand un choc 6G est détecté",
  "Gesture.ThreeG": "Déclenché quand un choc 3G est détecté",
  "Gesture.TiltLeft": "Déclenché quand l’écran est orienté à gauche",
  "Gesture.TiltRight": "Déclenché quand l’écran est orienté à droite",
  "Image.clear": "Désactive tous les pixels.",
  "Image.height": "Récupère la hauteur en lignes (toujours 5)",
  "Image.pixel": "Récupère le statut du pixel à la position ``(x,y)``",
  "Image.pixelBrightness": "Récupère la luminosité du pixel ([0..255]) à la position donnée",
  "Image.plotFrame": "Dessine à l'écran la ``index``-ème trame d'une image.",
  "Image.plotFrame|param|xOffset": "index de la colonne pour commencer à afficher l'image",
  "Image.plotImage": "Attache l'image à une colonne donnée de l'écran",
  "Image.scrollImage": "Fait défiler une image.",
  "Image.scrollImage|param|frameOffset": "décalage x déplacé à chaque étape de l'animation. Ex : 1, 2, 5",
  "Image.scrollImage|param|interval": "délai entre chaque étape d'une animation en millisecondes. Ex : 200",
  "Image.setPixel": "Définissez un état de pixel à la position ``(x,y)``",
  "Image.setPixelBrightness": "Définit la luminosité d'un pixel spécifique à une position donnée",
  "Image.showFrame": "Affiche une trame particulière d'une suite d'images.",
  "Image.showImage": "Affiche une trame d'une image au décalage ``x offset``.",
  "Image.showImage|param|xOffset": "index de la colonne pour commencer à afficher l'image",
  "Image.width": "Récupère la largeur en colonnes",
  "Math": "Plus d'opérations complexes avec des nombres.",
  "Math.abs": "Renvoie la valeur absolue d'un nombre (la valeur sans son signe qu'il soit positif ou négatif).\nExemple : La valeur absolue de -5 est 5, la valeur absolue de 5 est 5.",
  "Math.pow": "Renvoie le nombre initial à la puissance demandée.",
  "Math.random": "Renvoie un nombre pseudoaléatoire entre 0 et `limit`.",
  "Math.randomBoolean": "Génère une valeur « true » ou « false » au hasard, comme si vous lanciez une pièce de monnaie.",
  "Math.random|param|limit": "la limite supérieure du nombre généré. Ex. : 4",
  "Math.sqrt": "Renvoyez la racine carrée d'un nombre.",
  "Math.sqrt|param|x": "Une expression numérique.",
  "Number.toString": "Renvoyez la représentation en chaîne d'un nombre.",
  "String": "Combinez, partagez et recherchez les chaînes de texte.\n\nCombinez, partagez et recherchez les chaînes de texte.",
  "String.charAt": "Renvoyez le caractère à l'index spécifié.",
  "String.charAt|param|index": "La position partant de 0 du caractère désiré. Ex : 0",
  "String.charCodeAt": "Renvoyez la valeur unicode d'un caractère à l'emplacement spécifié.",
  "String.compare": "Affichez la différence d'ordre des caractères de deux chaînes (en codage ASCII).",
  "String.concat|param|other": "La chaîne à ajouter à la fin de la chaîne. Ex : \"ajoutez-moi !\"",
  "String.fromCharCode": "Construit une chaîne à partir du code ASCII d'un caractère donné.",
  "String.length": "Renvoyez la longueur d'un objet Chaîne.",
  "String.substr": "Renvoyez une sous-chaîne de la chaîne actuelle.",
  "String.substr|param|length": "nombre de caractères à extraire. Ex : 3",
  "String.substr|param|start": "index du premier caractère ; peut être négatif en comptant à partir de la fin. Ex : 0",
  "basic": "Permet d’accéder aux fonctionnalités de base de la micro:bit.",
  "basic.clearScreen": "Éteindre toutes les LEDs",
  "basic.forever": "Répète le code indéfiniment en tâche de fond. A chaque itération, permet aux autres codes de s’exécuter.",
  "basic.pause": "Pause pendant la durée indiquée en millisecondes",
  "basic.pause|param|ms": "combien de temps dure une pause, par ex. : 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Dessine une image sur l’écran de LEDs.",
  "basic.plotLeds|param|leds": "motif de LEDs à allumer/éteindre",
  "basic.showAnimation": "Montre une séquence de motifs LED comme une animation.",
  "basic.showAnimation|param|interval": "temps en millisecondes entre chaque rafraîchissement",
  "basic.showAnimation|param|leds": "motif de LEDs à allumer/éteindre",
  "basic.showArrow": "Affiche une flèche à l'écran",
  "basic.showArrow|param|direction": "la direction de la flèche",
  "basic.showArrow|param|interval": "le temps (millisecondes) d'affichage de l'icône. 600 par défaut.",
  "basic.showIcon": "Affiche l'icône sélectionnée sur l'écran LED",
  "basic.showIcon|param|icon": "l'id de l'icône prédéfinie",
  "basic.showIcon|param|interval": "le temps (millisecondes) d'affichage de l'icône. 600 par défaut.",
  "basic.showLeds": "Dessine une image sur l’écran de LEDs.",
  "basic.showLeds|param|interval": "temps de pause en millisecondes après avoir dessiné",
  "basic.showLeds|param|leds": "le motif de LED à allumer/éteindre",
  "basic.showNumber": "Fait défiler un nombre à l'écran. Si le nombre rentre dans l'écran (i.e. un seul chiffre), ne défile pas.",
  "basic.showNumber|param|interval": "vitesse de défilement ; par ex : 150, 100, 200, -100",
  "basic.showString": "Afficher du texte à l’écran, un caractère à la fois. Si la chaîne rentre sur l’écran (c'est-à-dire une seule lettre), ne défile pas.",
  "basic.showString|param|interval": "à quelle vitesse se déplacent les caractères ; par ex. : 150, 100, 200, -100",
  "basic.showString|param|text": "le texte à faire défiler sur l’écran, par exemple : « Bonjour ! »",
  "control": "Utilitaires d'exécution et d’événements.",
  "control.inBackground": "Planifie le code qui s’exécute en arrière-plan.",
  "control.reset": "Réinitialise le micro:bit de BBC.",
  "control.waitMicros": "Bloque la fibre courante pour le nombre de microsecondes donné",
  "control.waitMicros|param|micros": "nombre de microsecondes à attendre. par ex. : 4",
  "game": "Un moteur de jeu avec une unique LED",
  "game.LedSprite": "Une image-objet de jeu rendue comme LED unique",
  "game.LedSprite.blink": "Signale la durée de ``blink`` d'une image-objet",
  "game.LedSprite.brightness": "Signale la ``brightness` d'une image-objet sur un écran LED",
  "game.LedSprite.change": "Modifie la propriété d'une image-objet",
  "game.LedSprite.changeBlinkBy": "Modifie la durée de ``blink`` par le nombre de millisecondes donné",
  "game.LedSprite.changeBrightnessBy": "Modifie la position ``y`` par le montant donné",
  "game.LedSprite.changeBrightnessBy|param|value": "la valeur pour modifier la luminosité",
  "game.LedSprite.changeDirectionBy": "Modifie la position ``direction`` par le montant donné en tournant vers la droite",
  "game.LedSprite.changeXBy": "Modifie la position ``x`` par le montant donné",
  "game.LedSprite.changeYBy": "Modifie la position ``y`` par le montant donné",
  "game.LedSprite.change|param|property": "le nom de la propriété à modifier",
  "game.LedSprite.change|param|value": "montant de la modification. Ex : 1",
  "game.LedSprite.delete": "Supprime l'image-objet du moteur de jeu. L'image-objet n'apparaîtra plus à l'écran ou n'interagira plus avec les autres images-objets.",
  "game.LedSprite.direction": "Signale la direction actuelle d'une image-objet",
  "game.LedSprite.get": "Récupère la propriété de l'image-objet",
  "game.LedSprite.get|param|property": "le nom de la propriété à modifier",
  "game.LedSprite.goTo": "Allez à cette position à l'écran",
  "game.LedSprite.ifOnEdgeBounce": "Si touche le bord de l'écran en y faisant face, alors demi-tour.",
  "game.LedSprite.isTouching": "Signale vrai si l'image-objet a la même position que l'image-objet spécifiée",
  "game.LedSprite.isTouchingEdge": "Signale vrai si l'image-objet touche un bord",
  "game.LedSprite.move": "Déplacez un certain nombre de LED dans la direction actuelle",
  "game.LedSprite.move|param|leds": "nombre de LED à déplacer. Ex : 1, -1",
  "game.LedSprite.off": "Désactive l'image-objet (activée par défaut)",
  "game.LedSprite.on": "Active l'image-objet (activée par défaut)",
  "game.LedSprite.set": "Attribue une propriété à l'image-objet",
  "game.LedSprite.setBlink": "Définit l'intervalle de durée du clignotement en millisecondes.",
  "game.LedSprite.setBrightness": "Définissez la ``brightness`` d'une image-objet",
  "game.LedSprite.setBrightness|param|brightness": "la luminosité de 0 (désactivée) à 255 (activée). Ex : 255.",
  "game.LedSprite.setDirection": "Définissez la direction de l'image-objet actuelle, arrondi au plus proche multiple de 45",
  "game.LedSprite.setX": "Définissez la position ``x`` d'une image-objet",
  "game.LedSprite.setY": "Définissez la position ``y`` d'une image-objet",
  "game.LedSprite.set|param|property": "le nom de la propriété à modifier",
  "game.LedSprite.turn": "Tournez l'image-objet",
  "game.LedSprite.turnLeft": "Tournez à gauche (dans le sens inverse des aiguilles d'une montre)",
  "game.LedSprite.turnRight": "Tournez à droite (dans le sens des aiguilles d'une montre)",
  "game.LedSprite.turn|param|degrees": "angle du virage en degrés. Ex : 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "gauche ou droite",
  "game.LedSprite.x": "Signale la position ``x`` d'une image-objet sur l'écran LED",
  "game.LedSprite.y": "Signale la position ``y`` d'une image-objet sur l'écran LED",
  "game.addScore": "Ajoute des points au le score actuel et affiche une animation",
  "game.addScore|param|points": "nombre de points à changer, par ex. : 1",
  "game.gameOver": "Affiche une animation de fin de jeu et le score.",
  "game.isPaused": "Indique si le rendu du jeu est en pause pour permettre d'autres animations",
  "game.pause": "Met en pause le rendu du jeu par le moteur pour permettre d'autres animations",
  "game.resume": "Reprend le rendu du jeu par le moteur",
  "game.score": "Obtient le score actuel",
  "game.setScore": "Définit la valeur du score actuel",
  "game.setScore|param|value": "nouvelle valeur du score.",
  "game.startCountdown": "Affiche une animation, puis démarre un compte à rebours avant de déclencher la fin de la partie dès que 0 est atteint",
  "game.startCountdown|param|ms": "durée du compte à rebours en millisecondes, par ex. : 10000",
  "images": "Création, manipulation et affichage d’images LED.",
  "images.createBigImage": "Crée une image à partir de 2 images.",
  "images.createImage": "Crée une image qui s’adapte aux dimensions de l’écran LED.",
  "input": "Événements et des données provenant de capteurs",
  "input.acceleration": "Donne la valeur de l'accélération en milli-g (quand la carte est à plat avec l'écran vers le haut, x=0, y=0 et z=-1024)",
  "input.buttonIsPressed": "Donne l'état du bouton (appuyé ou non) pour ``A`` et ``B``.",
  "input.buttonIsPressed|param|button": "Le bouton pour demander la requête. Ex. : Button.A",
  "input.calibrate": "Obsolète, utilisez input.calibrateCompass à la place.",
  "input.compassHeading": "Obtient la direction actuelle du compas en degrés.",
  "input.lightLevel": "Lit le niveau de lumière appliqué à l'écran LED de ``0`` (sombre) à ``255`` lumineux.",
  "input.magneticForce": "Obtenir la valeur de la force magnétique en ``micro-Teslas`` (``µT``). Cette fonction n’est pas supportée par le simulateur.",
  "input.onButtonPressed": "Faire quelque chose quand un bouton (A, B ou A+B) est appuyé et relâché.",
  "input.onGesture": "Faire quelque chose lorsque lorsqu’un geste est fait (par exemple secouer le micro:bit).",
  "input.onGesture|param|gesture": "le type de mouvement à suivre. Ex. : Gesture.Shake",
  "input.onLogoDown": "Associe le code à exécuter quand le logo est orienté vers le bas et que la carte est verticale.",
  "input.onLogoUp": "Associe le code à exécuter quand le logo est orienté vers le haut et que la carte est verticale.",
  "input.onPinPressed": "Faire quelque chose lorsque qu'une broche est pressée puis relâchée de nouveau (tout en touchant la broche GND).",
  "input.onPinPressed|param|body": "code à exécuter lorsque la broche est enfoncée",
  "input.onPinPressed|param|name": "broche à presser. Ex. : TouchPin.P0",
  "input.onPinReleased": "Faire quelque chose quand une broche est relâchée.",
  "input.onPinReleased|param|body": "le code à exécuter lorsque la broche est relâchée",
  "input.onPinReleased|param|name": "broche à relâcher. Ex. : TouchPin.P0",
  "input.onScreenDown": "Associe le code à exécuter quand l'écran est orienté vers le bas.",
  "input.onScreenUp": "Associe le code à exécuter quand l'écran est orienté vers le haut.",
  "input.onShake": "Associe le code à exécuter quand l'appareil est secoué.",
  "input.pinIsPressed": "Donne l’état de la broche (pressée ou non). Nécessite de tenir la masse pour fermer le circuit.",
  "input.pinIsPressed|param|name": "broche utilisée pour détecter le contact. Ex. : TouchPin.P0",
  "input.rotation": "L'inclinaison ou le roulement de l'appareil, rotation autour de l'``axe X`` ou de l'``axe Y``, en degrés.",
  "input.runningTime": "Donne le nombre de millisecondes écoulées depuis la mise en route.",
  "input.runningTimeMicros": "Récupère le nombre de microsecondes écoulées depuis la mise en route.",
  "input.setAccelerometerRange": "Définit la plage de l'accéléromètre en g.",
  "input.setAccelerometerRange|param|range": "Une valeur qui décrit la force maximale d'accélération mesurée.",
  "input.temperature": "Obtient la température en degrés Celsius (°C).",
  "led": "Contrôle de l’écran LED.",
  "led.brightness": "Récupérez la luminosité de l'écran comprise entre 0 (éteint) à 255 (luminosité au maximum).",
  "led.displayMode": "Récupère le mode d'affichage actuel",
  "led.enable": "Active ou désactive l’affichage",
  "led.fadeIn": "Augmentation de la luminosité sous forme de fondu",
  "led.fadeOut": "Réduction de la luminosité sous forme de fondu",
  "led.plot": "Allume la LED spécifiée en utilisant des coordonnées de type (x, y) ( x est horizontal, y est vertical). (0, 0) est la LED tout en haut à gauche.",
  "led.plotAll": "Allume toutes les LEDS",
  "led.plotBarGraph": "Affiche un graphique à barres verticale basée sur les valeurs `valeur` et `hauteur`.\nSi `hauteur` est 0, le graphique est automatiquement ajusté.",
  "led.plotBarGraph|param|high": "valeur maximum. Si 0, la valeur maximum est automatiquement ajustée. Ex. : 0",
  "led.plotBarGraph|param|value": "valeur actuelle à tracer",
  "led.plotBrightness": "Allume la LED spécifiée avec la luminosité spécifiée en utilisant des coordonnées de type (x, y) (x est horizontal, y est vertical). (0,0) est la LED tout en haut à gauche.",
  "led.plotBrightness|param|brightness": "la luminosité de 0 (désactivée) à 255 (lumineux). Ex : 255",
  "led.point": "Récupère l'état activée/désactivée de la LED spécifiée grâce à ses coordonnées (x, y). \n(0, 0) désigne celle tout en haut à gauche.",
  "led.screenshot": "Prend une capture d'écran des LED allumées et renvoie une image.",
  "led.setBrightness": "Règle la luminosité de l'écran sur 0 (éteint) à 255 (luminosité au maximum).",
  "led.setBrightness|param|value": "valeur de la luminosité, par ex. : 255, 127, 0",
  "led.setDisplayMode": "Règle le mode d’affichage entre noir et blanc et niveaux de gris pour le rendu des LED.",
  "led.setDisplayMode|param|mode": "mode d'affichage dans lequel l'écran fonctionne",
  "led.stopAnimation": "Annule l'animation en cours et supprime toutes les animations en attente.",
  "led.toggle": "Active/désactive un pixel en particulier",
  "led.toggleAll": "Inverse l'état de toutes les LED",
  "led.unplot": "Éteint la LED désignée par les coordonnées (x, y) (x est horizontal, y est vertical). (0, 0) désigne celle tout en haut à gauche.",
  "music": "Génération de tonalités musicales.",
  "music.beat": "Renvoie la durée d'un temps en millisecondes",
  "music.beginMelody": "Démarre une mélodie.\nLes notes sont exprimées sous la forme d'une chaîne de caractères au format suivant : NOTE[octave][:durée]",
  "music.beginMelody|param|melodyArray": "la plage de mélodie à jouer. Ex : ['g5:1']",
  "music.beginMelody|param|options": "options de mélodie, une fois / définitivement, au premier plan / en arrière plan",
  "music.builtInMelody": "Récupère une place de mélodie à partir d'une mélodie intégrée.",
  "music.changeTempoBy": "Modifie le tempo de la valeur spécifiée",
  "music.changeTempoBy|param|bpm": "La modification au tempo, en temps par minute. Ex. : 20",
  "music.noteFrequency": "Récupère la fréquence d'une note.",
  "music.noteFrequency|param|name": "le nom de la note en standard US. Ex. : Note.C (A = La, B = Si, C = Do, [...], G = Sol)",
  "music.onEvent": "Enregistrer le code à exécuter sur divers événements mélodiques",
  "music.playTone": "Joue un son par la broche ``P0`` pendant la durée donnée.",
  "music.playTone|param|frequency": "fréquence de la note à jouer, en Hertz (Hz)",
  "music.playTone|param|ms": "durée du son en millisecondes (ms)",
  "music.rest": "Repose (joue rien) pendant une durée spécifiée via broche '' P0''.",
  "music.rest|param|ms": "durée de la pause en millisecondes (ms)",
  "music.ringTone": "Joue un son par la broche ``P0``.",
  "music.ringTone|param|frequency": "fréquence de la note à jouer, en Hertz (Hz)",
  "music.setPlayTone": "Définit une fonction playTone personnalisée pour jouer des mélodies",
  "music.setTempo": "Règle le tempo sur la valeur spécifiée",
  "music.setTempo|param|bpm": "Le nouveau tempo, en battements par minute. Ex. : 120",
  "music.tempo": "Renvoie le tempo en battements par minute. Le tempo est la vitesse (bpm = battements par minute) à laquelle une note est jouée. Plus le tempo est élevé, plus la note sera jouée vite.",
  "parseInt": "Convertissez une chaîne A en entier.",
  "pins": "Contrôle le courant des broches pour les signaux analogiques/numériques, les servos, i2c...",
  "pins.analogPitch": "Envoie un signal à modulation de largeur d'impulsions (PWM) à la broche de ton actuelle. Utilisez `analog set pitch pin` pour définir la broche de ton.",
  "pins.analogPitch|param|frequency": "TODO",
  "pins.analogPitch|param|ms": "TODO",
  "pins.analogReadPin": "Lit la valeur du connecteur comme analogique, c'est à dire comme une valeur comprise entre 0 et 1023.",
  "pins.analogReadPin|param|name": "broche sur laquelle envoyer une valeur. Ex. : AnalogPin.P0",
  "pins.analogSetPeriod": "Attribue à la modulation de largeur d'impulsion (PWN) de la sortie analogique la valeur donnée en **microsecondes** ou `1/1000` millisecondes. Si cette broche n'est pas configurée comme sortie analogique (en utilisant la `broche d'écriture analogique`), l'opération n'a aucun effet.",
  "pins.analogSetPeriod|param|micros": "période en microsecondes. Ex. : 20 000",
  "pins.analogSetPeriod|param|name": "broche analogique sur laquelle régler la période. Ex. : AnalogPin.P0",
  "pins.analogSetPitchPin": "Définit la broche utilisée au moment d'utiliser `analog pitch` ou une musique.",
  "pins.analogSetPitchPin|param|name": "TODO",
  "pins.analogWritePin": "Règle la valeur du connecteur sur analogique. La valeur doit être comprise entre 0 et 1023.",
  "pins.analogWritePin|param|name": "nom de la broche sur laquelle envoyer une valeur. Ex. : AnalogPin.P0",
  "pins.analogWritePin|param|value": "valeur à envoyer à la broche, comprise entre ``0`` et``1023``. Ex. : 1023,0",
  "pins.digitalReadPin": "Lit la broche ou le connecteur indiqué comme 0 ou 1",
  "pins.digitalReadPin|param|name": "broche à lire. Ex. : DigitalPin.P0",
  "pins.digitalWritePin": "Règle la valeur d'une broche ou d'un connecteur sur 0 ou 1.",
  "pins.digitalWritePin|param|name": "broche sur laquelle envoyer une valeur. Ex. : DigitalPin.P0",
  "pins.digitalWritePin|param|value": "valeur à définir sur la broche. Ex. : 1 ou 0",
  "pins.i2cReadNumber": "Lit un nombre provenant d'une adresse I2C en 7-bit",
  "pins.i2cWriteNumber": "Écrit un nombre à une adresse I2C en 7-bit.",
  "pins.map": "Ré-assigne un nombre d'une plage à une autre. Ainsi, une valeur de ``from low`` sera assignée à ``to low``, une valeur de ``from high`` sera assignée à ``to high``, une valeur intermédiaire sera assignée à une valeur intermédiaire, etc.",
  "pins.map|param|fromHigh": "limite supérieure de la plage actuelle de la valeur. Ex. : 1023",
  "pins.map|param|fromLow": "limite inférieure de la plage actuelle de la valeur",
  "pins.map|param|toHigh": "limite supérieure de la plage actuelle de la valeur. Ex. : 4",
  "pins.map|param|toLow": "limite inférieure de la plage actuelle de la valeur",
  "pins.map|param|value": "valeur à assigner dans les plages",
  "pins.onPulsed": "Configure cette broche pour une entrée numérique et génère des événements dont l'horodatage est la durée pendant laquelle cette broche était soir ``high``, soit ``low``.",
  "pins.onPulsed|param|name": "broche numérique à laquelle s'enregistrer. Ex. : DigitalPin.P0",
  "pins.onPulsed|param|pulse": "valeur de l'impulsion. Ex. : PulseValue.High",
  "pins.pulseDuration": "Récupère la durée de la dernière impulsion en microsecondes (ms). Cette fonction doit être appelée depuis une fonction``onPulsed``.",
  "pins.pulseIn|param|name": "broche utilisée pour mesurer l'impulsion. Ex. : DigitalPin.P0",
  "pins.pulseIn|param|value": "valeur de l'impulsion. Ex. : PulseValue.High",
  "pins.servoSetPulse": "Configure une broche en sortie analogique/pwm, règle la période sur 20ms et définit la largeur de l'impulsion, en fonction de la valeur donnée en millisecondes (ms).",
  "pins.servoSetPulse|param|micros": "durée de l'impulsion en microsecondes (ms). Ex. : 1500",
  "pins.servoSetPulse|param|name": "nom de la broche",
  "pins.servoWritePin": "Envoie une valeur au servomoteur pour contrôler l'axe. Sur un servomoteur standard, cela définira l'angle de l'axe (en degrés) en le faisant pivoter jusqu'à l'orientation voulue. Sur un servomoteur en rotation continue, cela définira la vitesse du moteur (avec ``0`` étant la vitesse max dans une direction, ``180`` la vitesse max dans l'autre sens, et une valeur proche de ``90`` arrêtant le mouvement).",
  "pins.servoWritePin|param|name": "broche sur laquelle envoyer une valeur. Ex. : AnalogPin.P0",
  "pins.servoWritePin|param|value": "angle ou vitesse de rotation. Ex. : 180, 90, 0",
  "pins.setEvents": "Configure les événements émis par cette broche. Il est possible de s'inscrire à ces événements en utilisant ``control.onEvent()``.",
  "pins.setEvents|param|name": "broche pour activer le mode événement. Ex : DigitalPin.P0",
  "pins.setEvents|param|type": "le type d'événement que cette broche émet. Ex : PinEventType.Edge",
  "pins.setPull": "Configure la traction de cette broche.",
  "pins.setPull|param|name": "broche dont il faut activer le mode traction. Ec. : DigitalPin.P0",
  "pins.setPull|param|pull": "une des configurations de traction mbed. Ex. : PinPullMode.PullUp",
  "pins.spiFormat": "Définit le mode et les bits SPI",
  "pins.spiFormat|param|bits": "le nombre de bits. Ex : 8",
  "pins.spiFormat|param|mode": "le mode. Ex : 3",
  "pins.spiFrequency": "Définit la fréquence SPI",
  "pins.spiFrequency|param|frequency": "la fréquence de l'horloge. Ex 1000000",
  "pins.spiPins": "Définit les broches MOSI, MISO, SCK utilisées par l'instance SPI",
  "pins.spiWrite": "Écrivez sur l'esclave SPI et renvoyez une réponse",
  "pins.spiWrite|param|value": "Données à envoyer à l'esclave SPI",
  "serial": "Lire et écrire des données sur une connexion série.",
  "serial.onDataReceived": "Enregistre un événement à déclencher quand un des délimiteurs correspond.",
  "serial.onDataReceived|param|delimiters": "les caractères avec lesquels les caractères reçus doivent être associés.",
  "serial.readBuffer": "Lit plusieurs caractères du tampon reçu. Marque une pause jusqu'à ce que suffisamment de caractères soient présents.",
  "serial.readBuffer|param|length": "longueur par défaut du tampon. Ex : 64",
  "serial.readLine": "Lit une ligne de texte d'un port série.",
  "serial.readString": "Lit les données reçues du tampon sous la forme d'une chaîne",
  "serial.readUntil": "Lit une ligne de texte d'un port série et renvoie le tampon quand le délimiteur est atteint.",
  "serial.readUntil|param|delimiter": "le délimiteur de texte qui sépare chaque morceau de texte",
  "serial.redirect": "Configure l'entrée et la sortie série pour utiliser les broches à la place de la connexion USB.",
  "serial.redirectToUSB": "Redirige l'entrée et la sortie série pour utiliser la connexion USB.",
  "serial.redirect|param|rate": "le nouveau débit en bauds. Ex : 115200",
  "serial.redirect|param|rx": "la nouvelle broche de réception. Ex : SerialPin.P1",
  "serial.redirect|param|tx": "nouvelle broche de transmission. Ex : SerialPin.P0",
  "serial.writeBuffer": "Envoie un tampon via la connexion Série",
  "serial.writeLine": "Imprime une ligne de texte via le port série",
  "serial.writeNumber": "Imprime une valeur numérique via le port série",
  "serial.writeString": "Envoie du texte via la connexion série.",
  "serial.writeValue": "Écrit une ligne paire ``nom: valeur`` via le port série.",
  "serial.writeValue|param|name": "nom du flux de valeurs. Ex : x",
  "serial.writeValue|param|value": "à envoyer"
}