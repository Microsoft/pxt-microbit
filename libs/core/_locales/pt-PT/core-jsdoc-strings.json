{
  "AcceleratorRange.EightG": "O acelerador mede forças até 8 gravidades",
  "AcceleratorRange.FourG": "O acelerador mede forças até 4 gravidades",
  "AcceleratorRange.OneG": "O acelerador mede forças até 1 gravidade",
  "AcceleratorRange.TwoG": "O acelerador mede forças até 2 gravidades",
  "Array": "Adicionar, remover e substituir os itens nas listas.\n\nAdicionar, remover e substituir os itens nas listas.",
  "Array.filter": "Devolve os elementos de uma matriz que atendam à condição especificada numa função de retorno de chamada.",
  "Array.filter|param|callbackfn": "Uma função que aceita até dois argumentos. O método de filtro chama a função callbackfn uma vez para cada elemento na matriz.",
  "Array.get": "Obter o valor num índice específico.",
  "Array.get|param|index": "a posição baseada em zero na lista do item, por exemplo: 0",
  "Array.indexOf": "Devolve o índice da primeira ocorrência de um valor numa matriz.",
  "Array.indexOf|param|fromIndex": "O índice de matriz no qual se deseja iniciar a pesquisa. Se fromIndex for omitido, a pesquisa começará no índice 0.",
  "Array.indexOf|param|item": "O valor a localizar na matriz.",
  "Array.insertAt": "Insere o valor num índice específico, aumenta 1 no comprimento da matriz.",
  "Array.insertAt|param|index": "a posição baseada em zero na lista para inserir o valor, por exemplo: 0",
  "Array.insertAt|param|value": "para inserir, por exemplo: 0",
  "Array.length": "Obtém ou define o comprimento da matriz. Este número é um acima do maior elemento definido numa matriz.",
  "Array.map": "Chamar uma função de retorno de chamada definida em cada elemento de uma matriz, e devolver uma matriz que contém os resultados.",
  "Array.map|param|callbackfn": "Uma função que aceita até dois argumentos. O método de mapa chama a função callbackfn uma vez para cada elemento na matriz.",
  "Array.pop": "Remove o último elemento de uma matriz e devolve-o.",
  "Array.push": "Anexe novos elementos a uma matriz.",
  "Array.push|param|item": "para acrescentar à matriz.",
  "Array.reduce": "Chama a função de retorno de chamada especificada para todos os elementos numa matriz. O valor de devolução da função de retorno de chamada é o resultado acumulado, e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.",
  "Array.reduce|param|callbackfn": "Uma função que aceita até três argumentos. O método de redução chama a função callbackfn uma vez para cada elemento na matriz.",
  "Array.reduce|param|initialValue": "Valor inicial para começar a acumulação. A primeira chamada para a função de callbackfn fornece este valor como um argumento em vez de um valor de matriz.",
  "Array.removeAt": "Remove o elemento num determinado índice.",
  "Array.removeAt|param|index": "a posição baseada em zero na lista de onde remover o valor, por exemplo: 0",
  "Array.removeElement": "Remove a primeira ocorrência de um objeto. Devolve como verdadeiro se removido.",
  "Array.reverse": "Inverte os elementos numa matriz. O primeiro elemento da matriz torna-se o último, e o último elemento da matriz torna-se o primeiro.",
  "Array.set": "Armazena um valor num índice específico.",
  "Array.set|param|index": "a posição baseada em zero na lista a armazenar o valor, por exemplo: 0",
  "Array.shift": "Remove o primeiro elemento de uma matriz e devolve-o. Este método altera o comprimento da matriz.",
  "Array.slice": "Devolve uma seção de uma matriz.",
  "Array.slice|param|end": "O fim da parte especificada da matriz. por exemplo: 0",
  "Array.slice|param|start": "O início da parte especificada da matriz. por exemplo: 0",
  "Array.sort": "Dispõe os elementos de uma matriz no lugar e devolve a matriz. A disposição não é necessariamente estável.",
  "Array.splice": "Remove elementos de uma matriz.",
  "Array.splice|param|deleteCount": "O número de elementos a remover. por exemplo: 0",
  "Array.splice|param|start": "O local com base em zero na matriz, onde se inicia a remoção de elementos. por exemplo: 0",
  "Array.unshift": "Adicionar um elemento ao início de uma matriz e devolver o novo comprimento da matriz.",
  "Array.unshift|param|value": "a inserir no início da matriz.",
  "Boolean.toString": "Devolve uma representação em string de um objeto.",
  "Buffer.fill": "Preenche (um fragmento) do buffer com um valor determinado.",
  "Buffer.getNumber": "Lê um número no formato especificado a partir do buffer.",
  "Buffer.length": "Devolve o comprimento de um objeto Buffer.",
  "Buffer.rotate": "Rodar o buffer para a esquerda no lugar.",
  "Buffer.rotate|param|length": "número de elementos no buffer. Se for negativo, o comprimento é definido como o comprimento do buffer menos o início. por exemplo: -1",
  "Buffer.rotate|param|offset": "número de bytes a deslocar; utilizar o valor negativo para mudar para a direita",
  "Buffer.rotate|param|start": "iniciar desvio no buffer. O padrão é 0.",
  "Buffer.setNumber": "Escreve um número no formato especificado no buffer.",
  "Buffer.shift": "Mudar buffer no local, com preenchimento zero.",
  "Buffer.shift|param|length": "número de elementos no buffer. Se for negativo, o comprimento é definido como o comprimento do buffer menos o início. por exemplo: -1",
  "Buffer.shift|param|offset": "número de bytes a deslocar; utilizar o valor negativo para mudar para a direita",
  "Buffer.shift|param|start": "iniciar desvio no buffer. O padrão é 0.",
  "Buffer.slice": "Devolver uma cópia de um fragmento de um buffer.",
  "Buffer.write": "Escrever o conteúdo de `src` em `dstOffset` no buffer atual.",
  "EventCreationMode": "Como criar o evento.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent foi iniciado, e os seus manipuladores de eventos são imediatamente disparados (não é adequada utilização em interrupções!).",
  "EventCreationMode.CreateOnly": "MicroBitEvent iniciado, e não ocorre processamento adicional.",
  "Gesture.EightG": "Dispara quando é detectado um choque 8G",
  "Gesture.FreeFall": "Dispara quando a placa está a cair!",
  "Gesture.LogoDown": "Dispara quando o logótipo está para baixo e o ecrã está vertical",
  "Gesture.LogoUp": "Dispara quando o logótipo está para cima e o ecrã está vertical",
  "Gesture.ScreenDown": "Dispara quando o ecrã aponta para cima e a placa está horizontal",
  "Gesture.ScreenUp": "Disparado quando o ecrã aponta para baixo e a placa está horizontal",
  "Gesture.Shake": "Dispara quando agitado",
  "Gesture.SixG": "Dispara quando é detectado um choque 6G",
  "Gesture.ThreeG": "Dispara quando é detectado um choque 3G",
  "Gesture.TiltLeft": "Dispara quando o ecrã aponta para a esquerda",
  "Gesture.TiltRight": "Dispara quando o ecrã aponta para a direita",
  "Image.clear": "Desativa todos os pixeis.",
  "Image.height": "Obtém a altura em filas (sempre 5)",
  "Image.pixel": "Obter o estado de pixel na posição ``(x,y)``",
  "Image.pixelBrightness": "Obtém o brilho do pixel ([0..255]) numa determinada posição",
  "Image.pixel|param|x": "TODO",
  "Image.pixel|param|y": "TODO",
  "Image.plotFrame": "Desenha o ``índice``o quadro da imagem no ecrã.",
  "Image.plotFrame|param|xOffset": "índice da coluna para começar a exibir a imagem",
  "Image.plotImage": "Traça a imagem numa determinada coluna para o ecrã",
  "Image.scrollImage": "Faz scroll de uma imagem.",
  "Image.scrollImage|param|frameOffset": "x desvio movido em cada etapa de animação, por exemplo: 1, 2, 5",
  "Image.scrollImage|param|interval": "tempo entre cada etapa de animação em milissegundos, por exemplo: 200",
  "Image.setPixel": "Define um estado de pixel na posição ``(x,y)``",
  "Image.setPixelBrightness": "Define um brilho de pixel específico numa determinada posição",
  "Image.setPixel|param|value": "TODO",
  "Image.setPixel|param|x": "TODO",
  "Image.setPixel|param|y": "TODO",
  "Image.showFrame": "Mostra um quadro específico da faixa de imagem.",
  "Image.showFrame|param|frame": "TODO",
  "Image.showImage": "Mostra um quadro da imagem no desvio ``x offset``.",
  "Image.showImage|param|xOffset": "índice da coluna para começar a exibir a imagem",
  "Image.width": "Obtém a largura em colunas",
  "Math": "Operações mais complexas com números.",
  "Math.abs": "Devolve o valor absoluto de um número (o valor sem considerar se é positivo ou negativo). \nPor exemplo, o valor absoluto de -5 é o mesmo que o valor absoluto de 5.",
  "Math.pow": "Devolver o valor de uma expressão base levada a uma potência especificada.",
  "Math.random": "Devolver um número pseudo-aleatório entre 0 e `limite`.",
  "Math.randomBoolean": "Gera um valor 'verdadeiro' ou 'falso' aleatoriamente, como no jogo da moeda.",
  "Math.random|param|limit": "o limite superior do número gerado, por exemplo: 4.",
  "Math.sqrt": "Devolve a raiz quadrada de um número.",
  "Number.toString": "Devolve uma representação em string de um número.",
  "String": "Combina, divide e pesquisa strings de texto.\n\nCombina, divide e pesquisa strings de texto.",
  "String.charAt": "Devolve o caractere no índice especificado.",
  "String.charAt|param|index": "O índice baseado em zero do caractere desejado, por exemplo: 0",
  "String.charCodeAt": "Devolve o valor Unicode do caractere no local especificado.",
  "String.compare": "Veja como a ordem dos caracteres em duas strings é diferente (em codificação ASCII).",
  "String.concat|param|other": "A string a anexar ao fim da string, por exemplo: \"adicione-me!\"",
  "String.fromCharCode": "Fazer uma string a partir do código de caractere ASCII fornecido.",
  "String.length": "Devolver o comprimento de um objeto String.",
  "String.substr": "Devolve uma substring da string atual.",
  "String.substr|param|length": "número de caracteres a extrair, por exemplo: 3",
  "String.substr|param|start": "primeiro índice de caracteres; pode ser negativo desde a contagem do final, por exemplo: 0",
  "basic": "Dá acesso à funcionalidade básica do micro:bit.",
  "basic.clearScreen": "Desliga todos os LEDs",
  "basic.forever": "Repete para sempre o código em segundo plano. Permite que outros códigos sejam executados em cada iteração.",
  "basic.pause": "Pausa durante o tempo especificado em milissegundos",
  "basic.pause|param|ms": "duração da pausa, por exemplo: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Desenha uma imagem no ecrã de LED.",
  "basic.plotLeds|param|leds": "padrão de LEDs a ligar/desligar",
  "basic.showAnimation": "Mostra uma sequência de ecrãs LED como animação.",
  "basic.showAnimation|param|interval": "tempo em milissegundos entre cada redesenho",
  "basic.showAnimation|param|leds": "padrão de LEDs a ligar/desligar",
  "basic.showArrow": "Mostra uma seta no ecrã",
  "basic.showArrow|param|direction": "a direção da seta",
  "basic.showArrow|param|interval": "a quantidade de tempo (em milissegundos) para mostrar o ícone. O padrão é 600.",
  "basic.showIcon": "Desenha o ícone selecionado no ecrã LED",
  "basic.showIcon|param|icon": "a id do ícone de horários",
  "basic.showIcon|param|interval": "a quantidade de tempo (em milissegundos) para mostrar o ícone. O padrão é 600.",
  "basic.showLeds": "Desenha uma imagem no ecrã de LED.",
  "basic.showLeds|param|interval": "tempo em milissegundos para fazer uma pausa depois de desenhar",
  "basic.showLeds|param|leds": "o padrão de LED para ligar/desligar",
  "basic.showNumber": "Fazer scroll de um número no ecrã. Se o número encaixar no ecrã (ou seja, um único dígito), não fazer scroll.",
  "basic.showNumber|param|interval": "velocidade de scroll; por exemplo: 150, 200, 100, -100",
  "basic.showString": "Mostra texto no ecrã, um caractere de cada vez. Se a string encaixar no ecrã (ou seja, uma letra), não faz scroll.",
  "basic.showString|param|interval": "rapidez de mudança de caracteres; eg: 150, 100, 200, -100",
  "basic.showString|param|text": "o texto que vai fazer scroll no ecrã, por exemplo: \"Olá!\"",
  "control": "Tempo de execução e utilitários de eventos.",
  "control.inBackground": "Agenda código a executar em segundo plano.",
  "control.reset": "Restaura o BBC micro:bit.",
  "control.waitMicros": "Bloqueia a fibra atual pelos microssegundos determinados",
  "control.waitMicros|param|micros": "número de microsegundos de espera. por exemplo: 4",
  "game": "Um motor de jogo de sprite de um único LED",
  "game.LedSprite": "Um sprite de jogo renderizado como um único LED",
  "game.LedSprite.blink": "Informa a duração de ``intermitência`` de um sprite",
  "game.LedSprite.brightness": "Informa o ``brilho` de um sprite no ecrã LED",
  "game.LedSprite.change": "Altera uma propriedade do sprite",
  "game.LedSprite.changeBlinkBy": "Alterar a duração da ``intermitência`` na quantidade de milissegundos determinada",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "Altera a posição ``y`` pelo montante determinado",
  "game.LedSprite.changeBrightnessBy|param|value": "o valor para mudar o brilho",
  "game.LedSprite.changeDirectionBy": "Alterar a posição``direção`` pelo montante determinado por virar à direita",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "Altera a posição ``x`` pelo montante determinado",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "Altera a posição ``y`` pelo montante determinado",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "o nome da propriedade a alterar",
  "game.LedSprite.change|param|value": "quantidade da mudança, por exemplo: 1",
  "game.LedSprite.delete": "Apaga o sprite do motor de jogo. O sprite já não aparecerá no ecrã nem vai interagir com outros sprites.",
  "game.LedSprite.direction": "Informa a direção atual do sprite",
  "game.LedSprite.get": "Obtém uma propriedade do sprite",
  "game.LedSprite.get|param|property": "o nome da propriedade a alterar",
  "game.LedSprite.goTo": "Ir para esta posição no ecrã",
  "game.LedSprite.goTo|param|x": "TODO",
  "game.LedSprite.goTo|param|y": "TODO",
  "game.LedSprite.ifOnEdgeBounce": "Inverter a direção se estiver a tocar na borda do ecrã e virado nessa direção.",
  "game.LedSprite.isTouching": "Reporta como verdadeiro se o sprite tiver a mesma posição que o sprite especificado",
  "game.LedSprite.isTouchingEdge": "Reporta como verdadeiro se o sprite estiver a tocar numa borda",
  "game.LedSprite.isTouching|param|other": "TODO",
  "game.LedSprite.move": "Mover um certo número de LEDs na direção atual",
  "game.LedSprite.move|param|leds": "número de leds a mover, por exemplo: 1, -1",
  "game.LedSprite.off": "Desativa o sprite (ligado por defeito)",
  "game.LedSprite.on": "Ativa o sprite (ligado por defeito)",
  "game.LedSprite.set": "Define uma propriedade do sprite",
  "game.LedSprite.setBlink": "Define o intervalo de duração da intermitência em milissegundos.",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "Define o ``brilho`` de um sprite",
  "game.LedSprite.setBrightness|param|brightness": "o brilho de 0 (desativado) a 255 (ativado), por exemplo: 255.",
  "game.LedSprite.setDirection": "Define a direção do sprite atual, arredondada para o múltiplo mais próximo de 45",
  "game.LedSprite.setDirection|param|degrees": "TODO",
  "game.LedSprite.setX": "Define a posição ``x`` de um sprite",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "Define a posição ``y`` de um sprite",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "o nome da propriedade a alterar",
  "game.LedSprite.turn": "Virar o sprite",
  "game.LedSprite.turnLeft": "Virar à esquerda (sentido anti-horário)",
  "game.LedSprite.turnLeft|param|degrees": "TODO",
  "game.LedSprite.turnRight": "Virar à direita (sentido horário)",
  "game.LedSprite.turnRight|param|degrees": "TODO",
  "game.LedSprite.turn|param|degrees": "ângulo de viragem em graus, por exemplo: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "esquerda ou direita",
  "game.LedSprite.x": "Reporta a posição ``x`` de um sprite no ecrã LED",
  "game.LedSprite.y": "Reporta a posição ``y`` de um sprite no ecrã LED",
  "game.addLife|param|lives": "TODO",
  "game.addScore": "Adiciona pontos à pontuação atual e mostra uma animação",
  "game.addScore|param|points": "quantidade de pontos a mudar, por exemplo: 1",
  "game.gameOver": "Mostra um jogo sobre animação e a pontuação.",
  "game.isPaused": "Indica se a renderização do jogo está em pausa para permitir outras animações",
  "game.pause": "Interrompe o motor de processamento do jogo para permitir outras animações",
  "game.removeLife|param|life": "TODO",
  "game.resume": "Reinicia o motor de renderização do jogo",
  "game.score": "Obtém a pontuação atual",
  "game.setLife|param|value": "TODO",
  "game.setScore": "Define o valor de pontuação atual",
  "game.setScore|param|value": "novo valor de pontuação.",
  "game.startCountdown": "Mostra uma animação e, de seguida, inicia um cronómetro de contagem do jogo, que causa Game Over quando atinge 0",
  "game.startCountdown|param|ms": "duração de contagem regressiva em milissegundos, por exemplo: 10000",
  "images": "Criação, manipulação e visualização de imagens LED.",
  "images.createBigImage": "Cria uma imagem com 2 quadros.",
  "images.createImage": "Cria uma imagem que se encaixa no ecrã LED.",
  "input": "Eventos e dados de sensores",
  "input.acceleration": "Obter o valor de aceleração em mili-gravidade (quando a placa está deitada com o ecrã para cima, x=0, y=0 e z=-1024)",
  "input.acceleration|param|dimension": "TODO",
  "input.buttonIsPressed": "Obter o estado do botão (premido ou não) para ``A`` e ``B``.",
  "input.buttonIsPressed|param|button": "o botão para consultar o pedido, por exemplo: Botão.A",
  "input.calibrate": "Obsoleto, utilizar antes input.calibrateCompass.",
  "input.calibrateCompass": "Obsoleto, a calibração da bússola é automática.",
  "input.compassHeading": "Obter a orientação atual em graus.",
  "input.lightLevel": "Lê o nível de luz aplicado ao ecrã LED, numa gama de ``0`` (escuro) até ``255`` brilhante.",
  "input.magneticForce": "Obter o valor da força magnética em ``micro-Teslas`` (``µT``). Esta função não é suportada no simulador.",
  "input.magneticForce|param|dimension": "TODO",
  "input.onButtonPressed": "Fazer alguma coisa quando um botão (A, B ou A + B) for premido e solto novamente.",
  "input.onButtonPressed|param|body": "código a executar ao gerar evento",
  "input.onButtonPressed|param|button": "o botão que precisa de ser premido",
  "input.onGesture": "Fazer algo quando é feito um gesto (como agitar o micro:bit).",
  "input.onGesture|param|body": "código a executar quando o gesto é gerado",
  "input.onGesture|param|gesture": "o tipo de gesto a seguir, por exemplo: Gesture.Shake",
  "input.onLogoDown": "Anexa o código a executar quando o logótipo estiver orientado para baixo e a placa estiver vertical.",
  "input.onLogoDown|param|body": "TODO",
  "input.onLogoUp": "Anexa o código a executar quando o logótipo estiver orientado para cima e a placa estiver vertical.",
  "input.onLogoUp|param|body": "TODO",
  "input.onPinPressed": "Fazer alguma coisa quando um pin for tocado e solto novamente (enquanto se toca também no pin GND).",
  "input.onPinPressed|param|body": "o código a executar ao premir o pin",
  "input.onPinPressed|param|name": "o pin que precisa de ser premido, por exemplo: TouchPin.P0",
  "input.onPinReleased": "Fazer alguma coisa ao soltar um pin.",
  "input.onPinReleased|param|body": "o código a executar ao soltar o pin",
  "input.onPinReleased|param|name": "o pin que precisa de ser solto, por exemplo: TouchPin.P0",
  "input.onScreenDown": "Anexa o código a executar quando o ecrã está virado para baixo.",
  "input.onScreenDown|param|body": "TODO",
  "input.onScreenUp": "Anexa o código a executar quando o ecrã está virado para cima.",
  "input.onScreenUp|param|body": "TODO",
  "input.onShake": "Anexa o código a executar ao abanar o dispositivo.",
  "input.onShake|param|body": "TODO",
  "input.pinIsPressed": "Obter o estado do pin (premido ou não). Requer manter o chão para fechar o circuito.",
  "input.pinIsPressed|param|name": "pin usado para detectar o toque, por exemplo: TouchPin.P0",
  "input.rotation": "A afinação ou rolagem do dispositivo, rotação à volta do ``eixo-x`` ou ``eixo-y``.",
  "input.rotation|param|kind": "TODO",
  "input.runningTime": "Obtém o número de milissegundos decorridos desde que foi ligado.",
  "input.runningTimeMicros": "Obtém o número de microssegundos decorridos desde que foi ligado.",
  "input.setAccelerometerRange": "Define o intervalo de amostra do acelerómetro em gravidades.",
  "input.setAccelerometerRange|param|range": "um valor descreve a força máxima da aceleração medida",
  "input.temperature": "Obtém a temperatura em graus Celsius (°C).",
  "led": "Controlo do ecrã LED.",
  "led.brightness": "Obtém o brilho do ecrã de 0 (sem brilho) a 255 (brilho total).",
  "led.displayMode": "Obtém o modo de exibição atual",
  "led.enable": "Ativa ou desativa a exibição",
  "led.fadeIn": "Fade in no display do ecrã.",
  "led.fadeIn|param|ms": "TODO",
  "led.fadeOut": "Fade out do brilho do ecrã.",
  "led.fadeOut|param|ms": "TODO",
  "led.plot": "Ligar o LED especificado ao utilizar coordenadas x, y (x é horizontal, y é vertical). (0,0) é o canto superior esquerdo.",
  "led.plotAll": "Liga todos os LEDS",
  "led.plotBarGraph": "Exibe um gráfico de barras vertical com base no valor `valor` e`alto`.\nSe `alto` for 0, o gráfico é ajustado automaticamente.",
  "led.plotBarGraph|param|high": "valor máximo. Se for 0, o valor máximo é ajustado automaticamente, por exemplo: 0",
  "led.plotBarGraph|param|value": "valor atual para traçar",
  "led.plotBrightness": "Ligar o LED especificado com brilho específico ao utilizar coordenadas x, y (x é horizontal, y é vertical). (0,0) é o canto superior esquerdo.",
  "led.plotBrightness|param|brightness": "o brilho de 0 (sem brilho) a 255 (brilhante), por exemplo: 255",
  "led.plotBrightness|param|x": "a coordenada horizontal do LED a começar do 0",
  "led.plotBrightness|param|y": "a coordenada vertical do LED a começar do 0",
  "led.plot|param|x": "a coordenada horizontal do LED a começar do 0",
  "led.plot|param|y": "a coordenada vertical do LED a começar do 0",
  "led.point": "Obter o estado do LED especificado (ligado/desligado) ao utilizar as coordenadas x, y. (0,0) é o canto superior esquerdo.",
  "led.point|param|x": "TODO",
  "led.point|param|y": "TODO",
  "led.screenshot": "Faz uma captura de ecrã do ecrã LED e devolve uma imagem.",
  "led.setBrightness": "Define o brilho do ecrã de 0 (sem brilho) até 255 (brilho total).",
  "led.setBrightness|param|value": "o valor do brilho, por exemplo: 255, 127, 0",
  "led.setDisplayMode": "Define o modo de exibição entre preto e branco e tons de cinza para renderizar LEDs.",
  "led.setDisplayMode|param|mode": "modo o modo de exibição em que o ecrã opera",
  "led.stopAnimation": "Cancela a animação atual e limpa outras animações pendentes.",
  "led.toggle": "Alterna um determinado pixel",
  "led.toggleAll": "Inverte o LED de exibição atual",
  "led.toggle|param|x": "TODO",
  "led.toggle|param|y": "TODO",
  "led.unplot": "Desligar o LED especificado ao utilizar coordenadas x, y (x é horizontal, y é vertical). (0,0) é o canto superior esquerdo.",
  "led.unplot|param|x": "TODO",
  "led.unplot|param|y": "TODO",
  "music": "Gerar tons de música.",
  "music.beat": "Devolve a duração de uma batida em milissegundos",
  "music.beginMelody": "Começa a tocar uma melodia.\nAs notas são expressas como uma string de caracteres com este formato: NOTE[octave] [:duration]",
  "music.beginMelody|param|melodyArray": "a matriz de melodia a reproduzir, por exemplo: ['g5:1']",
  "music.beginMelody|param|options": "opções de melodia, uma vez/para sempre, em primeiro plano/em segundo plano",
  "music.builtInMelody": "Obtém a matriz de melodia de uma melodia embutida.",
  "music.changeTempoBy": "Altera o ritmo na quantidade especificada",
  "music.changeTempoBy|param|bpm": "A mudança em batidas por minuto no ritmo, por exemplo: 20",
  "music.noteFrequency": "Obtém a frequência de uma nota.",
  "music.noteFrequency|param|name": "o nome da nota, por exemplo: Note.C",
  "music.onEvent": "Regista o código a executar em vários eventos de melodia",
  "music.playTone": "Reproduz um tom através de pin ``P0`` durante o período determinado.",
  "music.playTone|param|frequency": "afinação do tom a reproduzir em Hertz (Hz)",
  "music.playTone|param|ms": "duração de tom em milissegundos (ms)",
  "music.rest": "Pausa (nada é reproduzido) durante um tempo especificado através do pin ``P0``.",
  "music.rest|param|ms": "duração de pausa em milissegundos (ms)",
  "music.ringTone": "Reproduz um tom através de pin ``P0``.",
  "music.ringTone|param|frequency": "afinação do tom a reproduzir em Hertz (Hz)",
  "music.setPlayTone": "Define uma função personalizada playTone para tocar melodias",
  "music.setTempo": "Define o ritmo na quantidade especificada",
  "music.setTempo|param|bpm": "O novo ritmo em batimentos por minuto, por exemplo: 120",
  "music.tempo": "Devolve o tempo em batidas por minuto. O tempo é a velocidade (bpm = batidas por minuto) em que as notas são reproduzidas. Quanto maior o valor do tempo, mais rapidamente as notas serão reproduzidas.",
  "parseInt": "Converter string A para um número inteiro.",
  "pins": "Correntes de controlo em Pins para sinais analógicos/digitais, servos, i2c, ...",
  "pins.analogPitch": "Emite um sinal de modulação de largura de pulso (PWM) para o pin de afinação atual. Utilize o \"pin de afinação de ajuste analógico\" para definir o pin de afinação.",
  "pins.analogPitch|param|frequency": "frequência a modular em Hz.",
  "pins.analogPitch|param|ms": "duração da afinação em milissegundos.",
  "pins.analogReadPin": "Lê o valor do conector como analógico, isto é, como um valor compreendido entre 0 e 1023.",
  "pins.analogReadPin|param|name": "pin a gravar, por exemplo: AnalogPin.P0",
  "pins.analogSetPeriod": "Configura a modulação de largura de pulso (PWM) da saída analógica para o valor fornecido em **microssegundos** ou `1/1000` milissegundos. Se este pin não estiver configurado como saída analógica (ao utilizar `pin de gravação analógica`), a operação não tem efeito.",
  "pins.analogSetPeriod|param|micros": "período em micro segundos. por exemplo: 20000",
  "pins.analogSetPeriod|param|name": "pin analógico para definir o período, por exemplo: AnalogPin.P0",
  "pins.analogSetPitchPin": "Define o pin utilizado ao utilizar 'afinação analógica' ou música.",
  "pins.analogSetPitchPin|param|name": "pin de onde se modula a afinação",
  "pins.analogWritePin": "Definir o valor do conector como analógico. O valor deve ser compreendido entre 0 e 1023.",
  "pins.analogWritePin|param|name": "nome de pin a gravar, por exemplo: AnalogPin.P0",
  "pins.analogWritePin|param|value": "valor a gravar no pin entre ``0`` e ``1023``, por exemplo: 1023,0",
  "pins.digitalReadPin": "Ler o pin especificado ou conector como 0 ou 1",
  "pins.digitalReadPin|param|name": "pin de leitura, por exemplo: DigitalPin.P0",
  "pins.digitalWritePin": "Definir um valor de pin ou conector como 0 ou 1.",
  "pins.digitalWritePin|param|name": "pin a gravar, por exemplo: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "valor a definir no pin, 1 por exemplo, 0",
  "pins.i2cReadNumber": "Ler um número do endereço I2C de 7 bits.",
  "pins.i2cWriteNumber": "Escrever um número no endereço I2C de 7 bits.",
  "pins.map": "Remapeia um número de um alcance para outro. Ou seja, um valor de ``de grave`` seria mapeado para ``para grave``, um valor de ``de agudo`` para ``para agudo``, valores intermédios para valores intermédios, etc.",
  "pins.map|param|fromHigh": "o limite superior do intervalo atual do valor, por exemplo: 1023",
  "pins.map|param|fromLow": "o limite inferior do intervalo atual do valor",
  "pins.map|param|toHigh": "o limite superior da meta do valor intervalo, por exemplo: 4",
  "pins.map|param|toLow": "o limite inferior do intervalo de destino do valor",
  "pins.map|param|value": "valor a mapear em intervalos",
  "pins.onPulsed": "Configura este pin para uma entrada digital e gera eventos em que o carimbo de data/hora é a duração em que este pino era ``agudo`` ou ``grave``.",
  "pins.onPulsed|param|name": "pin digital onde registar, por exemplo: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "o valor do pulso, por exemplo: PulseValue.High",
  "pins.pulseDuration": "Obtém a duração do último pulso em micro-segundos. Esta função deve ser chamada a partir de um manipulador ``onPulsed``.",
  "pins.pulseIn|param|name": "o pino que mede o pulso, por exemplo: DigitalPin.P0",
  "pins.pulseIn|param|value": "o valor do pulso, por exemplo: PulseValue.High",
  "pins.servoSetPulse": "Configura este pin IO como uma saída analógica/pwm, configura o período para ser 20 ms e define a largura do pulso, com base no valor que é dado **microssegundos** ou `1/1000` milissegundos.",
  "pins.servoSetPulse|param|micros": "duração do pulso em micro-segundos, por exemplo: 1500",
  "pins.servoSetPulse|param|name": "nome do pin",
  "pins.servoWritePin": "Grava um valor no servo, controlando o eixo de acordo. Num servo padrão, ajustará o ângulo do eixo (em graus), movendo o eixo para essa orientação. Num servo de rotação contínua, ajustará a velocidade do servo (com `` 0`` a ser velocidade total numa direção, `` 180`` a ser velocidade total no outro e um valor perto de `` 90`` a não ser movimento).",
  "pins.servoWritePin|param|name": "pin a gravar, por exemplo: AnalogPin.P0",
  "pins.servoWritePin|param|value": "ângulo ou velocidade de rotação, por exemplo: 180,90,0",
  "pins.setEvents": "Configura os eventos emitidos por este pin. Os eventos podem ser inscritos ao utilizar ``control.onEvent ()``.",
  "pins.setEvents|param|name": "pin para definir o modo de evento ativado, por exemplo: DigitalPin.P0",
  "pins.setEvents|param|type": "o tipo de eventos para este pin para emitir, por exemplo: PinEventType.Edge",
  "pins.setPull": "Configura a força deste pin.",
  "pins.setPull|param|name": "pin para definir o modo de pull ativado, por exemplo: DigitalPin.P0",
  "pins.setPull|param|pull": "uma das configurações pull mbed, por exemplo: PinPullMode.PullUp",
  "pins.spiFormat": "Define os bits SPI e o modo",
  "pins.spiFormat|param|bits": "o número de bits, por exemplo: 8",
  "pins.spiFormat|param|mode": "o modo, por exemplo: 3",
  "pins.spiFrequency": "Define a frequência SPI",
  "pins.spiFrequency|param|frequency": "a frequência do relógio, por exemplo: 1000000",
  "pins.spiPins": "Define os pins MOSI, MISO, SCK utilizados pela instância do SPI",
  "pins.spiWrite": "Escreve no SPI slave e devolve a resposta",
  "pins.spiWrite|param|value": "Dados a enviar para o SPI slave",
  "serial": "Ler e gravar dados sobre uma ligação serial.",
  "serial.onDataReceived": "Regista um evento a acionar quando um dos delimitadores é correspondido.",
  "serial.onDataReceived|param|delimiters": "os caracteres a fazer corresponder com os caracteres recebidos.",
  "serial.readBuffer": "Lê vários caracteres do buffer de recepção e preenche um buffer de utilizador.",
  "serial.readBuffer|param|length": "tamanho padrão do buffer, por exemplo: 64",
  "serial.readLine": "Lê uma linha de texto da porta serial.",
  "serial.readString": "Lê os dados no buffer recebidos como uma string",
  "serial.readUntil": "Lê uma linha de texto da porta serial e devolve o buffer quando o delimitador é atingido.",
  "serial.readUntil|param|delimiter": "delimitador de texto que separa cada bloco de texto",
  "serial.redirect": "A configurar dinamicamente a instância serial para utilizar pins diferentes de USBTX e USBRX.",
  "serial.redirectToUSB": "Dirija a entrada e a saída serial para utilizar a ligação USB.",
  "serial.redirect|param|rate": "a nova taxa de transmissão em baud. por exemplo: 115200",
  "serial.redirect|param|rx": "o novo pin de recepção, por exemplo: SerialPin.P1",
  "serial.redirect|param|tx": "os novos pins de transmissão, por exemplo: SerialPin.P0",
  "serial.writeBuffer": "Envia um buffer através de ligação Serial",
  "serial.writeLine": "Imprime uma linha de texto no serial",
  "serial.writeNumber": "Imprime um valor numérico no serial",
  "serial.writeString": "Envia um pedaço de texto através de ligação Serial.",
  "serial.writeValue": "Escreve uma ``name: value`` linha par no serial.",
  "serial.writeValue|param|name": "nome do fluxo de valor, por exemplo: x",
  "serial.writeValue|param|value": "escrever"
}