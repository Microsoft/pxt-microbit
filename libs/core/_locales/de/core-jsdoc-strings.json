{
  "Math.randomBoolean": "Erzeugt zufällig einen \"wahr\" oder \"falsch\"-Wert, wie bei einem Münzwurf.",
  "String.fromCharCode": "Erstelle Sie eine Zeichenfolge aus dem angegebenen ASCII-Zeichencode.",
  "basic": "Bietet Zugriff auf grundlegende mini-Funktionalität.",
  "basic.clearScreen": "Schalte alle LEDs aus",
  "basic.forever": "Wiederholt immer wieder den Code im Hintergrund. Bei jeder Iteration ist es möglich, anderen Code auszuführen.",
  "basic.pause": "Pausiere für die angegebene Zeit in Millisekunden",
  "basic.pause|param|ms": "wie lange pausieren, z.B.: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.plotLeds|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.showAnimation": "Zeigt eine Abfolge von LED-Anzeigen als Animation.",
  "basic.showAnimation|param|interval": "Zeit in Millisekunden zwischen jedem Neuzeichnen",
  "basic.showAnimation|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.showLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.showLeds|param|interval": "Zeit in Millisekunden, die nach der Zeichnung gewartet wird",
  "basic.showLeds|param|leds": "Muster der LEDs, die ein- und ausgeschaltet werden",
  "basic.showNumber": "Zeige eine Nummer auf dem Display. Wenn die Nummer auf das Display passt (es sich also um eine einstellige Zahl handelt), scrolle nicht weiter.",
  "basic.showNumber|param|interval": "Scroll-Geschwindigkeit; z.B. 150, 100, 200,-100",
  "basic.showString": "Zeige Text auf dem Display an, Buchstabe für Buchstabe. Wenn die Zeichenfolge in das Display passt (also wenn es sich um einen einzelnen Buchstaben handelt), scrolle nicht weiter.",
  "basic.showString|param|interval": "Wie schnell die Zeichen geändert werden; z.B. 150, 100, 200,-100",
  "basic.showString|param|text": "Text auf dem Bildschirm dargestellt werden soll, z.B.: \"Hallo!\"",
  "control": "Laufzeit- und Event-Dienstprogramme.",
  "control.inBackground": "Plant Code, der im Hintergrund wiedergegeben wird.",
  "control.reset": "Seit den mini zurück.",
  "control.waitMicros": "Sperrt die aktuelle Leitung für die Dauer der angegebenen Mikrosekunden",
  "control.waitMicros|param|micros": "Anzahl der Mikrosekunden, die gewartet werden soll, z.B.: 4",
  "game": "Eine Einzel-LED-Sprite-Spielumgebung",
  "game.addScore": "Fügt zum aktuellen Spielstand Punkte hinzu",
  "game.addScore|param|points": "Anzahl von zu verändernden Punkten, z.B.: 1",
  "game.gameOver": "Gibt über eine Animation ein Spiel wieder.",
  "game.score": "Ruft den aktuellen Punktestand ab",
  "game.setScore": "Setzt den aktuellen Wert des Spielstands",
  "game.setScore|param|value": "TODO",
  "game.startCountdown": "Startet einen Spiel-Countdown",
  "game.startCountdown|param|ms": "Countdown-Dauer in Millisekunden, z.B.: 10000",
  "images": "Erstellung, Bearbeitung und Anzeige von LED-Bildern.",
  "images.createBigImage": "Erstellt ein Bild mit zwei Einzelbildern.",
  "images.createImage": "Erstellt ein Bild, das auf den LED-Bildschirm passt.",
  "input": "Ereignisse und Daten der Sensoren",
  "input.acceleration": "Holt den Beschleunigungswert in Milli-Erdanziehung (wenn das Board flach mit dem Display nach oben liegt, X = 0, y = 0 und Z =-1024)",
  "input.acceleration|param|dimension": "TODO",
  "input.buttonIsPressed": "Erhalte den Sie den Tastenstatus (gepresst oder nicht) für ``A`` und ``B``.",
  "input.calibrate": "Veraltet, Kompasskalibrierung erfolgt automatisch.",
  "input.compassHeading": "Holt die aktuelle Kompassrichtung in Grad.",
  "input.lightLevel": "Liest die Lichtintensität auf dem LED-Bildschirm im Bereich von ``0`` (dunkel) und `` 255`` (hell).",
  "input.magneticForce": "Ruft den Wert der Magnetkraft in ``Mikro-Tesla`` (``µT``) ab. Diese Funktion wird im Simulator nicht unterstützt.",
  "input.magneticForce|param|dimension": "TODO",
  "input.onButtonPressed": "Tue etwas, wenn eine Taste (``A``, ``B`` oder ``A + B``) gedrückt wird",
  "input.onButtonPressed|param|body": "TODO",
  "input.onButtonPressed|param|button": "TODO",
  "input.onGesture": "Mache etwas, wenn eine Geste gemacht wird (wie den mini zu schütteln).",
  "input.onGesture|param|body": "TODO",
  "input.onLogoDown": "Fügt Code hinzu, der ausgeführt wird, wenn das Logo nach unten zeigt und das Board vertikal ausgerichtet ist.",
  "input.onLogoDown|param|body": "TODO",
  "input.onLogoUp": "Fügt Code hinzu, der ausgeführt wird, wenn das Logo nach oben zeigt und das Board vertikal ausgerichtet ist.",
  "input.onLogoUp|param|body": "TODO",
  "input.onPinPressed": "Mache etwas, wenn eine Pin gehalten wird.",
  "input.onPinPressed|param|body": "Code, der ausführt wird, wenn ein Pin gehalten wird",
  "input.onPinPressed|param|name": "Der Pin, der gehalten werden muss",
  "input.onPinReleased": "Mache etwas, wenn der Pin losgelassen wird.",
  "input.onPinReleased|param|body": "Code, der ausgeführt werden soll, wenn der Pin losgelassen wird",
  "input.onPinReleased|param|name": "Der Pin, der losgelassen werden muss",
  "input.onScreenDown": "Hängt Code an, der ausgeführt wird, wenn der Bildschirm nach unten zeigt.",
  "input.onScreenDown|param|body": "TODO",
  "input.onScreenUp": "Hängt Code an, der ausgeführt wird, wenn der Bildschirm nach oben zeigt.",
  "input.onScreenUp|param|body": "TODO",
  "input.onShake": "Hängt Code an, der ausgeführt wird, wenn der mini geschüttelt wird.",
  "input.onShake|param|body": "TODO",
  "input.pinIsPressed": "Ruft den Pin-Zustand (gehalten oder nicht) ab. Die Erdung muss gehalten werden, um den Stromkreis zu schließen.",
  "input.pinIsPressed|param|name": "Pin, der verwendet wird, um eine Berührung zu erkennen",
  "input.rotation": "Die Neigung und Drehung des mini Drehung auf ``X-Achse``oder ``Y-Achse``, in Grad.",
  "input.rotation|param|kind": "TODO",
  "input.runningTime": "Ruft die Anzahl der Millisekunden auf, die seit dem Einschalten vergangen sind.",
  "input.setAccelerometerRange": "Legt die Stichprobenbereich des Beschleunigungssensors in Schwerkraft fest.",
  "input.setAccelerometerRange|param|range": "Ein Wert, der die maximale Stärke der gemessenen Beschleunigung beschreibt",
  "input.temperature": "Ruft die aktuelle Temperatur in Grad Celsius (°C) ab.",
  "led": "Steuerung des LED-Bildschirms.",
  "led.brightness": "Ruft die Helligkeit des Bildschirms ab, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.fadeIn": "Blendet die Bildschirmanzeige ein.",
  "led.fadeIn|param|ms": "TODO",
  "led.fadeOut": "Blendet die Bildschirmhelligkeit aus.",
  "led.fadeOut|param|ms": "TODO",
  "led.plot": "Schalte die angegebene LED mit Hilfe von X- und Y-Koordinaten ein (X ist horizontal, Y ist vertikal). (0,0) ist die obere linke Ecke.",
  "led.plotAll": "Schaltet alle LEDs an",
  "led.plotBarGraph": "Zeigt ein vertikales Balkendiagramm an, basierend auf dem `Wert`und dem `Hoch`-Wert. Wenn `Hoch`0 ist, wird das Diagramm automatisch angepasst.",
  "led.plotBarGraph|param|high": "maximalen Wert. Wenn dieser 0 ist, wird der Maximalwert automatisch angepasst, z.B.: 0",
  "led.plotBarGraph|param|value": "aktueller Wert zum Darstellen",
  "led.plot|param|x": "TODO",
  "led.plot|param|y": "TODO",
  "led.point": "Ruft den An/Aus-Status einer vorgegebenen LED mittels X-/Y-Koordinaten ab. (0,0) ist oben links.",
  "led.point|param|x": "TODO",
  "led.point|param|y": "TODO",
  "led.screenshot": "Macht einen Screenshot vom LED-Bildschirm und gibt ein Bild aus.",
  "led.setBrightness": "Lege die Helligkeit des Bildschirms fest, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.setBrightness|param|value": "Helligkeitswert, z.B.: 255, 127, 0",
  "led.setDisplayMode": "Legt den Anzeigemodus von Wiedergabe-LEDs zwischen Schwarz und Weiß und Graustufen fest.",
  "led.setDisplayMode|param|mode": "TODO",
  "led.stopAnimation": "Bricht die aktuelle Animation ab und löscht andere ausstehende Animationen.",
  "led.toggle": "Schaltet ein bestimmtes Pixel ein",
  "led.toggleAll": "Invertiert die aktuelle LED-Anzeige",
  "led.toggle|param|x": "TODO",
  "led.toggle|param|y": "TODO",
  "led.unplot": "Schalte die angegebene LED mit x-und y-Koordinaten ab (X ist horizontal, y ist vertikal). (0,0) ist oben links.",
  "led.unplot|param|x": "TODO",
  "led.unplot|param|y": "TODO",
  "music": "Generierung von von Musik durch Pin ``P0``.",
  "music.beat": "Gibt die Dauer eines Taktes in Milli-Sekunden aus",
  "music.changeTempoBy": "Ändere die Geschwindigkeit um den angegebenen Betrag",
  "music.changeTempoBy|param|bpm": "Die Änderung in Schlägen pro Minute auf das Tempo, z.B.: 20",
  "music.noteFrequency": "Ruft die Frequenz einer Note ab.",
  "music.noteFrequency|param|name": "der Name der Notiz",
  "music.playTone": "Spielt einen Ton für den angegebenen Zeitraum über Pin ``P0`` ab.",
  "music.playTone|param|frequency": "Tonhöhe des abzuspielenden Tones in Hertz (Hz)",
  "music.playTone|param|ms": "Tondauer in Millisekunden (ms)",
  "music.rest": "Ruht (spielt nichts) für eine bestimmte Zeit auf Pin ``P0``.",
  "music.rest|param|ms": "Restdauer in Millisekunden (ms)",
  "music.ringTone": "Spielt einen Ton über Pin ``P0``.",
  "music.ringTone|param|frequency": "Tonhöhe des abzuspielenden Tones in Hertz (Hz)",
  "music.setTempo": "Legt die Geschwindigkeit auf den angegebenen Wert fest.",
  "music.setTempo|param|bpm": "Die neue Geschwindigkeit in Schlägen pro Minute, z.B.: 120",
  "music.tempo": "Gibt die Geschwindigkeit in Schlägen pro Minute aus. Die Geschwindigkeit ist Schnelligkeit (Bpm = Beats pro Minute), in der Töne abgespielt werden. Je größer der Wert, desto schneller werden die Töne abgespielt.",
  "pins": "Steuere die Stromstärke über die Pins für analoge/digitale Signale, Servos, I2C,...",
  "pins.analogPitch": "Gibt ein Pulsweiten Modulation (PWM)-Signal über den aktuellen Pitch-Pin. Benutze `analog set pitch pin`, um den Pitch-Pin festzulegen.",
  "pins.analogPitch|param|frequency": "TODO",
  "pins.analogPitch|param|ms": "TODO",
  "pins.analogReadPin": "Lese den Anschlusswert als Analog aus, d. h. als einen Wert zwischen 0 und 1023.",
  "pins.analogReadPin|param|name": "Pin, auf den geschrieben werden soll",
  "pins.analogSetPeriod": "Stellt die Pulsweite Modulation (PWM) des Analogausganges auf den angegebenen Wert in ** Mikrosekunden ** oder `1/1000` Millisekunden ein.\nWenn dieser Pin nicht als einen Analogausgang (mit `analog write pin`) konfiguriert ist, hat der Vorgang keine Auswirkungen.",
  "pins.analogSetPeriod|param|micros": "Zeit in Mikrosekunden. z.B.: 20000",
  "pins.analogSetPeriod|param|name": "analoger Pin, der zeitlich festgelegt werden soll",
  "pins.analogSetPitchPin": "Setzt den genutzten Pin, wenn `pins->analog pitch`angewendet wird.",
  "pins.analogSetPitchPin|param|name": "TODO",
  "pins.analogWritePin": "Legt den Wert des Verbinders auf analog fest. Der Wert muss zwischen 0 und 1023 liegen.",
  "pins.analogWritePin|param|name": "PIN-Name, auf den geschrieben werden soll",
  "pins.analogWritePin|param|value": "Wert, der auf den Pin geschrieben werden soll, zwischen ``0`` und ``1023`` z.B.: 1023,0",
  "pins.digitalReadPin": "Lese den angegebene Pin oder Verbinder als 0 oder 1",
  "pins.digitalReadPin|param|name": "Pin, aus dem gelesen werden soll",
  "pins.digitalWritePin": "Setzt einen Pin- oder Verbinder-Wert auf 0 oder 1.",
  "pins.digitalWritePin|param|name": "Pin, auf den geschrieben werden soll",
  "pins.digitalWritePin|param|value": "Wert, der auf dem Pin 1 gesetzt werden soll, z.B. 0",
  "pins.i2cReadNumber": "Lese eine Nummer aus einer 7-bit I2C-Adresse.",
  "pins.i2cWriteNumber": "Schreibe eine Nummer in eine 7-bit I2C-Adresse.",
  "pins.map": "Definiert eine Nummer von einer Auswahl zu einer anderen um. Ein Wert ``von niedrig``wird so auf ``zu niedrig``umgeändert, ein Wert ``von hoch`` zu ``zu hoch`` etc.",
  "pins.map|param|fromHigh": "die obere Grenze des aktuellen Wertebereichs, z.B.: 1023",
  "pins.map|param|fromLow": "die untere Grenze des aktuellen Wertebereichs",
  "pins.map|param|toHigh": "die Obergrenze des Wertezielbereichs, z.B.: 4",
  "pins.map|param|toLow": "die Untergrenze des Wertezielbereichs",
  "pins.map|param|value": "Wert in Bereichen zuordnen",
  "pins.onPulsed": "Stellt diesen Pin als einen Digitaleingang ein und generiert Ereignisse, deren Zeitstempel die Dauer darstellt, in der der Pin entweder ``hoch``oder ``niedrig``war.",
  "pins.pulseDuration": "Ruft die Dauer des letzten Impulses in Mikrosendungen ab. Diese Funktion soll von einem `onPulsed`-Handler aufgerufen werden.",
  "pins.servoSetPulse": "Konfiguriert diesen IO-Pin als einen analogen/PWM-Ausgang, stellt den Zeitraum auf 20 ms ein und setzt die Pulsweite fest, basieren auf dem angegeben Wert **Mikrosekunden** oder `1/1000`Millisekunden.",
  "pins.servoSetPulse|param|micros": "Impulsdauer in Mikrosekunden, z.B.: 1500",
  "pins.servoSetPulse|param|name": "PIN-Name",
  "pins.servoWritePin": "Schreibt einen Wert in den Servo, der die Welle entsprechend kontroliert. Auf einem Standard-Servo wird so der Winkel der Welle (in Grad) eingestellt, sodass sich die Welle entsprechend anpasst. Auf einem kontinuierlich drehenden Servo wird dadurch die Geschwindigkeit des Servos festgelegt, wobei ``0``die volle Geschwindigkeit in eine Richtung darstellt, ``180``die volle Geschwindigkeit in die andere, und ein Wert von ``90`` einen Stillstand erzeugt.",
  "pins.servoWritePin|param|name": "Pin, auf den geschrieben werden soll",
  "pins.servoWritePin|param|value": "Winkel oder Rotationsbeschleunigung, z.B.: 180,90,0",
  "pins.setPull": "Stellt die Anziehungskraft des Pins ein.",
  "pins.setPull|param|name": "Pin, auf dem der Pull-Modus aktiviert wird",
  "pins.setPull|param|pull": "eine der mbed-Pull-Konfigurationen: PullUp, PullDown, PullNone ",
  "pins.spiWrite": "Schreibe in den SPI-Slave und gebe die Antwort aus",
  "pins.spiWrite|param|value": "Daten, die an den SPI-Slave geschickt werden sollen",
  "serial": "Lesen und Schreiben von Daten über eine serielle Verbindung.",
  "serial.readLine": "Liest eine Textzeile aus der seriellen Schnittstelle.",
  "serial.readUntil": "Liest aus eine Textzeile aus dem seriellen Anschluss und gibt den Puffer aus, wenn die Begrenzung erreicht wurde.",
  "serial.readUntil|param|delimiter": "Text-Begrenzung, die die Textblöcke voneinander trennt",
  "serial.redirect": "Konfiguriert dynamisch die serielle Instanz, damit sie andere Pins als USBTX und USBRX benutzt.",
  "serial.redirect|param|rx": "der neue Empfangs-Pin",
  "serial.redirect|param|tx": "Der neue Übertragungs-Pin",
  "serial.writeLine": "Gibt eine Zeile des Textes an die serielle",
  "serial.writeNumber": " Gibt einen numerischen Wert an die serielle",
  "serial.writeString": "Sendet ein Stück Text über serielle Verbindung.",
  "serial.writeValue": "Schreibt ein ``Namen: Wert`` Wertepaar auf die serielle Schnittstelle.",
  "serial.writeValue|param|name": "Name des Wertestreams, z.B.: x",
  "serial.writeValue|param|value": "Schreiben"
}