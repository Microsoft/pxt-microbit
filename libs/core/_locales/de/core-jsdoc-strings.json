{
  "AcceleratorRange.EightG": "Der Bewegungssensor misst Kräfte bis 8g",
  "AcceleratorRange.FourG": "Der Bewegungssensor misst Kräfte bis 4g",
  "AcceleratorRange.OneG": "Der Bewegungssensor misst Kräfte bis 1g",
  "AcceleratorRange.TwoG": "Der Bewegungssensor misst Kräfte bis 2g",
  "Array": "Hinzufügen, Entfernen und Ersetzen von Elementen in Listen.\n\nHinzufügen, Entfernen und Ersetzen von Elementen in Listen.",
  "Array.filter": "Gib die Elemente eines Arrays aus, die die in einer Rückruffunktion angegebene Bedingung erfüllen.",
  "Array.filter|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die Filtermethode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.get": "Rufe den Wert an einer bestimmten Position ab.",
  "Array.get|param|index": "die Position in der Liste des Elementes, beginnend bei Null, z. B.: 0",
  "Array.indexOf": "Gib die Position des ersten Vorkommens eines Wertes in einem Array aus.",
  "Array.indexOf|param|fromIndex": "Die Array-Position, bei der mit der Suche begonnen werden soll. Wenn fromIndex ausgelassen wird, beginnt die Suche bei Position 0.",
  "Array.indexOf|param|item": "Der in einem Array zu lokalisierende Wert.",
  "Array.insertAt": "Füge den Wert an einer bestimmten Position ein, erhöhe die Array-Länge um 1.",
  "Array.insertAt|param|index": "die Position in der Liste, beginnend bei Null, bei der der Wert eingefügt werden soll, z. B.: 0",
  "Array.insertAt|param|value": "zum Einfügen, z. B. 0",
  "Array.length": "Ruft die Array-Länge ab oder legt sie fest. Das ist eine Nummer, die um eins höher ist als das höchste in einem Array definierte Element.",
  "Array.map": "Ruft eine definierte Rückruffunktion bei jedem Element eines Arrays ab und gibt ein Array mit den Ergebnissen aus.",
  "Array.map|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die map-Methode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.pop": "Entferne das letzte Element eines Arrays und gib es aus.",
  "Array.push": "Füge ein neues Element an ein Array an.",
  "Array.push|param|item": "zum Anhängen an das Array.",
  "Array.reduce": "Rufe die angegebene Rückruffunktion für alle Elemente in einem Array auf. Der Rückgabewert der Rückruffunktion ist das kumulierte Ergebnis, es wird als Argument im nächsten Aufruf der Rückruffunktion bereitgestellt.",
  "Array.reduce|param|callbackfn": "Eine Funktion, die bis zu drei Argumente akzeptiert. Die Reduziermethode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.reduce|param|initialValue": "Anfangswert für Kumulierungsbeginn. Der erste Aufruf der callbackfn-Funktion hat diesen Wert als Argument statt eines Array-Wertes.",
  "Array.removeAt": "Entferne das Element an einer bestimmten Position.",
  "Array.removeAt|param|index": "die Position in der Liste, beginnend bei Null, von der der Wert entfernt werden soll, z. B. 0",
  "Array.removeElement": "Entferne das erste Vorkommen eines Elementes. Gib wahr aus, wenn es entfernt wurde.",
  "Array.reverse": "Kehrt die Elemente in einem Array um. Das erste Array-Element wird zum letzten, das letzte Array-Element wird zum ersten.",
  "Array.set": "Speichere einen Wert an einer bestimmten Position.",
  "Array.set|param|index": "die Position in der Liste, beginnend bei Null, bei der der Wert gespeichert werden soll, z. B.: 0",
  "Array.shift": "Entferne das erste Element aus einem Array und gib es aus. Durch diese Methode wird die Array-Länge verändert.",
  "Array.slice": "Gib einen Abschnitt eines Arrays aus.",
  "Array.slice|param|end": "Das Ende des angegebenen Abschnitts des Arrays, z. B.: 0",
  "Array.slice|param|start": "Der Anfang des angegebenen Abschnitts des Arrays, z. B.: 0",
  "Array.sort": "Sortiere die Elemente eines Arrays und gib das Array aus. Die Sortierung ist nicht zwangsläufig unveränderlich.",
  "Array.splice": "Entferne Elemente aus einem Array.",
  "Array.splice|param|deleteCount": "Die Anzahl der zu entfernenden Elemente, z. B.: 0",
  "Array.splice|param|start": "Die Position im Array, beginnend bei Null, bei der mit dem Entfernen von Elementen begonnen werden soll z. B.: 0",
  "Array.unshift": "Füge ein Element am Anfang eines Arrays hinzu und gib die neue Länge des Arrays aus.",
  "Array.unshift|param|value": "zum Einfügen am Anfang des Arrays.",
  "Boolean.toString": "Gibt eine Zeichenfolgendarstellung eines Elementes aus.",
  "Buffer.fill": "Fülle (ein Fragment) des Zwischenspeichers mit vorgegebenem Wert.",
  "Buffer.getNumber": "Lies eine Nummer im angegebenen Format vom Zwischenspeicher.",
  "Buffer.length": "Gibt die Länge eines Zwischenspeicherelementes aus.",
  "Buffer.rotate": "Drehe den Zwischenspeicher auf der Stelle nach links.",
  "Buffer.rotate|param|length": "Anzahl der Elemente im Zwischenspeicher. Falls negativ wird die Länge als Zwischenspeicherlänge minus Start festgelegt. Z. B.: -1",
  "Buffer.rotate|param|offset": "Anzahl der zu verschiebenden Bytes; nutze negativen Wert zum Verschieben nach rechts",
  "Buffer.rotate|param|start": "starte Offset im Zwischenspeicher. Standardeinstellung ist 0.",
  "Buffer.setNumber": "Schreibe eine Zahl im angegebenen Format in den Zwischenspeicher.",
  "Buffer.shift": "Zwischenspeicher nach links verschieben, ohne Polster.",
  "Buffer.shift|param|length": "Anzahl der Elemente im Zwischenspeicher. Falls negativ wird die Länge als Zwischenspeicherlänge minus Start festgelegt. Z. B.: -1",
  "Buffer.shift|param|offset": "Anzahl der zu verschiebenden Bytes; nutze negativen Wert zum Verschieben nach rechts",
  "Buffer.shift|param|start": "starte Offset im Zwischenspeicher. Standardeinstellung ist 0.",
  "Buffer.slice": "Gib eine Kopie eines Fragmentes eines Zwischenspeichers aus.",
  "Buffer.write": "Schreib die Inhalte von `src` bei`dstOffset` im aktuellen Zwischenspeicher.",
  "EventCreationMode": "Erstellen eines Ereignisses.",
  "EventCreationMode.CreateAndFire": "Calliope mini-Event wurde initialisiert, seine Event-Handler werden unverzüglich ausgeführt (nicht geeignet für die Nutzung bei Unterbrechungen!).",
  "EventCreationMode.CreateOnly": "Calliope mini-Event wurde initialisiert, es wird keine weitere Verarbeitung vorgenommen.",
  "Gesture.EightG": "Wird ausgeführt, wenn ein Stoß mit 8g erkannt wird",
  "Gesture.FreeFall": "Wird ausgeführt, wenn das Board fällt!",
  "Gesture.LogoDown": "Wird ausgeführt, wenn das Logo nach unten zeigt und das Display vertikal ist.",
  "Gesture.LogoUp": "Wird ausgeführt, wenn das Logo nach oben zeigt und das Display vertikal ist.",
  "Gesture.ScreenDown": "Wird ausgeführt, wenn das Display nach oben zeigt und das Board horizontal ist.",
  "Gesture.ScreenUp": "Wird ausgeführt, wenn das Display nach unten zeigt und das Board horizontal ist.",
  "Gesture.Shake": "Wird erhöht, wenn geschüttelt",
  "Gesture.SixG": "Wird ausgeführt, ein 6g starker Stoß erkannt wird",
  "Gesture.ThreeG": "Wird ausgeführt, ein 3g starker Stoß erkannt wird",
  "Gesture.TiltLeft": "Wird ausgeführt, wenn das Display nach links zeigt",
  "Gesture.TiltRight": "Wird ausgeführt, wenn das Display nach rechts zeigt",
  "Image.clear": "Schaltet alle Pixel aus.",
  "Image.height": "Ruft die Höhe in Reihen ab (immer 5)",
  "Image.pixel": "Rufe den Pixelzustand bei Position ``(x,y)``ab",
  "Image.pixelBrightness": "Ruft die Pixelhelligkeit ([0..255]) an einer bestimmten Position ab",
  "Image.plotFrame": "Zeichnet den Frame der ``Position`` des Bildes auf dem Bildschirm.",
  "Image.plotFrame|param|xOffset": "Spaltenposition für den Anzeigenbeginn des Bildes",
  "Image.plotImage": "Zeichnet das Bild in einer angegebenen Spalte auf dem Bildschirm",
  "Image.scrollImage": "Scrollt ein Bild.",
  "Image.scrollImage|param|frameOffset": "x Offset für die Bewegung bei jedem Animationsschritt, z. B. 1, 2, 5",
  "Image.scrollImage|param|interval": "Zeit zwischen jedem Animationsschritt in Millisekunden, z. B. 200",
  "Image.setPixel": "Lege den Pixelzustand bei Position ``(x,y)`` fest",
  "Image.setPixelBrightness": "Legt eine bestimmte Pixelhelligkeit an einer bestimmten Position fest",
  "Image.showFrame": "Zeigt einen bestimmten Frame eines Bildstreifens.",
  "Image.showImage": "Zeigt einen Frame des Bildes bei Offset ``x offset``.",
  "Image.showImage|param|xOffset": "Spaltenposition für den Anzeigenbeginn des Bildes",
  "Image.width": "Ruft die Breite in Spalten ab",
  "Math": "Komplexere Operationen mit Zahlen.",
  "Math.abs": "Gibt den absoluten Wert einer Zahl aus (den Wert unabhängig davon, ob er positiv oder negativ ist).\nDer absolute Wert von -5 ist zum Beispiel der gleiche wie der von 5.",
  "Math.abs|param|x": "Ein numerischer Ausdruck, für den der absolute Wert benötigt wird.",
  "Math.max": "Gibt den größeren von zwei vorhandenen numerischen Ausdrücken aus.",
  "Math.min": "Gibt den niedrigeren von zwei vorhandenen numerischen Ausdrücken aus.",
  "Math.pow": "Gib den Wert eines grundlegenden Ausdrucks bis zu einer bestimmten Stärke aus.",
  "Math.pow|param|x": "Der Basiswert des Ausdrucks.",
  "Math.pow|param|y": "Der exponentielle Wert des Ausdrucks.",
  "Math.random": "Gib eine pseudozufällige Zahl zwischen 0 und `Grenze`aus.",
  "Math.randomBoolean": "Erzeugt zufällig einen \"wahr\" oder \"falsch\"-Wert, wie bei einem Münzwurf.",
  "Math.random|param|limit": "die Obergrenze der generierten Zahl, z. B.: 4.",
  "Math.sign": "Gibt das Vorzeichen von x aus und zeigt an, ob dieses positiv, negativ oder null ist.",
  "Math.sign|param|x": "Der numerische Ausdruck, der getestet werden soll",
  "Math.sqrt": "Gib die Quadratwurzel einer Zahl aus.",
  "Math.sqrt|param|x": "Ein numerischer Ausdruck.",
  "Number.toString": "Gib eine Zeichenfolgendarstellung einer Zahl aus.",
  "String": "Kombinieren, trennen und suchen von Text-Zeichenfolgen.\n\nKombinieren, trennen und suchen von Text-Zeichenfolgen.",
  "String.charAt": "Gib den Buchstaben an der angegebenen Position aus.",
  "String.charAt|param|index": "Die null-basierte Position des gewünschten Zeichens, z. B.: 0",
  "String.charCodeAt": "Gib den Unicode-Wert des Zeichens am vorgegebenen Ort aus.",
  "String.charCodeAt|param|index": "Der null-basierte Index des gewünschten Zeichens. Wenn kein Zeichen am angegeben Index vorhanden ist, wird NaN ausgegeben.",
  "String.compare": "Zeigt an, wie sich die Reihenfolge von Zeichen in zwei Zeichenfolgen unterscheidet (in ASCII-Codierung).",
  "String.compare|param|that": "Zeichenfolge, die mit der Zielzeichenfolge verglichen werden soll",
  "String.concat": "Gibt eine Zeichenfolge aus, die die Verkettung von zwei oder mehr Zeichenfolgen ist.",
  "String.concat|param|other": "Die Zeichenfolge, die an das Ende einer Zeichenfolge angehängt werden soll, z. B. „Häng mich an!“",
  "String.fromCharCode": "Erstelle Sie eine Zeichenfolge aus dem angegebenen ASCII-Zeichencode.",
  "String.isEmpty": "Gibt einen Wert aus, der anzeigt, ob die Zeichenfolge leer ist",
  "String.length": "Gib die Länge einer Zeichenfolge aus.",
  "String.substr": "Gib eine Teilzeichenfolge der aktuellen Zeichenfolge aus.",
  "String.substr|param|length": "Anzahl der zu extrahierenden Zeichen, z. B.: 3",
  "String.substr|param|start": "Erste Zeichenposition, kann beim Zählen vom Ende negativ sein, zum Beispiel: 0",
  "basic": "Bietet Zugriff auf grundlegende mini-Funktionalität.",
  "basic.clearScreen": "Schalte alle LEDs aus",
  "basic.forever": "Wiederholt den Code dauerhaft im Hintergrund. Bei jeder Iteration ist es möglich, andere Codes auszuführen.",
  "basic.pause": "Pausiere für die angegebene Zeit in Millisekunden",
  "basic.pause|param|ms": "wie lange pausieren, z.B.: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.plotLeds|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.showAnimation": "Zeigt eine Abfolge von LED-Anzeigen als Animation.",
  "basic.showAnimation|param|interval": "Zeit in Millisekunden zwischen jedem Neuzeichnen",
  "basic.showAnimation|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.showArrow": "Zeigt einen Pfeil auf dem Bildschirm an",
  "basic.showArrow|param|direction": "die Richtung des Pfeils",
  "basic.showArrow|param|interval": "die Zeitspanne (in Millisekunden), in der das Symbol angezeigt wird. Die Standardeinstellung ist 600.",
  "basic.showIcon": "Zeichnet das ausgewählte Symbol auf dem LED-Bildschirm",
  "basic.showIcon|param|icon": "die vordefinierte Symbol-ID",
  "basic.showIcon|param|interval": "die Zeitspanne (in Millisekunden), in der das Symbol angezeigt wird. Die Standardeinstellung ist 600.",
  "basic.showLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.showLeds|param|interval": "Zeit in Millisekunden, die nach der Zeichnung gewartet wird",
  "basic.showLeds|param|leds": "Muster der LEDs, die ein- und ausgeschaltet werden",
  "basic.showNumber": "Zeige eine Nummer auf dem Display. Wenn die Nummer auf das Display passt (es sich also um eine einstellige Zahl handelt), scrolle nicht weiter.",
  "basic.showNumber|param|interval": "Scroll-Geschwindigkeit; z.B. 150, 100, 200,-100",
  "basic.showString": "Zeige Text auf dem Display an, Buchstabe für Buchstabe. Wenn die Zeichenfolge in das Display passt (also wenn es sich um einen einzelnen Buchstaben handelt), scrolle nicht weiter.",
  "basic.showString|param|interval": "Wie schnell die Zeichen geändert werden; z.B. 150, 100, 200,-100",
  "basic.showString|param|text": "Text auf dem Bildschirm dargestellt werden soll, z.B.: \"Hallo!\"",
  "control": "Laufzeit- und Event-Dienstprogramme.",
  "control.assert": "Wenn die Bedingung falsch ist, zeige eine Nachricht auf der seriellen Konsole und gebe Panic-Code 098 aus",
  "control.deviceName": "Erzeugt einen Namen für das Gerät, basierend auf der Seriennummer",
  "control.deviceSerialNumber": "Leite eine einzigartige, einheitliche Seriennummer dieses Gerätes aus den internen Daten ab.",
  "control.eventSourceId": "Gibt den Wert einer C++-Laufzeitkonstanten aus",
  "control.eventTimestamp": "Holt den Zeitstempel des letzten Events auf dem Bus",
  "control.eventValue": "Holt den Wert des letzten ausgeführten Events auf dem Bus",
  "control.eventValueId": "Gibt den Wert einer C++-Laufzeitkonstanten aus",
  "control.inBackground": "Plant Code, der im Hintergrund wiedergegeben wird.",
  "control.onEvent": "Startet ein Event auf dem Event-Bus.",
  "control.panic": "Zeigt einen spezifizierten Fehlercode und hält das Programm an.",
  "control.raiseEvent": "Startet ein Event auf dem Event-Bus.",
  "control.raiseEvent|param|mode": "optionale Definition davon, wie ein Event nach dem Erstellen ausgeführt wird (Standard ist \"CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "ID der Calliope mini-Komponente, die das Event generiert hat, zum Beispiel CALLIOPE_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Komponentenspezifischer Code, der den Grund des Events angibt.",
  "control.reset": "Seit den mini zurück.",
  "control.runtimeWarning": "Zeige Warnmeldung im Simulator.",
  "control.waitMicros": "Sperrt die aktuelle Leitung für die Dauer der angegebenen Mikrosekunden",
  "control.waitMicros|param|micros": "Anzahl der Mikrosekunden, die gewartet werden soll, z.B.: 4",
  "game": "Eine Einzel-LED-Sprite-Spielumgebung",
  "game.LedSprite": "Ein Spiel-Sprite, der als einzelne LED gerendert wird",
  "game.LedSprite.blink": "Meldet die ``Blink``-Dauer eines Sprites",
  "game.LedSprite.brightness": "Meldet die ``Helligkeit`` eines Sprites auf dem LED-Bildschirm",
  "game.LedSprite.change": "Ändert eine Eigenschaft des Sprites",
  "game.LedSprite.changeBlinkBy": "Ändert die ``Blink``-Dauer um die angegebene Anzahl an Millisekunden",
  "game.LedSprite.changeBrightnessBy": "Ändert die ``Y``-Position um die angegebene Anzahl",
  "game.LedSprite.changeBrightnessBy|param|value": "der Wert zum Ändern der Helligkeit",
  "game.LedSprite.changeDirectionBy": "Ändert die Position der ``Richtung`` um die angegebene Anzahl durch Drehen nach rechts",
  "game.LedSprite.changeXBy": "Ändert die ``X``-Position um die angegebene Anzahl",
  "game.LedSprite.changeYBy": "Ändert die ``Y``-Position um die angegebene Anzahl",
  "game.LedSprite.change|param|property": "der Name der Eigenschaft zum Ändern",
  "game.LedSprite.change|param|value": "Anzahl der Veränderung, z. B.: 1",
  "game.LedSprite.delete": "Löscht den Sprite aus der Spielumgebung. Der Sprite erscheint nicht mehr auf dem Bildschirm und interagiert nicht mehr mit anderen Sprites.",
  "game.LedSprite.direction": "Meldet die aktuelle Richtung eines Sprites",
  "game.LedSprite.get": "Ruft eine Eigenschaft des Sprites ab",
  "game.LedSprite.get|param|property": "der Name der Eigenschaft zum Ändern",
  "game.LedSprite.goTo": "Gehe zu dieser Position auf dem Bildschirm",
  "game.LedSprite.ifOnEdgeBounce": "Wenn der Bildschirmrand berührt wird und die Sichtrichtung geradeaus ist, wegdrehen.",
  "game.LedSprite.isTouching": "Meldet wahr, wenn der Sprite dieselbe Position hat wie der angegebene Sprite",
  "game.LedSprite.isTouchingEdge": "Meldet wahr, wenn der Sprite einen Rand berührt",
  "game.LedSprite.move": "Bewege eine bestimmte Anzahl von LEDs in die aktuelle Richtung",
  "game.LedSprite.move|param|leds": "Anzahl der zu bewegenden LEDs, z. B.: 1, -1",
  "game.LedSprite.off": "Schaltet den Sprite aus (bei Standardeinstellung ein)",
  "game.LedSprite.on": "Schaltet den Sprite ein (bei Standardeinstellung ein)",
  "game.LedSprite.set": "Legt eine Eigenschaft des Sprites fest",
  "game.LedSprite.setBlink": "Legt das Blinkdauer-Intervall in Millisekunden fest.",
  "game.LedSprite.setBrightness": "Lege die ``Helligkeit`` eines Sprites fest",
  "game.LedSprite.setBrightness|param|brightness": "die Helligkeit von 0 (aus) bis 255 (ein), z. B.: 255.",
  "game.LedSprite.setDirection": "Lege die Richtung des aktuellen Sprites fest, gerundet auf das nächste Vielfache von 45",
  "game.LedSprite.setX": "Lege die ``X``-Position eines Sprites fest",
  "game.LedSprite.setY": "Lege die ``Y``-Position eines Sprites fest",
  "game.LedSprite.set|param|property": "der Name der Eigenschaft zum Ändern",
  "game.LedSprite.turn": "Drehe den Sprite",
  "game.LedSprite.turnLeft": "Drehe nach links (gegen den Uhrzeigersinn)",
  "game.LedSprite.turnRight": "Drehe nach rechts (im Uhrzeigersinn)",
  "game.LedSprite.turn|param|degrees": "Winkel zum Drehen in Grad z. B.: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "links oder rechts",
  "game.LedSprite.x": "Meldet die ``X``-Position eines Sprites auf dem LED-Bildschirm",
  "game.LedSprite.y": "Meldet die ``Y``-Position eines Sprites auf dem LED-Bildschirm",
  "game.addLife": "Fügt Leben zum aktuellen Spielstand hinzu",
  "game.addScore": "Fügt zum aktuellen Spielstand Punkte hinzu und zeigt eine Animation",
  "game.addScore|param|points": "Anzahl von zu verändernden Punkten, z. B.: 1",
  "game.createSprite": "Erzeugt einen neuen LED-Sprite, der nach rechts zeigt.",
  "game.createSprite|param|x": "horizontale Koordinate des Sprites, z.B. 2",
  "game.createSprite|param|y": "vertikale Koordinate des Sprites, z.B. 2",
  "game.currentTime": "Ruft die verbliebene Zeit (seit `starte Countdown`) oder die aktuelle Zeit (seit das Gerät gestartet wurde oder eine Stoppuhr aktiviert wurde) an.",
  "game.gameOver": "Zeigt bei Spiel-Ende eine Animation und den Punktestand.",
  "game.invalidSprite": "Ruft einen invaliden Sprite ab; wird genutzt, um Locale zu initialisieren.",
  "game.isGameOver": "Zeigt an, ob das Spil die \"Game Over\"-Sequenz angezeigt hat.",
  "game.isPaused": "Zeigt an, ob das Spiel-Rendering angehalten wurde, um andere Animationen zu ermöglichen",
  "game.isRunning": "Holt einen Wert, der anzeigt, ob das Spiel noch läuft. Gibt `falsch`aus, wenn das Spiel zu Ende ist.",
  "game.level": "Ruft das aktuelle Level ab",
  "game.levelUp": "Erhöht das Level und zeigt eine Nachricht an.",
  "game.life": "Ruft das aktuelle Leben ab",
  "game.pause": "Pausiert das Spiel-Rendering, um andere Animationen zu ermöglichen",
  "game.removeLife": "Entfernt ein Leben",
  "game.resume": "Setzt das Spiel-Rendering fort",
  "game.score": "Ruft den aktuellen Punktestand ab",
  "game.setLife": "Setzt den aktuellen Wert der Leben",
  "game.setScore": "Setzt den aktuellen Wert des Spielstands",
  "game.setScore|param|value": "neuer Punktestandwert.",
  "game.showScore": "Zeigt den Spielstand auf dem Display.",
  "game.startCountdown": "Zeigt eine Animation, startet dann einen Spiel-Countdown-Timer, der beim Erreichen von 0 zum Spielende führt",
  "game.startCountdown|param|ms": "Countdown-Dauer in Millisekunden, z.B.: 10000",
  "game.startStopwatch": "Startet eine Stoppuhr.`aktuelle Zeit`gibt die vergangene Zeit an.",
  "images": "Erstellung, Bearbeitung und Anzeige von LED-Bildern.",
  "images.createBigImage": "Erstellt ein Bild mit zwei Einzelbildern.",
  "images.createImage": "Erstellt ein Bild, das auf den LED-Bildschirm passt.",
  "input": "Ereignisse und Daten der Sensoren",
  "input.acceleration": "Holt den Beschleunigungswert in Milli-Erdanziehung (wenn das Board flach mit dem Display nach oben liegt, X = 0, y = 0 und Z =-1024)",
  "input.buttonIsPressed": "Erhalte den Sie den Tastenstatus (gepresst oder nicht) für ``A`` und ``B``.",
  "input.buttonIsPressed|param|button": "die Taste für die Anfrage, z. B.: Button.A",
  "input.calibrate": "Veraltet, verwende stattdessen Input.calibrateCompass.",
  "input.compassHeading": "Holt die aktuelle Kompassrichtung in Grad.",
  "input.lightLevel": "Liest die Lichtintensität auf dem LED-Bildschirm im Bereich von ``0`` (dunkel) und `` 255`` (hell).",
  "input.magneticForce": "Ruft den Wert der Magnetkraft in ``Mikro-Tesla`` (``µT``) ab. Diese Funktion wird im Simulator nicht unterstützt.",
  "input.onButtonPressed": "Tue etwas, wenn eine Taste (A, B oder beide A + B) gedrückt und wieder losgelassen wird.",
  "input.onGesture": "Mache etwas, wenn eine Geste gemacht wird (wie den mini zu schütteln).",
  "input.onGesture|param|gesture": "die Art der zu verfolgenden Geste, z. B.: Gesture.Shake",
  "input.onLogoDown": "Fügt Code hinzu, der ausgeführt wird, wenn das Logo nach unten zeigt und das Board vertikal ausgerichtet ist.",
  "input.onLogoUp": "Fügt Code hinzu, der ausgeführt wird, wenn das Logo nach oben zeigt und das Board vertikal ausgerichtet ist.",
  "input.onPinPressed": "Tue etwas, wenn ein Pin berührt und wieder losgelassen wird (während auch der GND-Pin berührt wird).",
  "input.onPinPressed|param|body": "Code, der ausführt wird, wenn ein Pin gehalten wird",
  "input.onPinPressed|param|name": "der Pin, der gedrückt werden muss, z. B.: TouchPin.P0",
  "input.onPinReleased": "Mache etwas, wenn der Pin losgelassen wird.",
  "input.onPinReleased|param|body": "Code, der ausgeführt werden soll, wenn der Pin losgelassen wird",
  "input.onPinReleased|param|name": "der Pin, der losgelassen werden muss (z. B. TouchPin.P0 )",
  "input.onScreenDown": "Hängt Code an, der ausgeführt wird, wenn der Bildschirm nach unten zeigt.",
  "input.onScreenUp": "Hängt Code an, der ausgeführt wird, wenn der Bildschirm nach oben zeigt.",
  "input.onShake": "Hängt Code an, der ausgeführt wird, wenn der mini geschüttelt wird.",
  "input.pinIsPressed": "Ruft den Pin-Zustand (gehalten oder nicht) ab. Die Erdung muss gehalten werden, um den Stromkreis zu schließen.",
  "input.pinIsPressed|param|name": "Pin, der verwendet wird, um eine Berührung zu erkennen (z. B.: TouchPin.P0 )",
  "input.rotation": "Die Neigung und Drehung des mini Drehung auf ``X-Achse``oder ``Y-Achse``, in Grad.",
  "input.runningTime": "Ruft die Anzahl der Millisekunden auf, die seit dem Einschalten vergangen sind.",
  "input.runningTimeMicros": "Ruft die Anzahl der Mikrosekunden ab, die seit dem Einschalten vergangen sind.",
  "input.setAccelerometerRange": "Legt die Stichprobenbereich des Beschleunigungssensors in Schwerkraft fest.",
  "input.setAccelerometerRange|param|range": "Ein Wert, der die maximale Stärke der gemessenen Beschleunigung beschreibt",
  "input.temperature": "Ruft die aktuelle Temperatur in Grad Celsius (°C) ab.",
  "led": "Steuerung des LED-Bildschirms.",
  "led.brightness": "Ruft die Helligkeit des Bildschirms ab, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.displayMode": "Ruft den aktuellen Bildschirmmodus ab",
  "led.enable": "Schaltet das Display an und aus",
  "led.fadeIn": "Blendet die Bildschirmanzeige ein.",
  "led.fadeOut": "Blendet die Bildschirmhelligkeit aus.",
  "led.plot": "Schalte die angegebene LED mit Hilfe von X- und Y-Koordinaten ein (X ist horizontal, Y ist vertikal). (0,0) ist die obere linke Ecke.",
  "led.plotAll": "Schaltet alle LEDs an",
  "led.plotBarGraph": "Zeigt ein vertikales Balkendiagramm an, basierend auf dem `Wert`und dem `Hoch`-Wert. Wenn `Hoch`0 ist, wird das Diagramm automatisch angepasst.",
  "led.plotBarGraph|param|high": "maximalen Wert. Wenn dieser 0 ist, wird der Maximalwert automatisch angepasst, z.B.: 0",
  "led.plotBarGraph|param|value": "aktueller Wert zum Darstellen",
  "led.plotBrightness": "Schalte die angegebene LED mit bestimmter Helligkeit mit Hilfe von X- und Y-Koordinaten ein (X ist horizontal, Y ist vertikal). (0,0) ist die obere linke Ecke.",
  "led.plotBrightness|param|brightness": "die Helligkeit von 0 (aus) bis 255 (hell), z. B.: 255",
  "led.point": "Ruft den An/Aus-Status einer vorgegebenen LED mittels X-/Y-Koordinaten ab. (0,0) ist oben links.",
  "led.screenshot": "Macht einen Screenshot vom LED-Bildschirm und gibt ein Bild aus.",
  "led.setBrightness": "Lege die Helligkeit des Bildschirms fest, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.setBrightness|param|value": "Helligkeitswert, z.B.: 255, 127, 0",
  "led.setDisplayMode": "Legt den Anzeigemodus von Wiedergabe-LEDs zwischen Schwarz und Weiß und Graustufen fest.",
  "led.setDisplayMode|param|mode": "TODO",
  "led.stopAnimation": "Bricht die aktuelle Animation ab und löscht andere ausstehende Animationen.",
  "led.toggle": "Schaltet ein bestimmtes Pixel ein",
  "led.toggleAll": "Invertiert die aktuelle LED-Anzeige",
  "led.unplot": "Schalte die angegebene LED mit x-und y-Koordinaten ab (X ist horizontal, y ist vertikal). (0,0) ist oben links.",
  "music": "Erzeugung von Musiktönen.",
  "music.beat": "Gibt die Dauer eines Taktes in Milli-Sekunden aus",
  "music.beginMelody": "Beginnt mit der Wiedergabe einer Melodie.\nNoten werden als Zeichenfolgen in diesem Format ausgedrückt: NOTE[octave][:duration]",
  "music.beginMelody|param|melodyArray": "das abzuspielende Melodie-Array, z. B.: ['g5:1']",
  "music.beginMelody|param|options": "Melodie-Optionen, einmal/dauerhaft, im Vordergrund/im Hintergrund",
  "music.builtInMelody": "Ruft das Melodie-Array einer eingebauten Melodie ab.",
  "music.changeTempoBy": "Ändere die Geschwindigkeit um den angegebenen Wert",
  "music.changeTempoBy|param|bpm": "Die Änderung in Schlägen pro Minute auf das Tempo, z.B.: 20",
  "music.noteFrequency": "Ruft die Frequenz einer Note ab.",
  "music.noteFrequency|param|name": "der Name der Note (z. B. Note.C)",
  "music.onEvent": "Registriert Code, der bei verschiedenen Melodie-Ereignissen ausgeführt wird",
  "music.playTone": "Spielt einen Ton für den angegebenen Zeitraum über Pin ``P0`` ab.",
  "music.playTone|param|frequency": "Tonhöhe des abzuspielenden Tones in Hertz (Hz)",
  "music.playTone|param|ms": "Tondauer in Millisekunden (ms)",
  "music.rest": "Ruht (spielt nichts) für eine bestimmte Zeit auf Pin ``P0``.",
  "music.rest|param|ms": "Restdauer in Millisekunden (ms)",
  "music.ringTone": "Spielt einen Ton über Pin ``P0``.",
  "music.ringTone|param|frequency": "Tonhöhe des abzuspielenden Tones in Hertz (Hz)",
  "music.setPlayTone": "Legt eine benutzerdefinierte playTone-Funktion zum Abspielen von Melodien fest",
  "music.setTempo": "Legt die Geschwindigkeit auf den angegebenen Wert fest.",
  "music.setTempo|param|bpm": "Die neue Geschwindigkeit in Schlägen pro Minute, z.B.: 120",
  "music.tempo": "Gibt die Geschwindigkeit in Schlägen pro Minute aus. Die Geschwindigkeit ist Schnelligkeit (Bpm = Beats pro Minute), in der Töne abgespielt werden. Je größer der Wert, desto schneller werden die Töne abgespielt.",
  "parseInt": "Konvertiere Zeichenfolge A in eine Ganzzahl.",
  "pins": "Steuere die Stromstärke über die Pins für analoge/digitale Signale, Servos, I2C,...",
  "pins.analogPitch": "Gibt ein Pulsweiten Modulation (PWM)-Signal über den aktuellen Pitch-Pin. Benutze `analog set pitch pin`, um den Pitch-Pin festzulegen.",
  "pins.analogPitch|param|frequency": "TODO",
  "pins.analogPitch|param|ms": "TODO",
  "pins.analogReadPin": "Lese den Anschlusswert als Analog aus, d. h. als einen Wert zwischen 0 und 1023.",
  "pins.analogReadPin|param|name": "Pin, auf den geschrieben werden soll (z. B.: AnalogPin.P0)",
  "pins.analogSetPeriod": "Stellt die Pulsweite Modulation (PWM) des Analogausganges auf den angegebenen Wert in ** Mikrosekunden ** oder `1/1000` Millisekunden ein.\nWenn dieser Pin nicht als einen Analogausgang (mit `analog write pin`) konfiguriert ist, hat der Vorgang keine Auswirkungen.",
  "pins.analogSetPeriod|param|micros": "Zeit in Mikrosekunden. z.B.: 20000",
  "pins.analogSetPeriod|param|name": "analoger Pin, der zeitlich festgelegt werden soll, z. B. AnalogPin.P0",
  "pins.analogSetPitchPin": "Setzt den genutzten Pin, wenn ‚pins->analog pitch‘ angewendet wird.",
  "pins.analogSetPitchPin|param|name": "TODO",
  "pins.analogWritePin": "Legt den Wert des Verbinders auf analog fest. Der Wert muss zwischen 0 und 1023 liegen.",
  "pins.analogWritePin|param|name": "Name des Pins, auf den geschrieben werden soll, z. B.: AnalogPin.P0",
  "pins.analogWritePin|param|value": "Wert, der auf den Pin geschrieben werden soll, zwischen ``0`` und ``1023`` z.B.: 1023,0",
  "pins.createBuffer": "Erstellt einen Null-initialisierten Zwischenspeicher.",
  "pins.createBuffer|param|size": "Anzahl der Bytes im Zwischenspeicher",
  "pins.digitalReadPin": "Lese den angegebene Pin oder Verbinder als 0 oder 1",
  "pins.digitalReadPin|param|name": "Pin, von dem gelesen werden soll, z. B. DigitalPin.P0",
  "pins.digitalWritePin": "Setzt einen Pin- oder Verbinder-Wert auf 0 oder 1.",
  "pins.digitalWritePin|param|value": "Wert, der auf dem Pin 1 gesetzt werden soll, z.B. 0",
  "pins.i2cReadBuffer": "Lese `Größe`bytes aus einer 7-bit I2C-Adresse.",
  "pins.i2cReadNumber": "Lese eine Nummer aus einer 7-bit I2C-Adresse.",
  "pins.i2cWriteBuffer": "Schreibt Bytes in eine 7-bit I2C-Adresse.",
  "pins.i2cWriteNumber": "Schreibe eine Nummer in eine 7-bit I2C-Adresse.",
  "pins.map": "Definiert eine Nummer von einer Auswahl zu einer anderen um. Ein Wert ``von niedrig``wird so auf ``zu niedrig``umgeändert, ein Wert ``von hoch`` zu ``zu hoch`` etc.",
  "pins.map|param|fromHigh": "die obere Grenze des aktuellen Wertebereichs, z.B.: 1023",
  "pins.map|param|fromLow": "die untere Grenze des aktuellen Wertebereichs",
  "pins.map|param|toHigh": "die Obergrenze des Wertezielbereichs, z.B.: 4",
  "pins.map|param|toLow": "die Untergrenze des Wertezielbereichs",
  "pins.map|param|value": "Wert in Bereichen zuordnen",
  "pins.onPulsed": "Stellt diesen Pin als einen Digitaleingang ein und generiert Ereignisse, deren Zeitstempel die Dauer darstellt, in der der Pin entweder ``hoch``oder ``niedrig``war.",
  "pins.onPulsed|param|name": "digitaler Pin, auf dem registriert werden soll, z. B.: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "der Wert des Pulses, z. B.: PulseValue.High",
  "pins.pulseDuration": "Ruft die Dauer des letzten Impulses in Mikrosendungen ab. Diese Funktion soll von einem `onPulsed`-Handler aufgerufen werden.",
  "pins.pulseIn": "Gibt die Dauer eines Pulses in Mikrosekunden an",
  "pins.pulseIn|param|name": "der Pin, der den Puls misst, z. B.: DigitalPin.P0",
  "pins.pulseIn|param|value": "der Wert des Pulses, z. B.: PulseValue.High",
  "pins.servoSetPulse": "Konfiguriert diesen IO-Pin als einen analogen/PWM-Ausgang, stellt den Zeitraum auf 20 ms ein und setzt die Pulsweite fest, basieren auf dem angegeben Wert **Mikrosekunden** oder `1/1000`Millisekunden.",
  "pins.servoSetPulse|param|micros": "Impulsdauer in Mikrosekunden, z.B.: 1500",
  "pins.servoSetPulse|param|name": "PIN-Name",
  "pins.servoWritePin": "Schreibt einen Wert in den Servo, der die Welle entsprechend kontroliert. Auf einem Standard-Servo wird so der Winkel der Welle (in Grad) eingestellt, sodass sich die Welle entsprechend anpasst. Auf einem kontinuierlich drehenden Servo wird dadurch die Geschwindigkeit des Servos festgelegt, wobei ``0``die volle Geschwindigkeit in eine Richtung darstellt, ``180``die volle Geschwindigkeit in die andere, und ein Wert von ``90`` einen Stillstand erzeugt.",
  "pins.servoWritePin|param|name": "Pin, auf den geschrieben werden soll (z. B.: AnalogPin.P0)",
  "pins.servoWritePin|param|value": "Winkel oder Rotationsbeschleunigung, z.B.: 180,90,0",
  "pins.setEvents": "Konfiguriert die von diesem Pin ausgegebenen Ereignisse. Ereignisse können abonniert werden mit ``control.onEvent()``.",
  "pins.setEvents|param|name": "Pin, auf dem der Ereignismodus festgelegt wird, z. B.: DigitalPin.P0",
  "pins.setEvents|param|type": "die Art der von diesem Pin ausgegebenen Ereignisse, z. B.: PinEventType.Edge",
  "pins.setPull": "Stellt die Anziehungskraft des Pins ein.",
  "pins.setPull|param|name": "Pin, auf dem der Pull-Modus aktiviert wird, z. B. DigitalPin.P0",
  "pins.setPull|param|pull": "eine der mbed-Pull-Konfigurationen, z. B. PinPullMode.PullUp",
  "pins.sizeOf": "Ruft die Bytegröße im spezifierten Nummernformat ab.",
  "pins.spiFormat": "Legt SPI-Bits und -Modus fest",
  "pins.spiFormat|param|bits": "die Anzahl der Bits, z. B.: 8",
  "pins.spiFormat|param|mode": "der Modus, z. B.: 3",
  "pins.spiFrequency": "Legt die SPI-Frequenz fest",
  "pins.spiFrequency|param|frequency": "die Taktfrequenz, z. B.: 1000000",
  "pins.spiPins": "Legt die von der SPI-Instanz verwendeten MOSI-, MISO-, SCK-Pins fest",
  "pins.spiWrite": "Schreibe in den SPI-Slave und gebe die Antwort aus",
  "pins.spiWrite|param|value": "Daten, die an den SPI-Slave geschickt werden sollen",
  "serial": "Lesen und Schreiben von Daten über eine serielle Verbindung.",
  "serial.delimiters": "Gibt die mit dem Begrenzer korrespondierende Zeichenfolge aus.",
  "serial.onDataReceived": "Registriert ein Ereignis, das ausgeführt wird, wenn einer der Begrenzer erkannt wird.",
  "serial.onDataReceived|param|delimiters": "die Zeichen, mit denen die empfangenen Zeichen abgeglichen werden.",
  "serial.readBuffer": "Liest mehrere Zeichen aus dem Empfangszwischenspeicher. Pausiert, bis genügend Zeichen vorhanden sind.",
  "serial.readBuffer|param|length": "Standard-Zwischenspeicherlänge, z. B.: 64",
  "serial.readLine": "Liest eine Textzeile aus der seriellen Schnittstelle.",
  "serial.readString": "Liest die gepufferten empfangenen Daten als Zeichenfolge",
  "serial.readUntil": "Liest aus eine Textzeile aus dem seriellen Anschluss und gibt den Puffer aus, wenn die Begrenzung erreicht wurde.",
  "serial.readUntil|param|delimiter": "Text-Begrenzung, die die Textblöcke voneinander trennt",
  "serial.redirect": "Legt den seriellen Eingang und Ausgang auf Pins statt der USB-Verbindung.",
  "serial.redirectToUSB": "Lege den seriellen Eingang und Ausgang auf die USB-Verbindung.",
  "serial.redirect|param|rate": "die neue Baudrate, z. B.: 115200",
  "serial.redirect|param|rx": "der neue Empfangs-Pin, z. B. SerialPin.P1",
  "serial.redirect|param|tx": "der neue Übertragungs-Pin, z. B. SerialPin.P0",
  "serial.writeBuffer": "Sendet einen Zwischenspeicher über serielle Verbindung",
  "serial.writeLine": "Gibt eine Zeile des Textes an die serielle",
  "serial.writeNumber": "Gibt einen numerischen Wert an die serielle",
  "serial.writeString": "Sendet ein Stück Text über serielle Verbindung.",
  "serial.writeValue": "Schreibt ein ``Namen: Wert`` Wertepaar auf die serielle Schnittstelle.",
  "serial.writeValue|param|name": "Name des Wertestreams, z.B.: x",
  "serial.writeValue|param|value": "Schreiben"
}