{
  "AcceleratorRange.EightG": "İvme ölçer, 8 gravite kadar kuvvet ölçer",
  "AcceleratorRange.FourG": "İvme ölçer, 4 gravite kadar kuvvet ölçer",
  "AcceleratorRange.OneG": "İvme ölçer, 1 gravite kadar kuvvet ölçer",
  "AcceleratorRange.TwoG": "İvme ölçer, 2 gravite kadar kuvvet ölçer",
  "Array": "Listelerdeki öğeleri ekleme, kaldırma ve değiştirme.\n\nListelerdeki öğeleri ekleme, kaldırma ve değiştirme.",
  "Array.filter": "Bir geri arama işlevinde belirtilen koşula uyan bir dizinin öğelerini döndürür.",
  "Array.filter|param|callbackfn": "İki bağımsız değişkeni kabul eden bir işlevdir. Filtreleme yöntemi, dizideki her öğe için \"callbackfn\" işlevini bir kez çağırır.",
  "Array.get": "Belirli bir dizindeki değeri alır.",
  "Array.get|param|index": "öğe listesindeki sıfır tabanlı konum, örneğin: 0",
  "Array.indexOf": "Dizideki bir değerin ilk ortaya çıktığı indeksi döndürür.",
  "Array.indexOf|param|fromIndex": "Aramanın başlaması gereken dizin indeksi. \"fromIndex\"in dizinden çıkarılması durumunda, arama 0 indeksinden başlar.",
  "Array.indexOf|param|item": "Dizide bulunacak değer.",
  "Array.insertAt": "Belirli bir dizindeki değeri yerleştirin, dizi uzunluğunu 1 artırın.",
  "Array.insertAt|param|index": "listedeki sıfır temelli konuma eklenecek değer, örneğin: 0",
  "Array.insertAt|param|value": "yerleştir, ör: 0",
  "Array.length": "Dizinin uzunluğunu alır veya ayarlar. Bu, dizide tanımlanan en yüksek öğeden bir değer daha fazladır.",
  "Array.map": "Dizinin her bir öğesi için tanımlanan geri arama işlevini çağırır ve arama sonuçlarını içeren dizini geri döndürür.",
  "Array.map|param|callbackfn": "İki bağımsız değişkeni kabul eden bir işlevdir. Map yöntemi, dizideki her öğe için \"callbackfn\" işlevini bir kez çağırır.",
  "Array.pop": "Dizinin son elemanını siler ve geri döndürür.",
  "Array.push": "Diziye yeni öğeler ekler.",
  "Array.push|param|item": "Diziye eklenecek.",
  "Array.reduce": "Bir dizideki tüm öğeler için belirtilen geri arama işlevini çağırır. Geri arama işlevinin dönüş değeri toplam sonucu verir ve bir sonraki çağrı geri çağırma işlevinde bağımsız değişken olarak atanır.",
  "Array.reduce|param|callbackfn": "Üç bağımsız değişkeni kabul eden bir işlevdir. Azaltma yöntemi, dizideki her öğe için \"callbackfn\" işlevini bir kez çağırır.",
  "Array.reduce|param|initialValue": "Toplama işlemini başlatacak başlangıç değeri. \"Callbackfn\" işlevi için yapılan ilk çağrı, bu değeri dizi değerinin yerine bir bağımsız bir değişken olarak atar.",
  "Array.removeAt": "Belirli bir indeksteki öğeyi siler.",
  "Array.removeAt|param|index": "değeri kaldırmak için listedeki sıfır tabanlı konum, örneğin: 0",
  "Array.removeElement": "Bir nesnenin ilk ortaya çıkışını siler. Nesne silinirse, \"true\" değerini döndürür.",
  "Array.reverse": "Bir dizideki öğeleri ters çevirir. İlk dizi öğesi sona geçer ve son dizi öğesi başa geçer.",
  "Array.set": "Özel bir indeksteki değeri saklar.",
  "Array.set|param|index": "listedeki sıfır temelli konuma kaydedilecek değer, örneğin: 0",
  "Array.shift": "Bir dizideki ilk öğeyi kaldırır ve geri getirir. Bu yöntem, dizinin uzunluğunu değiştirir.",
  "Array.slice": "Bir dizinin bir bölümünü döndürür.",
  "Array.slice|param|end": "Dizinin belirtilen bölümünün sonu, örneğin: 0",
  "Array.slice|param|start": "Dizinin belirtilen bölümünün başlangıcı, örneğin: 0",
  "Array.sort": "Bir dizinin öğelerini sıralar ve diziyi döndürür. Sıralama mutlaka kararlı değildir.",
  "Array.splice": "Bir dizideki öğeleri kaldırır.",
  "Array.splice|param|deleteCount": "Kaldırılacak öğe sayısı. örneğin: 0",
  "Array.splice|param|start": "Öğelerin diziden silinmeye başlanacağı sıfır tabanlı konum, örneğin: 0",
  "Array.unshift": "Bir dizinin başlangıcına bir öğe ekler ve dizinin yeni uzunluğunu döndürür.",
  "Array.unshift|param|value": "dizinin başlangıcına eklemek için.",
  "Boolean.toString": "Bir nesnenin satır görünümünü döndürür.",
  "Buffer.fill": "Belirli bir değere sahip geçici bellek alanını (bir parçasını) doldurur.",
  "Buffer.getNumber": "Belirtilen biçimdeki bir sayıyı ara bellekten okur.",
  "Buffer.length": "Bir Ara bellek nesnesinin uzunluğunu döndürür.",
  "Buffer.rotate": "Ara bellek değerini sola yuvarla.",
  "Buffer.rotate|param|length": "ara bellekteki öğe sayısı. Negatif ise, arabellek uzunluğunun başlangıç değeri eksi olarak ayarlanır. Örneğin: -1",
  "Buffer.rotate|param|offset": "taşınacak bayt sayısı; sağa taşımak için negatif değer kullanın",
  "Buffer.rotate|param|start": "ara bellekteki başlangıç ofseti. Varsayılan değer 0'dır.",
  "Buffer.setNumber": "Ara bellekte belirtilen biçimde bir sayı yazar.",
  "Buffer.shift": "Sıfır ile doldurarak ara belleği sola kaydırır.",
  "Buffer.shift|param|length": "ara bellekteki öğe sayısı. Negatif ise, arabellek uzunluğunun başlangıç değeri eksi olarak ayarlanır. Örneğin: -1",
  "Buffer.shift|param|offset": "taşınacak bayt sayısı; sağa taşımak için negatif değer kullanın",
  "Buffer.shift|param|start": "ara bellekteki başlangıç ofseti. Varsayılan değer 0'dır.",
  "Buffer.slice": "Bir ara bellek parçasının kopyasını geri döndürür.",
  "Buffer.write": "Geçerli ara belleğe 'dstOffset' alanındaki 'src' içeriğini yazar.",
  "EventCreationMode": "Etkinlik nasıl oluşturulur.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent başlatılır ve olay işleyiciler hemen harekete geçirilir (kesintilerde kullanmak için uygun değildir!).",
  "EventCreationMode.CreateOnly": "MicroBitEvent başlatılır ve başka bir işlem yapılmaz.",
  "Gesture.EightG": "8G'lik bir şok algılandığında etkinleşir",
  "Gesture.FreeFall": "Kontrol paneli başarısız olduğunda etkinleştirilir!",
  "Gesture.LogoDown": "Logo aşağıdayken ve ekran dikeyken tetiklenir",
  "Gesture.LogoUp": "Logo yukarıdayken ve ekran dikeyken etkinleşir",
  "Gesture.ScreenDown": "Ekran yukarı doğru baktığında ve panel yatay olduğunda etkinleşir",
  "Gesture.ScreenUp": "Ekran aşağı doğru baktığında ve panel yatay olduğunda etkinleşir",
  "Gesture.Shake": "Sallandığında etkinleşir",
  "Gesture.SixG": "6G'lik bir şok algılandığında etkinleşir",
  "Gesture.ThreeG": "3G'lik bir şok algılandığında etkinleşir",
  "Gesture.TiltLeft": "Ekran sola döndürüldüğünde etkinleşir",
  "Gesture.TiltRight": "Ekran sağa döndürüldüğünde etkinleşir",
  "Image.clear": "Tüm pikselleri kapatır.",
  "Image.height": "Satırlardaki yüksekliği alır (her zaman 5)",
  "Image.pixel": "\"(x,y)\" konumundaki piksel durumunu alır",
  "Image.pixelBrightness": "Belirli bir konumdaki piksel parlaklığını ([0..255]) alır",
  "Image.pixel|param|x": "TODO",
  "Image.pixel|param|y": "TODO",
  "Image.plotFrame": "Ekrana görüntünün çerçeve \"indeksini\" çizer.",
  "Image.plotFrame|param|xOffset": "görüntüyü göstermeye başlamak için sütun indeksi",
  "Image.plotImage": "Belirli bir sütundaki görüntüyü ekrana çizer",
  "Image.scrollImage": "Bir görüntüyü kaydırır.",
  "Image.scrollImage|param|frameOffset": "x ofseti animasyonun her adımında taşındı, örneğin: 1, 2, 5",
  "Image.scrollImage|param|interval": "her animasyon aralığı arasındaki süre milisaniye cinsindendir, örneğin: 200",
  "Image.setPixel": "\"(x,y)\" konumundaki piksel durumunu ayarlar",
  "Image.setPixelBrightness": "Belli bir pozisyondaki özel bir piksel parlaklığını ayarlar",
  "Image.setPixel|param|value": "TODO",
  "Image.setPixel|param|x": "TODO",
  "Image.setPixel|param|y": "TODO",
  "Image.showFrame": "Resim şeridinin belirli bir karesini gösterir.",
  "Image.showFrame|param|frame": "TODO",
  "Image.showImage": "\"x ofseti\" ofsetindeki resimden bir çerçeve görüntüler.",
  "Image.showImage|param|xOffset": "görüntüyü göstermeye başlamak için sütun indeksi",
  "Image.width": "Sütunlardaki genişliği alır",
  "Math": "Sayılarla daha karmaşık işlemler.",
  "Math.abs": "Bir sayının mutlak değerini döndürür (değerinin pozitif veya negatif olup olmadığına bakılmaksızın).\nÖrneğin, -5'in mutlak değeri 5'in mutlak değeri ile aynıdır.",
  "Math.abs|param|x": "Mutlak değeri gerektiren sayısal ifade.",
  "Math.max": "Sağlanan iki sayısal ifadeden büyük olanı döndürür.",
  "Math.min": "Sağlanan iki sayısal ifadeden küçük olanı döndürür.",
  "Math.pow": "Belirli bir güç elde edilen temel bir ifadenin değerini döndürür.",
  "Math.pow|param|x": "İfadenin taban değeri.",
  "Math.pow|param|y": "İfadenin üst değeri.",
  "Math.random": "Yalancı bir rastgele sayıyı \"0\" ile \"limit\" değeri arasında döndür.",
  "Math.randomBoolean": "Rastgele olarak \"doğru\" veya \"yanlış\" değerleri üretir, bir metal parayı döndürmek gibi.",
  "Math.random|param|limit": "üretilen sayının üst sınır, örneğin: 4",
  "Math.sign": "x değerinin pozitif, negatif veya sıfır olduğunu belirten x işaretini döndürür.",
  "Math.sign|param|x": "Sınanacak sayısal ifade",
  "Math.sqrt": "Bir sayının karekökünü döndürür.",
  "Math.sqrt|param|x": "Sayısal ifade.",
  "Number.toString": "Bir sayının bir dize gösterimini döndürür.",
  "String": "Metin dizilerini birleştirin, bölün ve arayın.\n\nMetin dizilerini birleştirin, bölün ve arayın.",
  "String.charAt": "Belirtilen dizindeki karakteri döndürür.",
  "String.charAt|param|index": "İstenilen karakterin sıfır temelli indeks değeri, örneğin: 0",
  "String.charCodeAt": "Belirtilen konumdaki karakterin Unicode değerini döndürür.",
  "String.charCodeAt|param|index": "İstenen karakterin sıfır temelli dizini. Belirtilen indekste hiçbir karakter yoksa, NaN döndürülür.",
  "String.compare": "İki dizi karakterlerin sıralamasının nasıl farklı olduğunu görün (ASCII kodlamasında).",
  "String.compare|param|that": "Hedef dizi ile karşılaştırılacak dizi",
  "String.concat": "İki veya daha fazla dizinin birleşimini içeren bir dize döndürür.",
  "String.concat|param|other": "Dizenin sonuna eklenecek dize, örneğin: \"beni ekle!\"",
  "String.fromCharCode": "Verilen ASCII karakter kodundan bir dizi oluşturun.",
  "String.isEmpty": "Dizinin boş olup olmadığını gösteren bir değeri döndürür",
  "String.length": "Bir Dize nesnesinin uzunluğunu döndürür.",
  "String.substr": "Geçerli dizenin alt dizesini döndürür.",
  "String.substr|param|length": "ayıklanacak karakter sayısı, örneğin: 3",
  "String.substr|param|start": "ilk karakter indeksi, geriye doğru sayımdan başlayarak negatif olabilir, örneğin: 0",
  "basic": "Temel mikro:bit işlevlerine erişim sağlar.",
  "basic.clearScreen": "Tüm LED'leri kapatır",
  "basic.forever": "Kodu sonsuza kadar arka planda yineler. Her yinelemede, diğer kodların çalışmasına izin verir.",
  "basic.pause": "Milisaniye cinsinden belirli bir süre için duraklatır",
  "basic.pause|param|ms": "duraklatma aralığı, örneğin: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "LED ekrana bir resim çizer.",
  "basic.plotLeds|param|leds": "LED modellerini açma/kapama",
  "basic.showAnimation": "Animasyon olarak bir dizi LED ekranı gösterir.",
  "basic.showAnimation|param|interval": "yeniden çizim arasındaki milisaniye cinsinden süre",
  "basic.showAnimation|param|leds": "LED modellerini açma/kapama",
  "basic.showArrow": "Ekranda bir ok gösterir",
  "basic.showArrow|param|direction": "okun yönü",
  "basic.showArrow|param|interval": "simgeyi göstermek için geçen süre (milisaniye). Varsayılan süre 600'dür.",
  "basic.showIcon": "Seçilen simgeyi LED ekrana çizer",
  "basic.showIcon|param|icon": "önceden tanımlanmış simge kimliği",
  "basic.showIcon|param|interval": "simgeyi göstermek için geçen süre (milisaniye). Varsayılan süre 600'dür.",
  "basic.showLeds": "LED ekrana bir resim çizer.",
  "basic.showLeds|param|interval": "çizimden sonra milisaniye cinsinden duraklatma süresi",
  "basic.showLeds|param|leds": "LED modelini açma/kapama",
  "basic.showNumber": "Ekranda bir sayıyı kaydırın. Sayı ekranda görünüyorsa (örneğin, tek bir rakamsa) kaydırmayın.",
  "basic.showNumber|param|interval": "kaydırma hızı; örneğin: 150, 100, 200, -100",
  "basic.showString": "Metni, ekranda bir defada bir karakter olacak şekilde görüntüleyin. Dizi ekrana sığıyorsa (örneğin, bir harf), kaydırma işlemi yapılamaz.",
  "basic.showString|param|interval": "karakterleri kaydırma hızı; örneğin: 150, 100, 200, -100",
  "basic.showString|param|text": "metnin ekranda kaydırılması, örneğin: \"Merhaba!\"",
  "control": "Çalışma ve etkinlik zamanı araçları.",
  "control.assert": "Koşulun yanlış olması durumunda, seri konsolunda bir ileti ve 098 kodlu hata mesajı gösterilir.",
  "control.deviceName": "Seri numarasına göre cihaz için uygun bir ad atanır",
  "control.deviceSerialNumber": "Bu cihaz için iç verilerden benzersiz ve tutarlı bir seri numarası üretir.",
  "control.eventSourceId": "Bir C ++ çalışma zamanı sabitinin değerini döndürür",
  "control.eventTimestamp": "Kütüphanedeki son olayın zaman damgasını alır",
  "control.eventValue": "Kütüphanedeki son olayın değerini alır",
  "control.eventValueId": "Bir C ++ çalışma zamanı sabitinin değerini döndürür",
  "control.inBackground": "Arka planda çalışan kodları programlar.",
  "control.onEvent": "Kütüphanedeki bir olayı etkinleştirir.",
  "control.panic": "Belirtilen hata kodunu görüntüler ve programı durdur.",
  "control.raiseEvent": "Kütüphanedeki bir olayı etkinleştirir.",
  "control.raiseEvent|param|mode": "olayın oluşturulmasından sonra nasıl işlenmesi gerektiğine ilişkin isteğe bağlı tanım (varsayılan CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "Olayı oluşturan MicroBit Bileşeninin Kimliği, örneğin: MICROBIT_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Olayın nedenini belirten bileşen için tanımlanmış özel kod.",
  "control.reset": "BBC micro:bit'i sıfırlar.",
  "control.runtimeWarning": "Simülatörde uyarıları göster.",
  "control.waitMicros": "Verilen mikrosaniye süresince geçerli fiberi bloke eder",
  "control.waitMicros|param|micros": "beklenecek mikro saniye sayısı. örneğin: 4",
  "game": "Bir LED göstergeli Sprite oyun motoru",
  "game.LedSprite": "Tek bir LED ile çizilmiş Sprite oyunu",
  "game.LedSprite.blink": "Bir hareketli görüntünün \"yanıp sönme\" süresini raporlar",
  "game.LedSprite.brightness": "LED ekranda hareketli görüntülerin \"parlaklığını\" raporlar",
  "game.LedSprite.change": "Hareketli görüntülerin özelliğini değiştirir",
  "game.LedSprite.changeBlinkBy": "Belirli bir milisaniye süresine göre \"yanıp sönme\" aralığını değiştirir",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "Belirli bir değere göre \"y\" konumunu değiştirir",
  "game.LedSprite.changeBrightnessBy|param|value": "parlaklık değişiklik değeri",
  "game.LedSprite.changeDirectionBy": "Sağa döndürerek \"yön\" pozisyonunu belirtilen miktarda değiştirir",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "Belirli bir değere göre \"X\" konumunu değiştirir",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "Belirli bir değere göre \"y\" konumunu değiştirir",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "değiştirilecek özelliğin adı",
  "game.LedSprite.change|param|value": "değişim miktarı, örneğin: 1",
  "game.LedSprite.delete": "Hareketli görüntüyü oyun motorundan siler. Hareketli görüntü artık ekranda görünmez veya diğer hareketli görüntülerle etkileşime geçemez.",
  "game.LedSprite.direction": "Bir hareketli görüntünün mevcut yönünü raporlar",
  "game.LedSprite.get": "Hareketli görüntünün bir özelliğini alır",
  "game.LedSprite.get|param|property": "değiştirilecek özelliğin adı",
  "game.LedSprite.goTo": "Ekranda bu konuma git",
  "game.LedSprite.goTo|param|x": "TODO",
  "game.LedSprite.goTo|param|y": "TODO",
  "game.LedSprite.ifOnEdgeBounce": "Ekranın kenarına dokunduysanız ve ekrana doğru baktıysanız, uzaklaşın.",
  "game.LedSprite.isTouching": "Hareketli görüntü, belirtilen hareketli görüntü ile aynı konuma sahipse \"doğru\"",
  "game.LedSprite.isTouchingEdge": "Hareketli görüntü bir kenara dokunuyorsa \"doğru\" olarak raporlar",
  "game.LedSprite.isTouching|param|other": "TODO",
  "game.LedSprite.move": "Mevcut yönde belirli sayıda LED'i hareket ettirir",
  "game.LedSprite.move|param|leds": "taşınacak LED sayısı, örneğin: 1, -1",
  "game.LedSprite.off": "Hareketli görüntüleri kapatır (varsayılan olarak açıktır)",
  "game.LedSprite.on": "Hareketli görüntüleri açar (varsayılan olarak açıktır)",
  "game.LedSprite.set": "Hareketli görüntünün bir özelliğini ayarlar",
  "game.LedSprite.setBlink": "Milisaniye cinsinden yanıp sönme süresini ayarlar.",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "Bir hareketli görüntünün \"parlaklığını\" ayarlar",
  "game.LedSprite.setBrightness|param|brightness": "parlaklık 0 (kapalı) - 255 (açık), örneğin: 255.",
  "game.LedSprite.setDirection": "Mevcut hareketli görüntünün yönünü 45'in en yakın çarpanına yuvarlayarak ayarlar",
  "game.LedSprite.setDirection|param|degrees": "TODO",
  "game.LedSprite.setX": "Hareketli görüntünün \"x\" pozisyonunu ayarlar",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "Hareketli görüntünün \"y\" pozisyonunu ayarlar",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "değiştirilecek özelliğin adı",
  "game.LedSprite.turn": "Hareketli görüntüyü döndürür",
  "game.LedSprite.turnLeft": "Sola (saat yönünün tersine) döndürür",
  "game.LedSprite.turnLeft|param|degrees": "TODO",
  "game.LedSprite.turnRight": "Sağa (saat yönünde) döndürür",
  "game.LedSprite.turnRight|param|degrees": "TODO",
  "game.LedSprite.turn|param|degrees": "döndürülecek açı derecesi, örneğin: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "sola veya sağa",
  "game.LedSprite.x": "LED ekranda hareketli görüntülerin \"x\" pozisyonunu raporlar",
  "game.LedSprite.y": "LED ekranda hareketli görüntülerin \"y\" pozisyonunu raporlar",
  "game.addLife": "Mevcut cana hayat puanları ekler",
  "game.addLife|param|lives": "TODO",
  "game.addScore": "Geçerli puanı puan ekler ve bir animasyon gösterir",
  "game.addScore|param|points": "değişen puan miktarı, örneğin: 1",
  "game.createSprite": "Sağı işaret eden yeni bir hareketli LED oluşturur.",
  "game.createSprite|param|x": "hareketli görüntünün yatay koordinatı, örneğin: 2",
  "game.createSprite|param|y": "hareketli görüntünün dikey koordinatı, örneğin: 2",
  "game.currentTime": "Milisaniye cinsinden kalan süreyi (geri sayım sayacının başlamasından itibaren) veya geçerli saati (cihazın veya kronometrenin başlatıldığı andan itibaren) gösterir.",
  "game.gameOver": "\"Oyun bitti\" animasyonunu ve puanı gösterir.",
  "game.invalidSprite": "Geçersiz bir hareket görüntüyü gösterir; yerel değişkenleri başlatmak için kullanılır.",
  "game.isGameOver": "\"Oyun bitti\" dizisinin gösterilip gösterilmediğini belirtir.",
  "game.isPaused": "Oyun oluşturma işleminin diğer animasyonlara izin vermek için duraklatılıp duraklatılmayacağını belirtir",
  "game.isRunning": "Oyunun hala çalışıp çalışmadığını gösteren bir değeri alır. Oyun sona ererse, 'yanlış' değerini döndürür.",
  "game.level": "Geçerli seviyeyi getirir",
  "game.levelUp": "Seviyeyi yükseltir ve bir mesaj görüntüler.",
  "game.life": "Geçerli canı alır",
  "game.pause": "Diğer animasyonlara izin vermek için oyun oluşturma motorunu duraklatır",
  "game.removeLife": "Bazı canların sayısını siler",
  "game.removeLife|param|life": "TODO",
  "game.resume": "Oyun oluşturma motorunu devam ettirir",
  "game.score": "Geçerli puanı alır",
  "game.setLife": "Mevcut can değerini ayarlar",
  "game.setLife|param|value": "TODO",
  "game.setScore": "Geçerli puan değerini ayarlar",
  "game.setScore|param|value": "yeni puan değeri.",
  "game.showScore": "Ekranda skoru görüntüler.",
  "game.startCountdown": "Animasyonu görüntüler, sonra geri sayım sayacını başlatır ve sayaç 0'a ulaştığında oyun sona erer",
  "game.startCountdown|param|ms": "milisaniye cinsinden geri sayım süresi, örneğin: 10000",
  "game.startStopwatch": "Bir kronometre sayacını başlatır. `Geçerli saat 'geçen süreyi geri getirecektir.",
  "images": "LED görüntülerinin oluşturulması, çalıştırılması ve görüntülenmesi.",
  "images.createBigImage": "2 karelik bir görüntü oluşturur.",
  "images.createImage": "LED ekrana uygun bir görüntü oluşturur.",
  "input": "Sensörlerden gelen etkinlik bildirimleri ve veriler",
  "input.acceleration": "Miligravite cinsinden ivme değerini alır (gövde yukarı gelecek şekilde yatay konuma getirildiğinde, x = 0, y = 0 ve z = -1024)",
  "input.acceleration|param|dimension": "TODO",
  "input.buttonIsPressed": "\"A\" ve \"B\" için düğmenin durumunu (basılı veya basılı değil) alın.",
  "input.buttonIsPressed|param|button": "isteği sorgulama düğmesi, örneğin: A Düğmesi",
  "input.calibrate": "Eski, bunun yerine input.calibrateCompass öğesini kullanın.",
  "input.calibrateCompass": "Artık kullanılmıyor, pusula ayarı otomatik olarak yapılmaktadır.",
  "input.compassHeading": "Mevcut pusula yönünü derece olarak alın.",
  "input.lightLevel": "LED ekrana uygulanan \"0\" (karanlık) ve \"255\" (parlak) değerleri arasındaki ışık seviyesini okur.",
  "input.magneticForce": "\"Mikro-Tesla\" (\"μT\") cinsinden manyetik kuvvet değerini alır. Bu işlev, simülatör tarafından desteklenmemektedir.",
  "input.magneticForce|param|dimension": "TODO",
  "input.onButtonPressed": "Bir A düğmesine (A, B düğmesine veya her ikisine birden (A + B)) basılıp tekrar bırakıldığında bir şeyler yapar.",
  "input.onButtonPressed|param|body": "olay ortaya çıktığında çalışacak kod",
  "input.onButtonPressed|param|button": "basılması gereken düğme",
  "input.onGesture": "Hareket yapıldıktan sonra bir şey yapın (mikro:bit'i sallamak gibi).",
  "input.onGesture|param|body": "bir hareket gerçekleştirildiğinde çalışacak kod",
  "input.onGesture|param|gesture": "takip edilecek hareketin türü, örneğin: Gesture.Shake",
  "input.onLogoDown": "Logo, aşağı doğru yönlendirildiğinde ve pano dikey konumdayken çalışacak kodu ekler.",
  "input.onLogoDown|param|body": "TODO",
  "input.onLogoUp": "Logo, yukarı doğru yönlendirildiğinde ve pano dikey konumdayken çalışacak kodu ekler.",
  "input.onLogoUp|param|body": "TODO",
  "input.onPinPressed": "Bir pime dokunulup tekrar serbest bırakıldığında (aynı zamanda GND pimine dokunurken) bir eylem gerçekleştirir.",
  "input.onPinPressed|param|body": "pime basıldığında çalıştırılacak kod",
  "input.onPinPressed|param|name": "basılması gereken pim, örneğin: TouchPin.P0",
  "input.onPinReleased": "Pin bırakıldığında bir eylem gerçekleştirir.",
  "input.onPinReleased|param|body": "pin bırakıldığında çalışacak kod",
  "input.onPinReleased|param|name": "bırakılması gereken pin, örneğin: TouchPin.P0",
  "input.onScreenDown": "Ekran aşağı doğru çevrildiğinde çalıştırılacak kodu ekler.",
  "input.onScreenDown|param|body": "TODO",
  "input.onScreenUp": "Ekran yukarı doğru çevrildiğinde çalıştırılacak kodu ekler.",
  "input.onScreenUp|param|body": "TODO",
  "input.onShake": "Cihaz sallandığında çalışacak kodu ekler.",
  "input.onShake|param|body": "TODO",
  "input.pinIsPressed": "Pimin durumunu öğrenin (basılı veya basıl değil). Devreyi kapatmak için Panoyu yere doğru tutmak gerekir.",
  "input.pinIsPressed|param|name": "dokunmayı algılamak için kullanılan pim, örneğin: TouchPin.P0",
  "input.rotation": "Cihazın eğimi veya dönüşü, \"x ekseni\" veya \"y ekseni\" boyunca derece cinsinden döner.",
  "input.rotation|param|kind": "TODO",
  "input.runningTime": "Açılıştan bu yana geçen milisaniye sayısını alır.",
  "input.runningTimeMicros": "Açılıştan bu yana geçen mikrosaniye sayısını alır.",
  "input.setAccelerometerRange": "Örnek ivmeölçer aralığını gravite cinsinden ayarlar.",
  "input.setAccelerometerRange|param|range": "ölçülen ivmenin maksimum gücünü tanımlayan değer",
  "input.temperature": "Celsius (°C) cinsinden sıcaklık derecesini alır.",
  "led": "LED ekran kontrolü.",
  "led.brightness": "Ekran parlaklığını 0 (kapalı) ve 255 (tam parlak) değerleri arasında değiştirir.",
  "led.displayMode": "Geçerli görüntü modunu alır",
  "led.enable": "Ekranı açar veya kapatır",
  "led.fadeIn": "Ekran görüntüsünü değiştirir.",
  "led.fadeIn|param|ms": "TODO",
  "led.fadeOut": "Ekranın parlaklığını kademeli olarak azaltır.",
  "led.fadeOut|param|ms": "TODO",
  "led.plot": "x ve y koordinatlarını (x yatay, y dikey) kullanarak belirtilen LED'i açar. (0,0) sol üstteki LED'dir.",
  "led.plotAll": "Tüm LED'leri açar",
  "led.plotBarGraph": "'Değer' ve 'yükseklik' değerlerine göre dikey bir çubuk grafik görüntüler. \"Yükseklik\" 0 ise, grafik otomatik olarak ayarlanır.",
  "led.plotBarGraph|param|high": "maksimum değer. 0 ise, maksimum değer otomatik olarak ayarlanır, örneğin: 0",
  "led.plotBarGraph|param|value": "çizim için geçerli değer",
  "led.plotBrightness": "x ve y koordinatlarını (x yatay, y dikey) kullanarak özel parlaklık değerine sahip LED'i açar. (0,0) sol üstteki LED'dir.",
  "led.plotBrightness|param|brightness": "parlaklık, 0 (kapalı) - 255 (parlak), örneğin: 255",
  "led.plotBrightness|param|x": "0'dan başlayarak LED'in yatay koordinatı",
  "led.plotBrightness|param|y": "0'dan başlayarak LED'in dikey koordinatı",
  "led.plot|param|x": "0'dan başlayarak LED'in yatay koordinatı",
  "led.plot|param|y": "0'dan başlayarak LED'in dikey koordinatı",
  "led.point": "X ve y koordinatlarını kullanarak belirtilen LED'i \"açık\" veya \"kapalı\" duruma getirin. (0,0) sol üstteki LED'dir.",
  "led.point|param|x": "TODO",
  "led.point|param|y": "TODO",
  "led.screenshot": "LED ekranın ekran görüntüsünü alır ve bir görüntüyü döndürür.",
  "led.setBrightness": "Ekran parlaklığını 0 (kapalı) ve 255 (tam parlak) değerleri arasında ayarlar.",
  "led.setBrightness|param|value": "parlaklık değeri, örneğin: 255, 127, 0",
  "led.setDisplayMode": "LED'leri oluşturmak için siyah-beyaz ve gri tonlamalı görüntü modunu ayarlar.",
  "led.setDisplayMode|param|mode": "ekranın çalıştığı görüntü modu",
  "led.stopAnimation": "Geçerli animasyonu iptal eder ve bekleyen diğer animasyonları temizler.",
  "led.toggle": "Bir pikselin durumunu değiştirir",
  "led.toggleAll": "Geçerli LED ekranı ters çevirir",
  "led.toggle|param|x": "TODO",
  "led.toggle|param|y": "TODO",
  "led.unplot": "x ve y koordinatlarını (x yatay, y dikey) kullanarak belirli bir LED'i kapatır. (0,0) sol üstteki LED'dir.",
  "led.unplot|param|x": "TODO",
  "led.unplot|param|y": "TODO",
  "music": "Müzik tonlarının oluşturulması.",
  "music.beat": "Bir vuruş süresini milisaniye cinsinden döndürür",
  "music.beginMelody": "Bir melodiyi çalmaya başlar.\nNotalar, bu formata sahip bir karakter dizisi olarak ifade edilir: NOTA[octave][:süre]",
  "music.beginMelody|param|melodyArray": "çalınacak melodi dizisi, örneğin: ['g5: 1']",
  "music.beginMelody|param|options": "melodi seçenekleri: bir kez / her zaman, ön plan / arka plan",
  "music.builtInMelody": "Dahili bir melodinin melodi dizisini alır.",
  "music.changeTempoBy": "Belirtilen değere göre tempoyu değiştirir",
  "music.changeTempoBy|param|bpm": "Tempo değiştirme (dakikadaki vuruş sayısı), örneğin: 20",
  "music.noteFrequency": "Bir notanın frekansını alır.",
  "music.noteFrequency|param|name": "nota adı, örneğin: Do.Notası",
  "music.onEvent": "Çeşitli melodi olaylarında çalıştırılacak kodu kaydeder",
  "music.playTone": "Verilen süre boyunca \"P0\" düğmesini kullanarak bir ton çalar.",
  "music.playTone|param|frequency": "hertz (Hz) cinsinden çalınacak tonun perdesi",
  "music.playTone|param|ms": "milisaniye (ms) cinsinden ton süresi",
  "music.rest": "\"P0\" düğmesi ile belirtilen süre boyunca bekler (hiçbir şey çalmaz).",
  "music.rest|param|ms": "milisaniye (ms) cinsinden bekleme süresi",
  "music.ringTone": "\"P0\" düğmesi ile bir tonu çalar.",
  "music.ringTone|param|frequency": "hertz (Hz) cinsinden çalınacak tonun perdesi",
  "music.setPlayTone": "Melodileri çalmak için özel bir playTone işlevini ayarlar",
  "music.setTempo": "Belirtilen değere göre tempoyu ayarlar",
  "music.setTempo|param|bpm": "Dakikadaki vuruş sayısına göre yeni tempo, örneğin: 120",
  "music.tempo": "Dakikadaki vuruş hızına göre tempoyu döndürür. Tempo, notaların çalındığı andaki hızdır (bpm = dakikada vuruş sayısı). Tempo değeri ne kadar büyük olursa notalar o kadar hızlı çalınır.",
  "parseInt": "Bir Diziyi tam sayıya dönüştürür.",
  "pins": "Analog/dijital sinyaller, servolar, i2c vb. için Pimdeki akımları kontrol eder...",
  "pins.analogPitch": "Geçerli ton pinine bir Vuruş Genişliği Modülasyon (PWM) sinyali gönderir. Ton pinini tanımlamak için \"analog ses perdesi pinini\" kullanın.",
  "pins.analogPitch|param|frequency": "Hertz (Hz) cinsinden ayarlanacak frekans.",
  "pins.analogPitch|param|ms": "milisaniye cinsinden tonlama süresi.",
  "pins.analogReadPin": "Konnektör değerini analog olarak, yani 0 ile 1023 arasında bir değer olarak okur.",
  "pins.analogReadPin|param|name": "yazılacak pim: AnalogPin.P0",
  "pins.analogSetPeriod": "Analog çıkışın Sinyal Genişliği Modülasyonunu (PWM), belirtilen değere göre **mikrosaniye** veya '1/1000' milisaniye cinsinden yapılandırır.\nBu pim, analog çıkış olarak yapılandırılmadıysa ('analog yazma pimi' kullanılarak), işlemin hiçbir etkisi yoktur.",
  "pins.analogSetPeriod|param|micros": "mikro saniye cinsinden süre. örneğin: 20.000",
  "pins.analogSetPeriod|param|name": "süresi ayarlanacak analog pin, örneğin: AnalogPin.P0",
  "pins.analogSetPitchPin": "\"Analog ton\" \"veya müzik\" kullanılırken kullanılacak pini ayarlar.",
  "pins.analogSetPitchPin|param|name": "ses tonunu ayarlayacak pin",
  "pins.analogWritePin": "Konnektör değerini analog olarak ayarlayın. Değer 0 ile 1023 arasında olmalıdır.",
  "pins.analogWritePin|param|name": "yazılacak pim adı, örneğin: AnalogPin.P0",
  "pins.analogWritePin|param|value": "\"0\" ile \"1023\" arasındaki pime yazma değeri. örneğin: 1023,0",
  "pins.createBuffer": "Sıfırlara başlayan yeni bir arabellek oluşturun.",
  "pins.createBuffer|param|size": "arabellekteki bayt sayısı",
  "pins.digitalReadPin": "Belirtilen pini veya konektörü 0 veya 1 olarak okur",
  "pins.digitalReadPin|param|name": "okunacak pin, örneğin: DigitalPin.P0",
  "pins.digitalWritePin": "Bir pinin veya konnektörün değerini 0 veya 1 olarak ayarlar.",
  "pins.digitalWritePin|param|name": "yazılacak pin, örneğin: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "pin üzerinde ayarlanacak değer, örneğin: 0",
  "pins.i2cReadBuffer": "7 bitlik bir I2C 'adresinden' 'size' bayt okur.",
  "pins.i2cReadNumber": "7 bit I2C adresinden bir sayı okur.",
  "pins.i2cWriteBuffer": "7 bitlik bir I2C 'adresine' bayt yazar.",
  "pins.i2cWriteNumber": "7 bitlik bir I2C adresine bir sayı yazar.",
  "pins.map": "Bir sayıyı, bir aralıktan diğerine atar. Yani, \"Düşük\" bir değer \"daha düşük\", bir değere ve \"yüksek\" bir değer \"daha yüksek\" bir değere atanır.",
  "pins.map|param|fromHigh": "değerin geçerli aralığının üst sınırı, örneğin: 1023",
  "pins.map|param|fromLow": "değerin geçerli aralığının alt sınırı",
  "pins.map|param|toHigh": "değerin hedef aralığının üst sınırı, örneğin: 4",
  "pins.map|param|toLow": "değerin hedef aralığının alt sınırı",
  "pins.map|param|value": "aralıklarla eşleşecek değer",
  "pins.onPulsed": "Bu pini dijital giriş olarak ayarlar ve zaman damgası, bu pinin \"yüksek\" veya \"düşük\" değerli olup olmamasına göre süreyi temsil eden olaylar üretir.",
  "pins.onPulsed|param|name": "kaydedilecek dijital pin, örneğin: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "vuruş değeri, örneğin: PulseValue.High",
  "pins.pulseDuration": "Son vuruşun süresini mikro saniye cinsinden gösterir. Bu işlev bir \"onPulsed\" işleyici tarafından çağrılmalıdır.",
  "pins.pulseIn": "Bir vuruş süresini milisaniye cinsinden döndürür",
  "pins.pulseIn|param|name": "vuruşu ölçen pin, örneğin: DigitalPin.P0",
  "pins.pulseIn|param|value": "vuruş değeri, örneğin: PulseValue.High",
  "pins.servoSetPulse": "Bu Giriş/Çıkış pinini analog veya PWM çıkışı olarak yapılandırır, süreyi 20 ms olarak ayarlar ve belirtilen **mikrosaniye** veya '1/1000' milisaniye değerine göre vuruş genişliğini ayarlar.",
  "pins.servoSetPulse|param|micros": "mikro saniye cinsinden vuruş süresi, örneğin: 1.500",
  "pins.servoSetPulse|param|name": "pim adı",
  "pins.servoWritePin": "Servoya bir değer yazar ve buna göre şaftı kontrol eder. Standart bir servo üzerinde, şaftın açısını (derece olarak) ayarlar ve şaftı bu yönde hareket ettirir. Sürekli dönen bir servoda, servonun hızını ayarlar (\"0\" tek bir yöndeki tam hızı, \"180\" diğer yönlerdeki tam hızı ve 90'a yakın değerler ise hareketsizliği ifade eder).",
  "pins.servoWritePin|param|name": "yazılacak pim: AnalogPin.P0",
  "pins.servoWritePin|param|value": "açı veya dönüş hızı, örneğin: 180.90,0",
  "pins.setEvents": "Bu pin tarafından gönderilen etkinlikleri yapılandırır. Etkinliklere, \"control.onEvent ()\" işlevini kullanarak abone olunabilir.",
  "pins.setEvents|param|name": "etkinlik modu ayarlanacak pin, örneğin: DigitalPin.P0",
  "pins.setEvents|param|type": "bu pinin göndereceği olay türleri, örneğin: PinEventType.Edge",
  "pins.setPull": "Bu pinin çekilme durumunu yapılandırır.",
  "pins.setPull|param|name": "çekme modu ayarlanacak pin, örneğin: DigitalPin.P0",
  "pins.setPull|param|pull": "mbed çekme konfigürasyonlarından biri, örneğin: PinPullMode.PullUp",
  "pins.sizeOf": "Belirtilen sayı formatının bayt cinsinden boyutunu alın.",
  "pins.spiFormat": "SPI bitlerini ve modunu ayarlar",
  "pins.spiFormat|param|bits": "bit sayısı, örneğin: 8",
  "pins.spiFormat|param|mode": "mod, örneğin: 3",
  "pins.spiFrequency": "SPI frekansını ayarlar",
  "pins.spiFrequency|param|frequency": "saat frekansı, örneğin: 1.000.000",
  "pins.spiPins": "SPI örneği tarafından kullanılan MOSI, MISO, SCK pimlerini ayarlar",
  "pins.spiWrite": "Bağlı SPI'ye yazar ve cevabı geri döndürür",
  "pins.spiWrite|param|value": "Bağlı SPI'ya gönderilecek veriler",
  "serial": "Bir seri bağlantı noktası üzerinden veri okuma ve yazma.",
  "serial.delimiters": "Sınırlandırıcıya karşılık gelen dizeyi döndürür.",
  "serial.onDataReceived": "Ayırıcılardan biri eşleştiğinde başlayan bir etkinliği kaydeder.",
  "serial.onDataReceived|param|delimiters": "alınan karakterlerle eşleştirilecek karakterler.",
  "serial.readBuffer": "Alış ara belleğinden birkaç karakter okur ve kullanıcı ara belleğini doldurur.",
  "serial.readBuffer|param|length": "varsayılan arabellek uzunluğu, örneğin: 64",
  "serial.readLine": "Seri bağlantı noktasından bir satırlık metin okur.",
  "serial.readString": "Ara belleğe alınan verileri bir dize olarak okur",
  "serial.readUntil": "Seri bağlantı noktasından bir satırlık bir metin okur ve sınırlayıcıya ulaşıldığında ara belleği döndürür.",
  "serial.readUntil|param|delimiter": "her metin parçasını ayıran metin sınırlayıcı",
  "serial.redirect": "Seri bağlantı noktası örneğini, USBTX ve USBRX pimlerinin dışındaki diğer pimleri kullanacak şekilde dinamik olarak yapılandırır.",
  "serial.redirectToUSB": "USB bağlantısını kullanmak için doğrudan seri girişi ve çıkışı.",
  "serial.redirect|param|rate": "yeni veri iletişim hızı, örneğin: 115200",
  "serial.redirect|param|rx": "yeni alım pimi, örneğin: SerialPin.P1",
  "serial.redirect|param|tx": "yeni iletim pimleri, örneğin: SerialPin.P0",
  "serial.writeBuffer": "Seri bağlantı noktası üzerinden bir ara bellek gönderir",
  "serial.writeLine": "Seri bağlantı noktasına bir metin satırı yazdırır",
  "serial.writeNumber": "Seri bağlantı noktasına bir sayısal değer yazdırır",
  "serial.writeString": "Seri bağlantı noktası üzerinden metin parçasını gönderir.",
  "serial.writeValue": "Seri bağlantı noktasına bir \"ad: değer\" çifti satırı yazar.",
  "serial.writeValue|param|name": "değer akışının adı, örneğin: x",
  "serial.writeValue|param|value": "yaz"
}