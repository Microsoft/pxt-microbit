{
  "AcceleratorRange.EightG": "L'acceleratore misura forze fino a 8 volte la gravità",
  "AcceleratorRange.FourG": "L'acceleratore misura forze fino a 4 volte la gravità",
  "AcceleratorRange.OneG": "L'acceleratore misura forze fino a 1 volta la gravità",
  "AcceleratorRange.TwoG": "L'acceleratore misura forze fino a 2 volte la gravità",
  "Array": "Aggiungi, rimuovi e sostituisci gli elementi nelle liste.\n\nAggiungi, rimuovi e sostituisci gli elementi nelle liste.",
  "Array.filter": "Restituisce gli elementi di un array che soddisfano la condizione specificata in una funzione di callback.",
  "Array.filter|param|callbackfn": "Una funzione che accetta fino a due argomenti. Il metodo filter richiama la funzione callbackfn su ogni elemento della matrice.",
  "Array.get": "Ottenere il valore di un indice specifico.",
  "Array.get|param|index": "la posizione nella lista, a partire da zero, dell'oggetto, es.: 0",
  "Array.indexOf": "Restituisce l'indice della prima occorrenza di un valore in un array.",
  "Array.indexOf|param|fromIndex": "L'indice dell'array da cui iniziare la ricerca. Se fromIndex viene omesso, la ricerca parte dall'indice 0.",
  "Array.indexOf|param|item": "Il valore da individuare nell'array.",
  "Array.insertAt": "Inserisce il valore ad una particolare posizione, aumentando di 1 la lunghezza dell'array.",
  "Array.insertAt|param|index": "la posizione nella lista, a partire da zero, in cui inserire il valore, es.: 0",
  "Array.insertAt|param|value": "da inserire, es.: 0",
  "Array.length": "Ottiene o imposta la lunghezza dell'array. Questo è un numero maggiore del massimo elemento di un array.",
  "Array.map": "Chiama una particolare funzione di callback per ogni elemento di un array e restituisce un array contenente i risultati.",
  "Array.map|param|callbackfn": "Una funzione che accetta fino a due argomenti. Il metodo map richiama la funzione callbackfn su ogni elemento della matrice.",
  "Array.pop": "Elimina l'ultimo elemento da un array e lo restituisce in output.",
  "Array.push": "Aggiunge nuovi elementi ad un array.",
  "Array.push|param|item": "per aggiungere in coda all'array.",
  "Array.reduce": "Chiama la funzione di callback specificata su tutti gli elementi in un array. Il valore restituito della funzione di callback è il risultato cumulativo e viene fornito come argomento nella chiamata successiva alla funzione di callback.",
  "Array.reduce|param|callbackfn": "Una funzione che accetta fino a tre argomenti. Il metodo reduce richiama la funzione callbackfn su ogni elemento della matrice.",
  "Array.reduce|param|initialValue": "Valore iniziale per avviare l'accumulo. La prima chiamata alla funzione callbackfn fornisce questo valore come argomento invece di un valore array.",
  "Array.removeAt": "Elimina l'elemento corrispondente allo specifico indice.",
  "Array.removeAt|param|index": "la posizione nella lista, a partire da zero, in cui rimuovere il valore, es.: 0",
  "Array.removeElement": "Rimuovi la prima occorrenza di un oggetto. Restituisce \"true\" se rimosso.",
  "Array.reverse": "Inverte gli elementi di un array. Il primo elemento diventa l'ultimo e l'ultimo diventa il primo.",
  "Array.set": "Memorizza il valore ad un indice specificato.",
  "Array.set|param|index": "la posizione nella lista, a partire da zero, in cui memorizzare il valore, es.: 0",
  "Array.shift": "Elimina il primo elemento da un array e lo restituisce in output. Questo metodo cambia la lunghezza dell'array.",
  "Array.slice": "Restituisci una sezione di un array.",
  "Array.slice|param|end": "La fine della particolare sezione dell'array, es.: 0",
  "Array.slice|param|start": "L'inizio della particolare sezione dell'array, es.: 0",
  "Array.sort": "Ordina gli elementi di un array sul posto e restituisce l'array. L'ordinamento non è necessariamente stabile.",
  "Array.splice": "Rimuovi elementi da un array.",
  "Array.splice|param|deleteCount": "Il numero di elementi da rimuovere, es.: 0",
  "Array.splice|param|start": "La posizione nell'array, a partire da zero, da cui iniziare a rimuovere gli elementi, es.: 0",
  "Array.unshift": "Aggiunge un elemento all'inizio dell'array e restituisce la nuova lunghezza dell'array.",
  "Array.unshift|param|value": "per inserire all'inizio dell'array.",
  "Boolean.toString": "Restituisce la rappresentazione a stringa di un oggetto.",
  "Buffer.fill": "Riempi (un frammento di) buffer con il valore specificato.",
  "Buffer.getNumber": "Leggi dal buffer un numero nel formato specificato.",
  "Buffer.length": "Restituisce la lunghezza di un oggetto Buffer.",
  "Buffer.rotate": "Ruota il buffer in senso antiorario sul posto.",
  "Buffer.rotate|param|length": "numero di elementi nel buffer. Se negativo, la lunghezza è calcolata come la lunghezza del buffer meno l'inizio, es.: -1",
  "Buffer.rotate|param|offset": "numero di byte da scorrere; usa un valore negativo per scorrere a destra",
  "Buffer.rotate|param|start": "offset iniziale del buffer. Il valore predefinito è 0.",
  "Buffer.setNumber": "Scrive nel buffer un numero nel formato specificato.",
  "Buffer.shift": "Scorre il buffer a sinistra sul posto, effettuando zero-padding.",
  "Buffer.shift|param|length": "numero di elementi nel buffer. Se negativo, la lunghezza è calcolata come la lunghezza del buffer meno l'inizio, es.: -1",
  "Buffer.shift|param|offset": "numero di byte da scorrere; usa un valore negativo per scorrere a destra",
  "Buffer.shift|param|start": "offset iniziale del buffer. Il valore predefinito è 0.",
  "Buffer.slice": "Restituisce una copia di un frammento di un buffer.",
  "Buffer.write": "Scrive il contenuto di `src` a `dstOffset` nel buffer attuale.",
  "EventCreationMode": "Come creare l'evento.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent è stato inizializzato ed i suoi gestori degli eventi sono immediatamente attivi (non adatto per l'uso ad interruzioni!).",
  "EventCreationMode.CreateOnly": "MicroBitEvent è stato inizializzato senza avviare nessuna altra elaborazione.",
  "Gesture.EightG": "Generato quando viene rilevato un impulso 8G",
  "Gesture.FreeFall": "Generato quando la scheda sta cadendo!",
  "Gesture.LogoDown": "Generato quando il logo è rivolto verso il basso e lo schermo è verticale",
  "Gesture.LogoUp": "Generato quando il logo è rivolto verso l'alto e lo schermo è verticale",
  "Gesture.ScreenDown": "Generato quando lo schermo è rivolto verso l'alto e il bordo è orizzontale",
  "Gesture.ScreenUp": "Generato quando lo schermo è rivolto verso il basso e il bordo è orizzontale",
  "Gesture.Shake": "Generato quando scosso",
  "Gesture.SixG": "Generato quando viene rilevato un impulso 6G",
  "Gesture.ThreeG": "Generato quando viene rilevato un impulso 3G",
  "Gesture.TiltLeft": "Generato quando lo schermo è rivolto a sinistra",
  "Gesture.TiltRight": "Generato quando lo schermo è rivolto a destra",
  "Image.clear": "Spegni tutti i pixel.",
  "Image.height": "Ottiene l'altezza in righe (sempre 5)",
  "Image.pixel": "Ottenere lo stato del pixel nella posizione ``(x,y)``",
  "Image.pixelBrightness": "Ottiene la luminosità del pixel ([0..255]) alla posizione specificata",
  "Image.pixel|param|x": "TODO",
  "Image.pixel|param|y": "TODO",
  "Image.plotFrame": "Estrae l' ``index``-esimo frame dell'immagine sullo schermo.",
  "Image.plotFrame|param|xOffset": "indice di colonna da cui iniziare a visualizzare l'immagine",
  "Image.plotImage": "Traccia l'immagine in una colonna specificata sullo schermo",
  "Image.scrollImage": "Scorre un immagine sullo schermo.",
  "Image.scrollImage|param|frameOffset": "x offset spostato per ogni passo dell'animazione, es.: 1, 2, 5",
  "Image.scrollImage|param|interval": "lasso di tempo tra ciascun passo dell'animazione in millisecondi, es.: 200",
  "Image.setPixel": "Imposta lo stato del pixel nella posizione ``(x,y)``",
  "Image.setPixelBrightness": "Imposta la luminosità specificata per un pixel in una determinata posizione",
  "Image.setPixel|param|value": "TODO",
  "Image.setPixel|param|x": "TODO",
  "Image.setPixel|param|y": "TODO",
  "Image.showFrame": "Visualizza un fotogramma particolare dell'immagine.",
  "Image.showFrame|param|frame": "TODO",
  "Image.showImage": "Visualizza l'immagine spostata a sinistra (numeri positivi) o a destra (numeri negativi) di quanto indicato.",
  "Image.showImage|param|xOffset": "indice di colonna da cui iniziare a visualizzare l'immagine",
  "Image.width": "Ottiene la larghezza in colonne",
  "Math": "Operazioni più complesse con i numeri.",
  "Math.abs": "Restituisce il valore assoluto di un numero (il valore che ha indipendentemente che sia positivo o negativo).\nAd esempio, il valore assoluto di -5 e di 5 è lo stesso.",
  "Math.pow": "Restituisci il valore di un'espressione elevato alla potenza specificata.",
  "Math.random": "Restituisce un numero pseudocasuale compreso tra 0 ed il valore inserito come `massimo`.",
  "Math.randomBoolean": "Genera un valore 'vero' o 'falso' in modo casuale, proprio come lanciare una moneta.",
  "Math.random|param|limit": "il limite superiore del numero generato, es.: 4",
  "Math.sqrt": "Restituisci la radice quadrata di un numero.",
  "Number.toString": "Restituisci la rappresentazione a stringa di un numero.",
  "String": "Unisci, separa e cerca stringhe di testo.\n\nUnisci, separa e cerca stringhe di testo.",
  "String.charAt": "Restituisci il carattere in corrispondenza dell'indice specificato.",
  "String.charAt|param|index": "L'indice del carattere desiderato, a partire da zero, es.: 0",
  "String.charCodeAt": "Restituisci il valore Unicode del carattere nella posizione specificata.",
  "String.compare": "Mostra le differenze di caratteri in due stringhe (in codice ASCII).",
  "String.concat|param|other": "La stringa da accodare alla fine della stringa, es.: \"aggiungimi!\"",
  "String.fromCharCode": "Genera una stringa dal codice ASCII specificato.",
  "String.length": "Restituisci la lunghezza di un oggetto String.",
  "String.substr": "Restituire la sottostringa della stringa data a partire dalla posizione indicata.",
  "String.substr|param|length": "numero di caratteri da estrarre, es.: 3",
  "String.substr|param|start": "indice del primo carattere; può essere negativo se si conta dalla fine, es.: 0",
  "basic": "Fornisce accesso alle funzionalità base del micro:bit.",
  "basic.clearScreen": "Spegne tutti i LED",
  "basic.forever": "Ripete il codice per sempre in background. Ad ogni iterazione consente l'esecuzione di altri codici.",
  "basic.pause": "Si ferma per il tempo specificato in millisecondi",
  "basic.pause|param|ms": "quanto tempo fermarsi, es.: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Disegna un'immagine sullo schermo LED.",
  "basic.plotLeds|param|leds": "pattern di LED da accendere/spegnere",
  "basic.showAnimation": "Mostra una sequenza di schermate LED come un'animazione.",
  "basic.showAnimation|param|interval": "tempo in millisecondi tra ogni aggiornamento dello schermo",
  "basic.showAnimation|param|leds": "pattern di LED da accendere/spegnere",
  "basic.showArrow": "Visualizza una freccia sullo schermo",
  "basic.showArrow|param|direction": "la direzione della freccia",
  "basic.showArrow|param|interval": "la quantità di tempo (millisecondi) per mostrare l'icona. Il valore predefinito è 600.",
  "basic.showIcon": "Disegna l'icona selezionata sullo schermo LED",
  "basic.showIcon|param|icon": "l'id dell'icona predefinito",
  "basic.showIcon|param|interval": "la quantità di tempo (millisecondi) per mostrare l'icona. Il valore predefinito è 600.",
  "basic.showLeds": "Disegna un'immagine sullo schermo LED.",
  "basic.showLeds|param|interval": "tempo in millisecondi della pausa dopo il disegno",
  "basic.showLeds|param|leds": "il pattern di LED da accendere/spegnere",
  "basic.showNumber": "Scorre un numero sullo schermo. Se è di una sola cifra non scorre.",
  "basic.showNumber|param|interval": "velocità di scorrimento; es.: -100, 200, 100, 150",
  "basic.showString": "Visualizza il testo sullo schermo un carattere alla volta. Se è di una sola lettera non scorre.",
  "basic.showString|param|interval": "quanto velocemente scorrere i caratteri; es.: -100, 200, 100, 150",
  "basic.showString|param|text": "il testo da far scorrere sullo schermo, es.: \"Ciao!\"",
  "control": "Utilità per l'esecuzione e gli eventi.",
  "control.deviceName": "Restituisce un nome descrittivo per il dispositivo derivato dal suo numero di serie",
  "control.deviceSerialNumber": "Ricava un numero di serie unico e consistente del dispositivo dai dati interni.",
  "control.eventSourceId": "Restituisce il valore di una costante di runtime C++",
  "control.eventTimestamp": "Restituisce il timestamp dell'ultimo evento eseguito sul bus",
  "control.eventValue": "Restituisce il valore dell'ultimo evento eseguito sul bus",
  "control.eventValueId": "Restituisce il valore di una costante di runtime C++",
  "control.inBackground": "Pianifica il codice da eseguire in background.",
  "control.onEvent": "Genera un evento nel bus degli eventi.",
  "control.raiseEvent": "Genera un evento nel bus degli eventi.",
  "control.reset": "Reset del BBC micro:bit.",
  "control.waitMicros": "Interrompe il flusso in corso per i microsecondi indicati",
  "control.waitMicros|param|micros": "numero di microsecondi di attesa, es.: 4",
  "game": "Un motore di gioco per sprite a LED singolo",
  "game.LedSprite": "Uno sprite di gioco elaborato come singolo LED",
  "game.LedSprite.blink": "Indica la durata dello ``sfarfallio`` di uno sprite",
  "game.LedSprite.brightness": "Indica la durata della ``luminosità`` di uno sprite sullo schermo LED",
  "game.LedSprite.change": "Cambia una proprietà dello sprite",
  "game.LedSprite.changeBlinkBy": "Modifica la durata dello ``sfarfallio`` della quantità specificata di millisecondi",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "Modifica la posizione ``y`` della quantità specificata",
  "game.LedSprite.changeBrightnessBy|param|value": "il valore con cui modificare la luminosità",
  "game.LedSprite.changeDirectionBy": "Modifica la ``direzione`` svoltando a destra della quantità specificata",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "Modifica la posizione ``x`` della quantità specificata",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "Modifica la posizione ``y`` della quantità specificata",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "il nome della proprietà da modificare",
  "game.LedSprite.change|param|value": "ammontare della modifica, es.: 1",
  "game.LedSprite.delete": "Elimina lo sprite dal motore del gioco. Lo sprite non apparirà più sullo schermo né interagirà con altri sprite.",
  "game.LedSprite.direction": "Indica la direzione attuale di uno sprite",
  "game.LedSprite.get": "Restituisce una proprietà dello sprite",
  "game.LedSprite.get|param|property": "il nome della proprietà da modificare",
  "game.LedSprite.goTo": "Vai a questa posizione sullo schermo",
  "game.LedSprite.goTo|param|x": "TODO",
  "game.LedSprite.goTo|param|y": "TODO",
  "game.LedSprite.ifOnEdgeBounce": "Se sta toccando il bordo dello schermo ed è diretto verso di esso, allora torna indietro.",
  "game.LedSprite.isTouching": "Restituisce vero se lo sprite ha la stessa posizione dello sprite indicato",
  "game.LedSprite.isTouchingEdge": "Restituisce vero se lo sprite sta toccando il bordo",
  "game.LedSprite.isTouching|param|other": "TODO",
  "game.LedSprite.move": "Muovi un certo numero di LED nella direzione corrente",
  "game.LedSprite.move|param|leds": "numero di led di cui spostarsi, es.: 1, -1",
  "game.LedSprite.off": "Spegne lo sprite (normalmente acceso)",
  "game.LedSprite.on": "Accende lo sprite (normalmente acceso)",
  "game.LedSprite.set": "Imposta una proprietà dello sprite",
  "game.LedSprite.setBlink": "Imposta l'intervallo di durata dello sfarfallio in millisecondi.",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "Imposta la ``luminosità`` di uno sprite",
  "game.LedSprite.setBrightness|param|brightness": "la luminosità da 0 (spento) a 255 (acceso), es.: 255.",
  "game.LedSprite.setDirection": "Imposta la direzione dello sprite attuale, arrotondata al multiplo di 45 più vicino",
  "game.LedSprite.setDirection|param|degrees": "TODO",
  "game.LedSprite.setX": "Imposta la posizione ``x`` dello sprite",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "Imposta la posizione ``y`` dello sprite",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "il nome della proprietà da modificare",
  "game.LedSprite.turn": "Gira lo sprite",
  "game.LedSprite.turnLeft": "Ruota a sinistra (senso antiorario)",
  "game.LedSprite.turnLeft|param|degrees": "TODO",
  "game.LedSprite.turnRight": "Ruota a destra (senso orario)",
  "game.LedSprite.turnRight|param|degrees": "TODO",
  "game.LedSprite.turn|param|degrees": "angolo di rotazione in gradi, es.: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "sinistra o destra",
  "game.LedSprite.x": "Indica la posizione ``x`` di uno sprite sullo schermo LED",
  "game.LedSprite.y": "Indica la posizione ``y`` di uno sprite sullo schermo LED",
  "game.addLife|param|lives": "TODO",
  "game.addScore": "Aggiunge punti al punteggio attuale e mostra un'animazione",
  "game.addScore|param|points": "quantità di punti da cambiare, es.: 1",
  "game.createSprite": "Crea un nuovo sprite LED orientato a destra.",
  "game.gameOver": "Visualizza l'animazione di fine gioco (Game Over) ed il punteggio conseguito.",
  "game.isPaused": "Indica se il rendering del gioco è in pausa per permettere altre animazioni",
  "game.pause": "Ferma il motore di rendering del gioco per permettere altre animazioni",
  "game.removeLife|param|life": "TODO",
  "game.resume": "Riavvia il motore di rendering del gioco",
  "game.score": "Restituisce il punteggio attuale",
  "game.setLife|param|value": "TODO",
  "game.setScore": "Imposta il punteggio attuale",
  "game.setScore|param|value": "nuovo punteggio.",
  "game.startCountdown": "Mostra un'animazione, quindi avvia un timer per il conto alla rovescia che forzerà la fine del gioco (Game Over) quando raggiungerà lo zero.",
  "game.startCountdown|param|ms": "durata del conto alla rovescia in millisecondi, es.: 10000",
  "images": "Creazione, manipolazione e visualizzazione delle immagini su LED.",
  "images.createBigImage": "Crea un'immagine con 2 fotogrammi.",
  "images.createImage": "Crea un'immagine di misura adatta allo schermo LED.",
  "input": "Eventi e dati dai sensori",
  "input.acceleration": "Restituisce il valore di accelerazione in milli-gravity (quando la scheda è poggiata di piatto con lo schermo in altro, x=0, y=0 e z=-1024)",
  "input.acceleration|param|dimension": "TODO",
  "input.buttonIsPressed": "Restituisce lo stato del pulsante (premuto o no) di ``A`` e ``B``.",
  "input.buttonIsPressed|param|button": "il pulsante su cui eseguire l'interrogazione, es.: Button.A",
  "input.calibrate": "Obsoleto, utilizza invece input.calibrateCompass.",
  "input.calibrateCompass": "Obsoleto, la calibrazione della bussola è automatica.",
  "input.compassHeading": "Restituisce la direzione attuale della bussola in gradi.",
  "input.lightLevel": "Legge il livello di luce applicato sullo schermo LED in una gamma da ``0`` (scuro) a ``255`` brillante.",
  "input.magneticForce": "Restituisce il valore di forza magnetica in ``micro-Tesla`` (``µT``). Questa funzione non è supportata nel simulatore.",
  "input.magneticForce|param|dimension": "TODO",
  "input.onButtonPressed": "Fa qualcosa quando viene premuto e rilasciato un pulsante (A, B o entrambi A+B)",
  "input.onButtonPressed|param|body": "codice da eseguire quando avviene un evento",
  "input.onButtonPressed|param|button": "il pulsante che deve essere premuto",
  "input.onGesture": "Fa qualcosa quando viene fatto un gesto (come scuotere il micro:bit).",
  "input.onGesture|param|body": "codice da eseguire quando avviene un gesto",
  "input.onGesture|param|gesture": "il tipo di gesto da tracciare, es: Gesture.Shake",
  "input.onLogoDown": "Attribuisce il codice da eseguire quando il logo è orientato verso il basso e la scheda è verticale.",
  "input.onLogoDown|param|body": "TODO",
  "input.onLogoUp": "Attribuisce il codice da eseguire quando il logo è orientato verso l'alto e la scheda è verticale.",
  "input.onLogoUp|param|body": "TODO",
  "input.onPinPressed": "Fa qualcosa quando un pin viene premuto e rilasciato (mentre si tocca anche il pin GND).",
  "input.onPinPressed|param|body": "il codice da eseguire quando viene premuto il pin",
  "input.onPinPressed|param|name": "il pin che deve essere premuto, es.: TouchPin.P0",
  "input.onPinReleased": "Fa qualcosa quando un pin viene rilasciato.",
  "input.onPinReleased|param|body": "il codice da eseguire quando viene rilasciato il pin",
  "input.onPinReleased|param|name": "il pin che deve essere rilasciato, es.: TouchPin.P0",
  "input.onScreenDown": "Codice da eseguire quando lo schermo è rivolto verso il basso.",
  "input.onScreenDown|param|body": "TODO",
  "input.onScreenUp": "Codice da eseguire quando lo schermo è rivolto verso l'alto.",
  "input.onScreenUp|param|body": "TODO",
  "input.onShake": "Codice da eseguire quando il dispositivo viene scosso.",
  "input.onShake|param|body": "TODO",
  "input.pinIsPressed": "Restituisce lo stato del pin (toccato o no). E' necessario chiudere il circuito verso massa, toccando anche il pin GND.",
  "input.pinIsPressed|param|name": "pin utilizzato per rilevare il tocco, es.: TouchPin.P0",
  "input.rotation": "Il beccheggio o il rollio del dispositivo, rotazione sugli assi ``x`` o ``y`` (in gradi).",
  "input.rotation|param|kind": "TODO",
  "input.runningTime": "Restituisce il numero di millisecondi trascorsi dall'ultima accensione.",
  "input.runningTimeMicros": "Restituisce il numero di microsecondi trascorsi dall'ultima accensione.",
  "input.setAccelerometerRange": "Imposta l'intervallo di campionamento dell'accelerometro.",
  "input.setAccelerometerRange|param|range": "un valore che descrive la massima accelerazione misurata",
  "input.temperature": "Restituisce la temperatura in gradi Celsius (°C).",
  "led": "Controllo dello schermo LED.",
  "led.brightness": "Restituisce la luminosità dello schermo da 0 (spento) a 255 (massima luminosità).",
  "led.displayMode": "Restituisce la modalità di visualizzazione corrente",
  "led.enable": "Accende o spegne lo schermo.",
  "led.fadeIn": "Riduce la luminosità dello schermo.",
  "led.fadeIn|param|ms": "TODO",
  "led.fadeOut": "Aumenta la luminosità dello schermo.",
  "led.fadeOut|param|ms": "TODO",
  "led.plot": "Accendi i LED specificati dalle coordinate x, y (x orizzontale, y verticale). (0, 0) è in alto a sinistra.",
  "led.plotAll": "Accende tutti i LED",
  "led.plotBarGraph": "Visualizza un diagramma a barre verticali del parametro `valore` rispetto a `massimo` (il massimo valore che può assumere). Se `massimo` è 0, il grafico si adatta automaticamente.",
  "led.plotBarGraph|param|high": "valore massimo. Se è 0, il valore massimo si regola automaticamente, es.: 0",
  "led.plotBarGraph|param|value": "valore attuale da disegnare",
  "led.plotBrightness": "Accendi i LED con la luminosità indicata usando le coordinate x, y (x orizzontale, y verticale). (0, 0) è in alto a sinistra.",
  "led.plotBrightness|param|brightness": "la luminosità da 0 (spento) a 255 (brillante), es.: 255",
  "led.plotBrightness|param|x": "le coordinate orizzontali del LED partendo da 0",
  "led.plotBrightness|param|y": "le coordinate verticali del LED partendo da 0",
  "led.plot|param|x": "le coordinate orizzontali del LED partendo da 0",
  "led.plot|param|y": "le coordinate verticali del LED partendo da 0",
  "led.point": "Restituisce lo stato on/off di un particolare LED usando le coordinate x, y. (0, 0) è in alto a sinistra.",
  "led.point|param|x": "TODO",
  "led.point|param|y": "TODO",
  "led.screenshot": "Cattura una schermata dello schermo LED e restituisce un'immagine.",
  "led.setBrightness": "Imposta la luminosità dello schermo da 0 (spento) a 255 (massima luminosità).",
  "led.setBrightness|param|value": "il valore della luminosità, es.: 255, 127, 0",
  "led.setDisplayMode": "Imposta la modalità di visualizzazione tra bianco e nero e scala di grigi per il rendering dei LED.",
  "led.setDisplayMode|param|mode": "imposta la modalità di visualizzazione in cui opera lo schermo",
  "led.stopAnimation": "Ferma l'animazione in corso ed annulla altre animazioni in coda.",
  "led.toggle": "Inverti un particolare pixel",
  "led.toggleAll": "Inverte l'immagine sullo schermo",
  "led.toggle|param|x": "TODO",
  "led.toggle|param|y": "TODO",
  "led.unplot": "Spegni i LED specificati dalle coordinate x, y (x orizzontale, y verticale). (0, 0) è in alto a sinistra.",
  "led.unplot|param|x": "TODO",
  "led.unplot|param|y": "TODO",
  "music": "Generazione di toni musicali.",
  "music.beat": "Restituisce la durata di una battuta in millisecondi",
  "music.beginMelody": "Inizia a suonare una melodia. Le note sono espresse come stringa di caratteri con il formato: NOTA[ottava][:durata]",
  "music.beginMelody|param|melodyArray": "l'array di note da riprodurre, es.: ['g5:1']",
  "music.beginMelody|param|options": "opzioni di melodia, una volta / per sempre, in primo piano / sullo sfondo",
  "music.builtInMelody": "Ottiene un array di note di una melodia incorporata.",
  "music.changeTempoBy": "Cambia il tempo del valore indicato",
  "music.changeTempoBy|param|bpm": "La variazione del tempo in battute al minuto, p. es. 20",
  "music.noteFrequency": "Restituisce la frequenza di una nota.",
  "music.noteFrequency|param|name": "il nome della nota, es.: Note.C",
  "music.onEvent": "Registra il codice da eseguire in corrispondenza di vari eventi musicali",
  "music.playTone": "Riproduce un tono sul pin ``P0`` per la durata indicata.",
  "music.playTone|param|frequency": "intonazione della nota, in Hertz (Hz)",
  "music.playTone|param|ms": "durata della nota in millisecondi (ms)",
  "music.rest": "Pausa (non suona nulla) sul pin ``P0`` per il tempo indicato.",
  "music.rest|param|ms": "durata della pausa in millisecondi (ms)",
  "music.ringTone": "Riproduce un tono sul pin ``P0`` per un tempo indefinito.",
  "music.ringTone|param|frequency": "intonazione della nota, in Hertz (Hz)",
  "music.setPlayTone": "Imposta una funzione personalizzata playTone per suonare le melodie",
  "music.setTempo": "Imposta il tempo al valore indicato",
  "music.setTempo|param|bpm": "Il nuovo tempo in battute al minuto: p. es. 120",
  "music.tempo": "Restituisce il tempo (battute al minuto, BPM) con il quale le note vengono suonate. Più è grande, più le note sono suonate velocemente.",
  "parseInt": "Converte una stringa in un numero intero.",
  "pins": "Controlla le correnti nei pin per rilevare segnali analogici/digitali, servi, i2c,...",
  "pins.analogPitch": "Emette un segnale PWM (Pulse Width Modulation, modulazione di ampiezza di impulso) sul corrente pin pitch. Usa `imposta pin PWM` per definire il pin PWM.",
  "pins.analogPitch|param|frequency": "frequenza da modulare in Hz.",
  "pins.analogPitch|param|ms": "durata del pitch in millisecondi.",
  "pins.analogReadPin": "Legge il valore del pin come analogico, quindi come un valore compreso tra 0 e 1023.",
  "pins.analogReadPin|param|name": "il pin su cui scrivere, es.: AnalogPin.P0",
  "pins.analogSetPeriod": "Configura la modulazione ad ampiezza di impulso (PWM: Pulse Width Modulation) dell'uscita analogica al valore indicato in **microsecondi** (`1/1000` di millisecondo). Se questo pin non è stato impostato come uscita analogica (usando il comando `analog write pin`), la configurazione PWM non ha effetto.",
  "pins.analogSetPeriod|param|micros": "periodo in microsecondi. es.: 20000",
  "pins.analogSetPeriod|param|name": "pin analogico su cui impostare il periodo, es.: AnalogPin.P0",
  "pins.analogSetPitchPin": "Imposta il pin usato quando ci si riferisce ad `pin PWM` o alla musica.",
  "pins.analogSetPitchPin|param|name": "pin da cui modulare il segnale",
  "pins.analogWritePin": "Definisce il pin indicato come analogico ed imposta il relativo valore che deve essere compreso tra 0 e 1023.",
  "pins.analogWritePin|param|name": "nome del pin su cui scrivere, es.: AnalogPin.P0",
  "pins.analogWritePin|param|value": "valore da scrivere sul pin tra ``0`` e ``1023``. es.: 1023,0",
  "pins.digitalReadPin": "Legge il pin specificato come 0 oppure 1.",
  "pins.digitalReadPin|param|name": "pin da cui leggere, es.: DigitalPin.P0",
  "pins.digitalWritePin": "Imposta un pin al valore 0 oppure 1.",
  "pins.digitalWritePin|param|name": "il pin su cui scrivere",
  "pins.digitalWritePin|param|value": "valore da impostare sul pin, es.: 0",
  "pins.i2cReadNumber": "Legge un numero da un indirizzo I2C a 7 bit.",
  "pins.i2cWriteNumber": "Scrive un numero su un indirizzo I2C a 7 bit.",
  "pins.map": "Rimappa un numero da un intervallo ad un altro. Ovvero: un valore uguale a `da min` viene riportato al valore `a min`, un valore uguale a `da max` viene riportato al valore `a max` e tutti i valori intermedi proporzionalmente di conseguenza.",
  "pins.map|param|fromHigh": "limite superiore dell'intervallo di valori attuale, es.: 1023",
  "pins.map|param|fromLow": "limite inferiore dell'intervallo di valori attuale",
  "pins.map|param|toHigh": "limite superiore dell'intervallo di valori a regime, es.: 4",
  "pins.map|param|toLow": "limite inferiore dell'intervallo di valori a regime",
  "pins.map|param|value": "valori da trasformare tra gli intervalli",
  "pins.onPulsed": "Configura questo pin come ingresso digitale e genera eventi in cui il timestamp è la durata per cui questo pin è stato ``alto`` o ``basso``.",
  "pins.onPulsed|param|name": "pin digitale su cui registrare, es.: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "il valore dell'impulso, es.: PulseValue.High",
  "pins.pulseDuration": "Restituisce la durata dell'ultimo impulso in microsecondi. Questa funzione dovrebbe essere chiamata da un handler ``onPulsed``.",
  "pins.pulseIn": "Restituisce la durata di un impulso in microsecondi",
  "pins.pulseIn|param|name": "pin che misura l'impulso, es.: DigitalPin.P0",
  "pins.pulseIn|param|value": "il valore dell'impulso, es.: PulseValue.High",
  "pins.servoSetPulse": "Configura questo pin IO come uscita analogica/pwm, configura il periodo a 20 ms e imposta la larghezza di impulso, sulla base del valore dato in **microsecondi** o `1/1000` millisecondo.",
  "pins.servoSetPulse|param|micros": "durata dell'impulso in microsecondi, es.: 1500",
  "pins.servoSetPulse|param|name": "nome pin",
  "pins.servoWritePin": "Scrive un valore per il servo (servomotore), controllando di conseguenza il suo albero. In un servo standard, questo imposta l'angolo dell'albero (in gradi), muovendo l'albero a questa angolazione. In un servo a rotazione continua, questo comando imposta la velocità di rotazione dell'albero (``0`` corrisponde alla massima velocità in una certa direzione, ``180`` alla massima velocità nella direzione opposta ed un valore prossimo a ``90`` lo mantiene fermo).",
  "pins.servoWritePin|param|name": "il pin su cui scrivere, es.: AnalogPin.P0",
  "pins.servoWritePin|param|value": "angolo o velocità di rotazione, es.: 180, 90, 0",
  "pins.setEvents": "Configura gli eventi emessi da questo pin. Gli eventi possono essere candidati ad usare ``control.onEvent()``.",
  "pins.setEvents|param|name": "pin su cui impostare la modalità evento,es.: DigitalPin.P0",
  "pins.setEvents|param|type": "il tipo di eventi che questo pin può emettere, es.: PinEventType.Edge",
  "pins.setPull": "Configura il pin con resistenza di pull up, pull down o nulla.",
  "pins.setPull|param|name": "pin su cui impostare la modalità pull, es.: DigitalPin.P0",
  "pins.setPull|param|pull": "una delle configurazioni mbed pull, es.: PinPullMode.PullUp",
  "pins.spiFormat": "Imposta i bit e la modalità SPI",
  "pins.spiFormat|param|bits": "il numero di bit, es.: 8",
  "pins.spiFormat|param|mode": "la modalità, es.: 3",
  "pins.spiFrequency": "Imposta la frequenza SPI",
  "pins.spiFrequency|param|frequency": "la frequenza di clock, es.: 1000000",
  "pins.spiPins": "Imposta i pin MOSI, MISO ed SCK usati dall'istanza SPI",
  "pins.spiWrite": "Scrive sullo slave SPI e restituisce la risposta",
  "pins.spiWrite|param|value": "Dati da inviare allo slave SPI",
  "serial": "Lettura e scrittura dei dati su una connessione seriale.",
  "serial.onDataReceived": "Registra un evento da scatenare quando uno dei delimitatori viene raggiunto.",
  "serial.onDataReceived|param|delimiters": "i caratteri con cui confrontare i caratteri ricevuti.",
  "serial.readBuffer": "Legge caratteri multipli dal buffer di ricezione. Resta in pausa finché non arrivano abbastanza caratteri.",
  "serial.readBuffer|param|length": "lunghezza di buffer predefinita, es.: 64",
  "serial.readLine": "Legge una riga di testo dalla porta seriale.",
  "serial.readString": "Legge i dati ricevuti sul buffer come una stringa",
  "serial.readUntil": "Legge una riga di testo dalla porta seriale e restituisce il buffer quando raggiunge il delimitatore.",
  "serial.readUntil|param|delimiter": "delimitatore di testo che separa ogni blocco di testo",
  "serial.redirect": "Configurazione dinamica dell'istanza seriale per usare pin diversi da USBTX e USBRX.",
  "serial.redirectToUSB": "Indirizza l'ingresso e l'uscita seriali verso la connessione USB.",
  "serial.redirect|param|rate": "il nuovo baudrate. es.: 115200",
  "serial.redirect|param|rx": "il nuovo pin di ricezione, es.: SerialPin.P1",
  "serial.redirect|param|tx": "i nuovi pin di trasmissione, es.: SerialPin.P0",
  "serial.writeBuffer": "Invia un buffer attraverso la connessione Seriale",
  "serial.writeLine": "Scrive una riga di testo sull'interfaccia seriale",
  "serial.writeNumber": "Scrive un valore numerico sull'interfaccia seriale",
  "serial.writeString": "Spedisce una stringa di testo attraverso la connessione Seriale.",
  "serial.writeValue": "Scrive una linea con una coppia ``nome:valore`` sull'interfaccia seriale.",
  "serial.writeValue|param|name": "nome del flusso di valori, es.: x",
  "serial.writeValue|param|value": "da scrivere"
}