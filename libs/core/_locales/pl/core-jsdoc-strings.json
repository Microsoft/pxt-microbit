{
  "AcceleratorRange.EightG": "Akcelerator mierzy siły do 8 grawitacji",
  "AcceleratorRange.FourG": "Akcelerator mierzy siły do 4 grawitacji",
  "AcceleratorRange.OneG": "Akcelerator mierzy siły do 1 grawitacji",
  "AcceleratorRange.TwoG": "Akcelerator mierzy siły do 2 grawitacji",
  "Array": "Dodaj, usuń i zamień przedmioty na liście.\n\nDodaj, usuń i zamień przedmioty na liście.",
  "Array.filter": "Zwróć elementy tablicy, które spełniają warunek podany w funkcji wywołania zwrotnego.",
  "Array.filter|param|callbackfn": "Funkcja, która akceptuje do dwóch argumentów. Metoda filtru wywołuje funkcję \"callbackfn\" jeden raz dla każdego elementu w tablicy.",
  "Array.get": "Pobierz wartość konkretnego indeksu.",
  "Array.get|param|index": "pozycja oparta o zero na liście przedmiotów, np. 0",
  "Array.indexOf": "Zwróć indeks pierwszego występowania wartości w tablicy.",
  "Array.indexOf|param|fromIndex": "Indeks w tablicy, od którego zaczyna się wyszukiwanie. Przy pominięciu \"fromIndex\" wyszukiwanie zaczyna się od indeksu 0.",
  "Array.indexOf|param|item": "Wartość do zlokalizowania w tablicy.",
  "Array.insertAt": "Wstaw wartość konkretnego indeksu, zwiększając długość tablicy o 1.",
  "Array.insertAt|param|index": "oparta o zero pozycja na liście do wstawienia wartości, np. 0",
  "Array.insertAt|param|value": "do wstawiania, np. 0",
  "Array.length": "Pobiera lub ustawia długości tablicy. Jest to liczba o jedynkę wyższa niż najwyższy element określony w tablicy.",
  "Array.map": "Wywołaj określoną funkcję wywołania zwrotnego dla każdego elementu tablicy i zwróć tablicę z wynikami.",
  "Array.map|param|callbackfn": "Funkcja, która akceptuje do dwóch argumentów. Metoda mapy wywołuje funkcję \"callbackfn\" jeden raz dla każdego elementu w tablicy.",
  "Array.pop": "Usuń ostatni element z tablicy i zwróć go.",
  "Array.push": "Dołącz nowy element do tablicy.",
  "Array.push|param|item": "dodawane do tablicy.",
  "Array.reduce": "Wywołaj określoną funkcję wywołania zwrotnego dla wszystkich elementów w tablicy. Zwracana wartość funkcji wywołania zwrotnego stanowi wynik skumulowany i przy następnym wywołaniu funkcji wywołania zwrotnego jest podawana jako argument.",
  "Array.reduce|param|callbackfn": "Funkcja, która akceptuje do trzech argumentów. Metoda redukcji wywołuje funkcję \"callbackfn\" jeden raz dla każdego elementu w tablicy.",
  "Array.reduce|param|initialValue": "Wartość początkowa do rozpoczęcia akumulacji. Przy pierwszym wywołaniu funkcji \"callbackfn\" podaje się tę wartość jako argument zamiast wartości tablicy.",
  "Array.removeAt": "Usuń element z określonym indeksem.",
  "Array.removeAt|param|index": "oparta o zero pozycja na liście do usunięcia wartości od, np. 0",
  "Array.removeElement": "Usuń pierwsze wystąpienie obiektu. Jeśli usunięty, zwróć wartość \"prawda\".",
  "Array.reverse": "Odwróć elementy w tablicy. Pierwszy element tablicy będzie ostatni, a ostatni pierwszy.",
  "Array.set": "Przechowuj wartość w konkretnym indeksie.",
  "Array.set|param|index": "oparta o zero pozycja na liście do przechowywania wartości, np. 0",
  "Array.shift": "Usuń pierwszy element w tablicy i zwróć go. Ta metoda zmienia długość tablicy.",
  "Array.slice": "Zwróć sekcję tablicy.",
  "Array.slice|param|end": "Koniec określonej części tablicy, np. 0",
  "Array.slice|param|start": "Początek określonej części tablicy, np. 0",
  "Array.sort": "Sortuje elementy tablicy na miejscu i zwraca tablicę. Sortowanie nie koniecznie jest stabilne.",
  "Array.splice": "Usuń elementy z tablicy.",
  "Array.splice|param|deleteCount": "Liczba elementów do usunięcia, np. 0",
  "Array.splice|param|start": "Oparta o zero lokalizacja w tablicy, od której zacząć usuwanie elementów, np. 0",
  "Array.unshift": "Dodaj jeden element w początku tablicy i zwróć nową długość tablicy.",
  "Array.unshift|param|value": "do wstawienia na początku tablicy.",
  "Boolean.toString": "Zwraca przedstawienie obiektu w ciągu.",
  "Buffer.fill": "Wypełnij (fragment) buforu daną wartością.",
  "Buffer.getNumber": "Odczytaj z buforu liczbę w określonym formacie.",
  "Buffer.length": "Zwraca długość obiektu \"Bufor\".",
  "Buffer.rotate": "Obróć bufor na miejscu w lewo.",
  "Buffer.rotate|param|length": "liczba elementów w buforze. Jeśli ujemna, długość ustawia się jako długość buforu minus początek, np. -1",
  "Buffer.rotate|param|offset": "liczna bajtów do przesunięcia; użyj wartości ujemnej, aby przesunąć w prawo",
  "Buffer.rotate|param|start": "początkowe przesunięcie w buforze. Domyślnie jest 0.",
  "Buffer.setNumber": "Zapisz liczbę w buforze w określonym formacie.",
  "Buffer.shift": "Przesuń bufor na miejscu w lewo, z wypełnieniem zerami.",
  "Buffer.shift|param|length": "liczba elementów w buforze. Jeśli ujemna, długość ustawia się jako długość buforu minus początek, np. -1",
  "Buffer.shift|param|offset": "liczna bajtów do przesunięcia; użyj wartości ujemnej, aby przesunąć w prawo",
  "Buffer.shift|param|start": "początkowe przesunięcie w buforze. Domyślnie jest 0.",
  "Buffer.slice": "Zwróć kopię fragmentu buforu.",
  "Buffer.write": "Zapisz zawartość \"src\" w \"dstOffset\" w bieżącym buforze.",
  "EventCreationMode": "Jak utworzyć zdarzenie.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent jest zainicjowane a jego obsługi zdarzeń są natychmiast zwolnione (nie nadaje się do użytku w przerwach!).",
  "EventCreationMode.CreateOnly": "MicroBitEvent jest zainicjowane i nie odbywa się dalsze przetwarzanie.",
  "Gesture.EightG": "Wywoływane, gdy wykryto 8G shock",
  "Gesture.FreeFall": "Wywoływane gdy płytka spada!",
  "Gesture.LogoDown": "Wywoływane, gdy logo jest skierowane w dół i ekran jest pionowy",
  "Gesture.LogoUp": "Wywoływane, gdy logo jest skierowane w górę i ekran jest pionowy",
  "Gesture.ScreenDown": "Wywoływane, gdy ekran jest skierowany w górę i płytka jest ustawiona poziomo",
  "Gesture.ScreenUp": "Wywoływane, gdy ekran jest skierowany w dół i płytka jest ustawiona poziomo",
  "Gesture.Shake": "Wywoływane gdy wstrząśnięte",
  "Gesture.SixG": "Wywoływane, gdy wykryto 8G shock",
  "Gesture.ThreeG": "Wywoływane, gdy wykryto 8G shock",
  "Gesture.TiltLeft": "Wywoływane kiedy ekran jest skierowany w lewo",
  "Gesture.TiltRight": "Wywoływane kiedy ekran jest skierowany w prawo",
  "Image.clear": "Wyłącza wszystkie piksele.",
  "Image.height": "Pobiera wysokość w wierszach (zawsze 5)",
  "Image.pixel": "Pobierz stan pikseli w pozycji ``(x,y)``",
  "Image.pixelBrightness": "Pobiera jasność pikseli ([0..255]) w danej pozycji",
  "Image.pixel|param|x": "TODO",
  "Image.pixel|param|y": "TODO",
  "Image.plotFrame": "Rysuje na ekranie klatkę ``index`` obrazu.",
  "Image.plotFrame|param|xOffset": "indeks kolumny, od którego zacząć wyświetlanie obrazu",
  "Image.plotImage": "Rysuje na ekranie obraz w danej kolumnie",
  "Image.scrollImage": "Przewija obraz.",
  "Image.scrollImage|param|frameOffset": "przesunięcie x na każdym kroku animacji, np. 1, 2, 5",
  "Image.scrollImage|param|interval": "czas między każdym krokiem animacji w milisekundach, np. 200",
  "Image.setPixel": "Ustaw stan pikseli w pozycji ``(x,y)``",
  "Image.setPixelBrightness": "Ustawia konkretną jasność pikseli w danej pozycji",
  "Image.setPixel|param|value": "TODO",
  "Image.setPixel|param|x": "TODO",
  "Image.setPixel|param|y": "TODO",
  "Image.showFrame": "Pokazuje konkretną klatkę pasku obrazu.",
  "Image.showFrame|param|frame": "TODO",
  "Image.showImage": "Pokazuje klatkę obrazu z przesunięciem ``x offset``.",
  "Image.showImage|param|xOffset": "indeks kolumny, od którego zacząć wyświetlanie obrazu",
  "Image.width": "Pobiera szerokość w kolumnach",
  "Math": "Bardziej skomplikowane operacje z liczbami.",
  "Math.abs": "Zwraca bezwzględną wartość liczby (niezależnie od tego, czy jest dodatnia, czy ujemna).\nNa przykład, wartość bezwzględna -5 jest taka sama, jak wartość bezwzględna 5.",
  "Math.pow": "Zwróć wartość wyrażenia podstawowego podniesioną do określonej potęgi.",
  "Math.random": "Zwróć liczbę pseudolosową między 0 a `limit`.",
  "Math.randomBoolean": "Generuje losowo wartości \"prawda\" lub \"fałsz\", jak przy rzucie monetą.",
  "Math.random|param|limit": "górna granica wygenerowanej liczby, np. 4.",
  "Math.sqrt": "Zwróć pierwiastek kwadratowy liczby.",
  "Number.toString": "Zwróć przedstawienie liczby w ciągu.",
  "String": "Łącz, dziel i szukaj ciągi tekstowe. \nŁącz, dziel i szukaj ciągi tekstowe.",
  "String.charAt": "Zwróć znak o podanym indeksie.",
  "String.charAt|param|index": "Oparty o zero indeks żądanego znaku, np. 0",
  "String.charCodeAt": "Zwróć wartość Unicode znaku w określonej lokalizacji.",
  "String.compare": "Zobacz, jak się różni kolejność znaków w dwóch ciągach (w kodowaniu ASCII).",
  "String.concat|param|other": "Ciąg do dodania w końcu ciągu, np. \"dodaj mnie!\"",
  "String.fromCharCode": "Utwórz ciąg z danego kodu znaku ASCII.",
  "String.length": "Zwróć długość obiektu \"Ciąg\".",
  "String.substr": "Zwróć podciąg bieżącego ciągu.",
  "String.substr|param|length": "liczba znaków do wyodrębnienia, np. 3",
  "String.substr|param|start": "indeks pierwszego znaku; przy odliczaniu od końca może być ujemny, np. 0",
  "basic": "Udostępnia podstawowe możliwości funkcjonalne micro:bit.",
  "basic.clearScreen": "Wyłącz wszystkie diody LED",
  "basic.forever": "Powtarza kod w nieskończoność w tle. Przy każdej iteracji umożliwia uruchomienie innych kodów.",
  "basic.pause": "Wstrzymaj na określony czas w milisekundach",
  "basic.pause|param|ms": "długość pauzy, np. 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Rysuje obraz na ekranie LED.",
  "basic.plotLeds|param|leds": "szablon włączenia/wyłączenia LED",
  "basic.showAnimation": "Pokazuje sekwencję ekranów LED jako animację.",
  "basic.showAnimation|param|interval": "czas w milisekundach między każdym przerysowaniem",
  "basic.showAnimation|param|leds": "szablon włączenia/wyłączenia LED",
  "basic.showArrow": "Pokazuje na ekranie strzałkę",
  "basic.showArrow|param|direction": "kierunek strzałki",
  "basic.showArrow|param|interval": "czas wyświetlania ikony (milisekundy). Domyślnie wynosi 600.",
  "basic.showIcon": "Rysuje wybraną ikonę na ekranie LED",
  "basic.showIcon|param|icon": "id wstępnie zdefiniowanej ikony",
  "basic.showIcon|param|interval": "czas wyświetlania ikony (milisekundy). Domyślnie wynosi 600.",
  "basic.showLeds": "Rysuje obraz na ekranie LED.",
  "basic.showLeds|param|interval": "czas w milisekundach na przerwę po wyrysowaniu",
  "basic.showLeds|param|leds": "szablon włączenia/wyłączenia LED",
  "basic.showNumber": "Przewiń liczbę na ekranie. Nie przewijaj, jeśli liczba mieści się na ekranie (jest jednocyfrowa).",
  "basic.showNumber|param|interval": "szybkość przewijania, np. 150, 100, 200, -100",
  "basic.showString": "Pokaż tekst na wyświetlaczu, jeden znak naraz. Nie przewijaj, jeśli ciąg mieści się na ekranie (jest jednoliterowy).",
  "basic.showString|param|interval": "szybkość przesuwania znaków, np. 150, 100, 200, -100",
  "basic.showString|param|text": "tekst przewijany na ekranie, np. \"Cześć!\"",
  "control": "Narzędzia środowiska uruchomieniowego i zdarzeń.",
  "control.inBackground": "Planuje uruchomienie kodu w tle.",
  "control.reset": "Resetuje BBC micro:bit.",
  "control.waitMicros": "Blokuje bieżące włókno na dany czas w mikrosekundach",
  "control.waitMicros|param|micros": "czas oczekiwania w mikrosekundach, np. 4",
  "game": "Sprite'owy silnik gry z jedną diodą LED",
  "game.LedSprite": "Sprite gry renderowany jako pojedynczy LED",
  "game.LedSprite.blink": "Raportuje długość ``migotania`` sprite'a",
  "game.LedSprite.brightness": "Raportuje ``jasność`sprite'a na ekranie LED",
  "game.LedSprite.change": "Zmienia właściwość sprite'a",
  "game.LedSprite.changeBlinkBy": "Zmienia długość ``migotania``o podaną wartość milisekund",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "Zmienia pozycję ``y`` o podaną wartość",
  "game.LedSprite.changeBrightnessBy|param|value": "wartość do zmiany jasności",
  "game.LedSprite.changeDirectionBy": "Zmienia pozycję ``kierunek`` o podaną wartość, skręcając w prawo",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "Zmienia pozycję ``x``o podaną wartość",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "Zmienia pozycję ``y`` o podaną wartość",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "nazwa zmienianej właściwości",
  "game.LedSprite.change|param|value": "wartość zmiany, np. 1",
  "game.LedSprite.delete": "Usuwa sprite'a z silnika gry. Sprite nie będzie już pojawiać się na ekranie i współdziałać z innymi sprite'ami.",
  "game.LedSprite.direction": "Raportuje bieżący kierunek sprite'a",
  "game.LedSprite.get": "Pobiera właściwość sprite'a",
  "game.LedSprite.get|param|property": "nazwa zmienianej właściwości",
  "game.LedSprite.goTo": "Przejdź do tej pozycji na ekranie",
  "game.LedSprite.goTo|param|x": "TODO",
  "game.LedSprite.goTo|param|y": "TODO",
  "game.LedSprite.ifOnEdgeBounce": "Odwróć się przy dotknięciu krawędzi ekranu twarzą do niego.",
  "game.LedSprite.isTouching": "Raportuje wartość \"prawda\", jeśli sprite znajduje się w tej samej pozycji co określony sprite",
  "game.LedSprite.isTouchingEdge": "Raportuje wartość \"prawda\", jeśli sprite dotyka krawędzi",
  "game.LedSprite.isTouching|param|other": "TODO",
  "game.LedSprite.move": "Przesuń pewną liczbę diod LED w bieżącym kierunku",
  "game.LedSprite.move|param|leds": "liczba LED do przesunięcia, np. 1, -1",
  "game.LedSprite.off": "Wyłącza spite'a (domyślnie włączony)",
  "game.LedSprite.on": "Włącza spite'a (domyślnie włączony)",
  "game.LedSprite.set": "Ustawia właściwość spite'a",
  "game.LedSprite.setBlink": "Ustawia interwał długości migotania w milisekundach.",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "Ustaw ``jasność``spite'a",
  "game.LedSprite.setBrightness|param|brightness": "jasność od 0 (wył.) do 255 (wł.), np. 255.",
  "game.LedSprite.setDirection": "Ustaw kierunek bieżącego spite'a zaokrąglony do najbliższej wielokrotności 45",
  "game.LedSprite.setDirection|param|degrees": "TODO",
  "game.LedSprite.setX": "Ustaw pozycję ``x`` sprite'a",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "Ustaw pozycję ``y`` sprite'a",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "nazwa zmienianej właściwości",
  "game.LedSprite.turn": "Obróć sprite'a",
  "game.LedSprite.turnLeft": "Obróć w lewo (przeciwnie do ruchu wskazówek zegara)",
  "game.LedSprite.turnLeft|param|degrees": "TODO",
  "game.LedSprite.turnRight": "Obróć w prawo (zgodnie z ruchem wskazówek zegara)",
  "game.LedSprite.turnRight|param|degrees": "TODO",
  "game.LedSprite.turn|param|degrees": "kąt obrotu w stopniach, np. 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "w lewo lub w prawo",
  "game.LedSprite.x": "Raportuje pozycję ``x`` sprite'a na ekranie LED",
  "game.LedSprite.y": "Raportuje pozycję ``y`` sprite'a na ekranie LED",
  "game.addLife|param|lives": "TODO",
  "game.addScore": "Dodaje punkty do bieżących wyników i pokazuje animację",
  "game.addScore|param|points": "liczba punktów do zmiany, np. 1",
  "game.gameOver": "Wyświetla animację końca gry i wyniki.",
  "game.isPaused": "Wskazuje, czy wstrzymano renderowanie gry, aby umożliwić inne animacje",
  "game.pause": "Wstrzymuje renderowanie gry, aby umożliwić inne animacje",
  "game.removeLife|param|life": "TODO",
  "game.resume": "Wznawia silnik renderowania gry",
  "game.score": "Pobiera bieżące wyniki",
  "game.setLife|param|value": "TODO",
  "game.setScore": "Ustawia wartość bieżących wyników",
  "game.setScore|param|value": "nowa wartość wyników.",
  "game.startCountdown": "Pokazuje animację, następnie zaczyna odliczanie zegara gry, który powoduje zakończenie gry, dochodząc do 0",
  "game.startCountdown|param|ms": "długość odliczania w milisekundach, np. 10000",
  "images": "Tworzenie i wyświetlanie obrazów LED oraz sterowanie nimi.",
  "images.createBigImage": "Tworzy obraz z 2 klatkami.",
  "images.createImage": "Tworzy obraz, który mieści się na ekranie LED.",
  "input": "Zdarzenia i dane z czujników",
  "input.acceleration": "Pobiera wartość przyśpieszenia w miligrawitacjach (gry płytka leży plackiem z ekranem do góry, x=0, y=0 i z=-1024)",
  "input.acceleration|param|dimension": "TODO",
  "input.buttonIsPressed": "Pobierz stan przycisku (wciśnięty czy nie) dla ``A`` i ``B``.",
  "input.buttonIsPressed|param|button": "przycisk do wykonania kwerendy, np. Button.A",
  "input.calibrate": "Obsolete, use input.calibrateCompass instead.",
  "input.compassHeading": "Pobierz aktualny kierunek kompasu w stopniach.",
  "input.lightLevel": "Odczytuje poziom światła ekranu LED w zakresie od ``0`` (ciemny) do ``255`` jasny.",
  "input.magneticForce": "Pobierz wartość siły magnetycznej w ``mikro-Teslach`` (``µT``). Funkcja nie jest obsługiwana w symulatorze.",
  "input.magneticForce|param|dimension": "TODO",
  "input.onButtonPressed": "Zrób coś, gdy wciśnięto i znów zwolniono przycisk (A, B lub A+B).",
  "input.onButtonPressed|param|body": "kod uruchamiany przy powstaniu zdarzenia",
  "input.onButtonPressed|param|button": "przycisk do wciśnięcia",
  "input.onGesture": "Zrób coś po wykonaniu gestu (jak np. wstrząśniecie micro:bit).",
  "input.onGesture|param|body": "kod uruchamiany przy wykonaniu gestu",
  "input.onGesture|param|gesture": "typ śledzonych gestów, np. Gesture.Shake",
  "input.onLogoDown": "Dołącza uruchamiany kod, gdy logo jest zwrócone w dół, a płytka stoi pionowo.",
  "input.onLogoDown|param|body": "TODO",
  "input.onLogoUp": "Dołącza uruchamiany kod, gdy logo jest zwrócone w górę, a płytka stoi pionowo.",
  "input.onLogoUp|param|body": "TODO",
  "input.onPinPressed": "Zrób coś, gdy dotknięto pinu i zwolniono go znów (przy jednoczesnym dotknięciu pinu GND).",
  "input.onPinPressed|param|body": "kod uruchamiany przy naciśnięciu pinu",
  "input.onPinPressed|param|name": "pin, który trzeba nacisnąć, np. TouchPin.P0",
  "input.onPinReleased": "Zrób coś po zwolnieniu pinu.",
  "input.onPinReleased|param|body": "kod uruchamiany po zwolnieniu pinu",
  "input.onPinReleased|param|name": "pin, który trzeba zwolnić, np. TouchPin.P0",
  "input.onScreenDown": "Dołącza kod uruchamiany, gdy ekran patrzy w dół.",
  "input.onScreenDown|param|body": "TODO",
  "input.onScreenUp": "Dołącza kod uruchamiany, gdy ekran patrzy w górę.",
  "input.onScreenUp|param|body": "TODO",
  "input.onShake": "Dołącza kod uruchamiany przy wstrząśnięciu urządzeniem.",
  "input.onShake|param|body": "TODO",
  "input.pinIsPressed": "Pobierz status pinu (wciśnięty lub nie). Wymaga trzymania się za ziemię, aby zamknąć obwód.",
  "input.pinIsPressed|param|name": "pin używany do wykrycia dotknięcia, np. TouchPin.P0",
  "input.rotation": "Nachylenie lub obrót urządzenia, obrót wokół ``osi-x`` lub ``osi-y`` w stopniach.",
  "input.rotation|param|kind": "TODO",
  "input.runningTime": "Pobiera czas w milisekundach, który upłynął od włączenia zasilania.",
  "input.runningTimeMicros": "Pobiera czas w mikrosekundach, który upłynął od włączenia zasilania.",
  "input.setAccelerometerRange": "Ustawia zakres próbki akcelerometru w grawitacjach.",
  "input.setAccelerometerRange|param|range": "wartość opisująca maksymalne mierzone przyśpieszenie",
  "input.temperature": "Pobiera temperaturę w stopniach Celsjusza (°C).",
  "led": "Sterowanie ekranem LED.",
  "led.brightness": "Pobierz jasność ekranu od 0 (wył.) do 255 (pełna jasność).",
  "led.displayMode": "Pobiera bieżący tryb ekranu",
  "led.enable": "Włącza lub wyłącza wyświetlacz",
  "led.fadeIn": "Rozjaśnia wyświetlacz.",
  "led.fadeIn|param|ms": "TODO",
  "led.fadeOut": "Ściemnia jasność ekranu.",
  "led.fadeOut|param|ms": "TODO",
  "led.plot": "Włącza określoną diodę LED wg współrzędnych x, y (x - w poziomie, y - w pionie), (0,0) to górna lewa.",
  "led.plotAll": "Włącza wszystkie LED",
  "led.plotBarGraph": "Wyświetla pionowy wykres słupkowy w oparciu o wartości `value` i`high`.\nJeśli `high`wynosi 0, wykres dopasowuje się automatycznie.",
  "led.plotBarGraph|param|high": "maksymalna wartość. Jeśli 0, maksymalną wartość dopasowuje się automatycznie, np. 0",
  "led.plotBarGraph|param|value": "bieżąca wartość do zbudowania wykresu",
  "led.plotBrightness": "Włącza określoną diodę LED z określoną jasnością wg współrzędnych x, y (x - w poziomie, y - w pionie), (0,0) to górna lewa.",
  "led.plotBrightness|param|brightness": "jasność od 0 (wył.) do 255 (jasny), np. 255",
  "led.plotBrightness|param|x": "współrzędna pozioma LED, zaczynając od 0",
  "led.plotBrightness|param|y": "współrzędna pionowa LED, zaczynając od 0",
  "led.plot|param|x": "współrzędna pozioma LED, zaczynając od 0",
  "led.plot|param|y": "współrzędna pionowa LED, zaczynając od 0",
  "led.point": "Pobierz stan \"wył./wł\" określonej diody LED wg współrzędnych x, y. (0,0) to górna lewa.",
  "led.point|param|x": "TODO",
  "led.point|param|y": "TODO",
  "led.screenshot": "Robi zrzut ekranu LED i zwraca obraz.",
  "led.setBrightness": "Ustaw jasność ekranu od 0 (wył.) do 255 (pełna jasność).",
  "led.setBrightness|param|value": "wartość jasności, np. 255, 127, 0",
  "led.setDisplayMode": "Ustawia tryb wyświetlacza do renderowania diod LED (czarny, biały i odcienia szarości).",
  "led.setDisplayMode|param|mode": "tryb działania wyświetlacza",
  "led.stopAnimation": "Anuluje bieżącą animację i wyczyszcza inne oczekujące animacje.",
  "led.toggle": "Włącza/wyłącza konkretny piksel",
  "led.toggleAll": "Odwraca bieżący wyświetlacz LED",
  "led.toggle|param|x": "TODO",
  "led.toggle|param|y": "TODO",
  "led.unplot": "Wyłącz określoną diodę LED wg współrzędnych x, y (x - w poziomie, y - w pionie), (0,0) to górna lewa.",
  "led.unplot|param|x": "TODO",
  "led.unplot|param|y": "TODO",
  "music": "Generacja tonów muzycznych.",
  "music.beat": "Zwraca długość trwania taktu w milisekundach",
  "music.beginMelody": "Zaczyna odtwarzać melodię.\nNuty są wyrażane jako ciąg znaków w tym formacie:\nNUTA:[oktawa][:długość trwania]",
  "music.beginMelody|param|melodyArray": "tablica melodii do odtwarzania, np. ['g5:1']",
  "music.beginMelody|param|options": "opcje melodii, raz / ciągle, na pierwszym planie / w tle",
  "music.builtInMelody": "Pobiera tablicę melodii wbudowanej melodii.",
  "music.changeTempoBy": "Zmienia tempo o określoną wartość",
  "music.changeTempoBy|param|bpm": "Zmiana w uderzeniach na minutę do tempa, np. 20",
  "music.noteFrequency": "Pobiera częstotliwość nuty.",
  "music.noteFrequency|param|name": "nazwa nuty, np. Note.C",
  "music.onEvent": "Rejestruje kod uruchamiany na różne zdarzenia melodii",
  "music.playTone": "Odtwarza ton danej długości przez pin ``P0``.",
  "music.playTone|param|frequency": "wysokość odtwarzanego tonu w hercach (Hz)",
  "music.playTone|param|ms": "długość trwania tonu w milisekundach (ms)",
  "music.rest": "Spoczywa (nic nie odgrywa) w określonym czasie przez pin ``P0``.",
  "music.rest|param|ms": "długość trwania spoczynku w milisekundach (ms)",
  "music.ringTone": "Odtwarza ton przez pin ``P0``.",
  "music.ringTone|param|frequency": "wysokość odtwarzanego tonu w hercach (Hz)",
  "music.setPlayTone": "Ustawia niestandardową funkcję playTone do odtwarzania melodii",
  "music.setTempo": "Ustawia tempo na określoną wartość",
  "music.setTempo|param|bpm": "Nowe tempo w uderzeniach na minutę, np. 120",
  "music.tempo": "Zwraca tempo w uderzeniach na minutę. Tempo jest prędkością (bmp = uderzeń na minutę), na której odtwarzane są nuty. Im wyższa jest wartość tempa, tym szybciej są odtwarzane nuty.",
  "parseInt": "Konwertuj ciąg A na liczbę całkowitą.",
  "pins": "Kontroluj prądy w pinach dla sygnałów analogowych/cyfrowych, serwo, i2c...",
  "pins.analogPitch": "Emituje sygnał modulacji szerokości impulsów (PWM) do bieżącego pinu tonu. Aby określić pin tonu, użyj \"analogowy ustaw pin tonu\".",
  "pins.analogPitch|param|frequency": "częstotliwość modulowana w Hz.",
  "pins.analogPitch|param|ms": "długość trwania tonu w milisekundach.",
  "pins.analogReadPin": "Odczytaj wartość łącznika jako analogową, tzn. jako wartość w zakresie od 0 do 1023.",
  "pins.analogReadPin|param|name": "pin do zapisu, np. AnalogPin.P0",
  "pins.analogSetPeriod": "Konfiguruje modulację szerokości impulsów (PWM) wyjścia analogowego do wartości w **mikrosekundach** lub `1/1000` milisekund. Jeśli ten pin nie jest skonfigurowany jako wyjście analogowe (za pomocą \"analogowy zapisz pin\"), operacja nie jest wykonywana.",
  "pins.analogSetPeriod|param|micros": "okres w mikrosekundach, np. 20000",
  "pins.analogSetPeriod|param|name": "pin analogowy do ustawienia okresu, np. AnalogPin.P0",
  "pins.analogSetPitchPin": "Ustawia pin używany przy \"ton analogowy\" lub muzyka.",
  "pins.analogSetPitchPin|param|name": "pin do modulacji tonu",
  "pins.analogWritePin": "Ustaw wartość łącznika jako analogową. Wartość powinna się mieścić w zakresie od 0 do 1023.",
  "pins.analogWritePin|param|name": "nazwa pinu do zapisu, np. AnalogPin.P0",
  "pins.analogWritePin|param|value": "wartość zapisywana do pinu pomiędzy ``0`` a ``1023``, np. 1023,0",
  "pins.digitalReadPin": "Czytaj określony pin lub łącznik jako 0 lub 1",
  "pins.digitalReadPin|param|name": "pin do odczytu, np. DigitalPin.P0",
  "pins.digitalWritePin": "Ustaw wartość pinu lub łącznika na 0 lub 1.",
  "pins.digitalWritePin|param|name": "pin do zapisu, np. DigitalPin.P0",
  "pins.digitalWritePin|param|value": "wartość ustawiana dla pin, 1 np. 0",
  "pins.i2cReadNumber": "Odczytaj jedną liczbę z 7-bitowego adresu I2C.",
  "pins.i2cWriteNumber": "Zapisz jedną liczbę do 7-bitowego adresu I2C.",
  "pins.map": "Ponownie mapuje numer z jednego zakresu do innego. Tzn. wartość ``od niskiej`` będzie mapowana do ``do niskiej``, wartość ``od wysokiej`` do ``do wysokiej``, wartości pomiędzy - do wartości pomiędzy itd.",
  "pins.map|param|fromHigh": "górna granica bieżącego zakresu wartości, np. 1023",
  "pins.map|param|fromLow": "dolna granica bieżącego zakresu wartości, np. 1023",
  "pins.map|param|toHigh": "górna granica docelowego zakresu wartości, np. 4",
  "pins.map|param|toLow": "dolna granica docelowego zakresu wartości",
  "pins.map|param|value": "wartość do mapowania w zakresach",
  "pins.onPulsed": "Konfiguruje ten pin na wejście cyfrowe i generuje zdarzenia, gdzie znaczniki czasu są okresem, w którym tym pin był ``wysoki`` lub ``niski``.",
  "pins.onPulsed|param|name": "pin cyfrowy dla rejestracji, np. DigitalPin.P0",
  "pins.onPulsed|param|pulse": "wartość impulsu, np. PulseValue.High",
  "pins.pulseDuration": "Pobiera długość trwania ostatniego impulsu w mikrosekundach. Tę funkcję wywołuje się z programu obsługi``onPulsed``.",
  "pins.pulseIn|param|name": "pin, który mierzy impuls, np. DigitalPin.P0",
  "pins.pulseIn|param|value": "wartość impulsu, np. PulseValue.High",
  "pins.servoSetPulse": "Konfiguruje ten pin We/Wy jako wyjście analogowe/pwm, konfiguruje okres na 20 ms i ustawia szerokość impulsu w oparciu o wartość podaną w **mikrosekundach** lub 1/1000 milisekundach.",
  "pins.servoSetPulse|param|micros": "długość trwania impulsu w mikrosekundach, np. 1500",
  "pins.servoSetPulse|param|name": "nazwa pinu",
  "pins.servoWritePin": "Zapisuje wartość na serwo, sterując w ten sposób wałkiem. Na standardowym serwo ustawi to kąt wałka (w stopniach), przesuwając wałek w tym kierunku. Na serwie z ciągłym obrotem ustawi to prędkość serwa (``0`` to pełna prędkość w jednym kierunku, ``180`` - pełna prędkość w innym kierunku i wartość około ``90``- brak ruchu).",
  "pins.servoWritePin|param|name": "pin do zapisu, np. AnalogPin.P0",
  "pins.servoWritePin|param|value": "kąt lub prędkość obrotu, np. 180,90,0",
  "pins.setEvents": "Konfiguruje zdarzenia emitowane przez ten pin. Zdarzenia można subskrybować za pomocą ``control.onEvent()``.",
  "pins.setEvents|param|name": "pin do ustawienia trybu zdarzeń, np. DigitalPin.P0",
  "pins.setEvents|param|type": "typ zdarzeń emitowanych przez ten pin, np. PinEventType.Edge",
  "pins.setPull": "Konfiguruje pull tego pinu.",
  "pins.setPull|param|name": "pin do ustawienia trybu pull, np. DigitalPin.P0",
  "pins.setPull|param|pull": "jedna z konfiguracji mbed pull, np. PinPullMode.PullUp",
  "pins.spiFormat": "Ustawia bity SPI i tryb",
  "pins.spiFormat|param|bits": "liczba bitów, np. 8",
  "pins.spiFormat|param|mode": "tryb, np. 3",
  "pins.spiFrequency": "Ustawia częstotliwość SPI",
  "pins.spiFrequency|param|frequency": "częstotliwość zegara, np. 1000000",
  "pins.spiPins": "Ustawia piny MOSI, MISO, SCK używane przez instancję SPI",
  "pins.spiWrite": "Zapisz do podrzędnego SPI i zwróć odpowiedź",
  "pins.spiWrite|param|value": "Dane wysyłane do podrzędnego SPI",
  "serial": "Odczyt i zapis danych przez połączenie szeregowe.",
  "serial.onDataReceived": "Rejestruje zdarzenie uruchamiane, gdy pasuje jeden z ograniczników.",
  "serial.onDataReceived|param|delimiters": "znaki, z którymi porównuje się otrzymane znaki.",
  "serial.readBuffer": "Odczytuje wiele znaków z buforu odbioru i wypełnia bufor użytkownika.",
  "serial.readBuffer|param|length": "domyślna długość buforu, np. 64",
  "serial.readLine": "Odczytuje wiersz tekstu z portu szeregowego.",
  "serial.readString": "Odczytuje otrzymane dane buforowane jako ciąg",
  "serial.readUntil": "Odczytuje wiersz tekstu z portu szeregowego i zwraca bufor przy zbieżności ogranicznika.",
  "serial.readUntil|param|delimiter": "ogranicznik tekstu, który oddziela każdy fragment tekstu",
  "serial.redirect": "Dynamiczna konfiguracja instancji szeregowej dla użycia pinów innych niż USBTX i USBRX.",
  "serial.redirectToUSB": "Skieruj wejście i wyjście portu szeregowego na złącze USB.",
  "serial.redirect|param|rate": "nowa szybkość transmisji, np. 115200",
  "serial.redirect|param|rx": "nowy pin przyjęcia, np. SerialPin.P1",
  "serial.redirect|param|tx": "nowe piny transmisji, np. SerialPin.P0",
  "serial.writeBuffer": "Wysyła bufor przez połączenie szeregowe",
  "serial.writeLine": "Drukuje wiersz tekstu do portu szeregowego",
  "serial.writeNumber": "Drukuje wartość numeryczną do portu szeregowego",
  "serial.writeString": "Wysyła odcinek tekstu przez połączenie szeregowe.",
  "serial.writeValue": "Wpisuje podwójny wiersz ``name: value`` do portu szeregowego.",
  "serial.writeValue|param|name": "nazwa strumienia wartości, np. x",
  "serial.writeValue|param|value": "do zapisu"
}