{
  "AcceleratorRange.EightG": "Акселерометр измеряет силу до 8 g",
  "AcceleratorRange.FourG": "Акселерометр измеряет силу до 4 g",
  "AcceleratorRange.OneG": "Акселерометр измеряет силу до 1 g",
  "AcceleratorRange.TwoG": "Акселерометр измеряет силу до 2 g",
  "Array": "Добавление, удаление и замена элементов в списках.\n\nДобавление, удаление и замена элементов в списках.",
  "Array.filter": "Возврат элементов массива, удовлетворяющих условию, указанному в функции обратного вызова.",
  "Array.filter|param|callbackfn": "Функция принимает не более двух аргументов. Метод «filter» для каждого элемента массива один раз вызывает функцию «callbackfn».",
  "Array.get": "Получить значение по определенному индексу.",
  "Array.get|param|index": "отсчитываемая от нуля позиция в списке элементов, например: 0",
  "Array.indexOf": "Возвращает индекс первого вхождения значения в массиве.",
  "Array.indexOf|param|fromIndex": "Индекс в массиве, с которого начинается поиск. Если параметр «fromIndex» опущен, поиск начинается с индекса 0.",
  "Array.indexOf|param|item": "Значение, которое нужно найти в массиве.",
  "Array.insertAt": "Вставить значение по определенному индексу с увеличением длины массива на 1.",
  "Array.insertAt|param|index": "отсчитываемая от нуля позиция в списке элементов для вставки значения, например: 0",
  "Array.insertAt|param|value": "что вставлять, например: 0",
  "Array.length": "Получает или задает длину массива. Это число на единицу больше самого большого определенного в массиве индекса.",
  "Array.map": "Вызвать определенную функцию обратного вызова для каждого элемента массива и вернуть массив с результатами вызова.",
  "Array.map|param|callbackfn": "Функция принимает не более двух аргументов. Метод «map» для каждого элемента массива один раз вызывает функцию «callbackfn».",
  "Array.pop": "Удалить последний элемент из массива и вернуть его.",
  "Array.push": "Добавить в массив новые элементы.",
  "Array.push|param|item": "что добавлять в массив.",
  "Array.reduce": "Вызвать указанную функцию обратного вызова для всех элементов массива. Возвращаемое значение функции обратного вызова представляет собой накопленный результат и при следующем вызове функции обратного вызова передается в качестве аргумента.",
  "Array.reduce|param|callbackfn": "Функция принимает не более трех аргументов. Метод «reduce» для каждого элемента массива один раз вызывает функцию «callbackfn».",
  "Array.reduce|param|initialValue": "Исходное значение для начала накопления. При первом вызове функции «callbackfn» это значение передается в качестве аргумента вместо значения массива.",
  "Array.removeAt": "Удалить элемент с определенным индексом.",
  "Array.removeAt|param|index": "отсчитываемая от нуля позиция в списке элементов для удаления значения, например: 0",
  "Array.removeElement": "Удалить первое вхождение объекта. Если объект удален, вернуть значение «истина».",
  "Array.reverse": "Обратить порядок элементов массива. Первый элемент массива становится последним, а последний — первым.",
  "Array.set": "Сохранить значение по определенному индексу.",
  "Array.set|param|index": "отсчитываемая от нуля позиция в списке элементов для сохранения значения, например: 0",
  "Array.shift": "Удалить первый элемент из массива и вернуть его. Этот метод изменяет длину массива.",
  "Array.slice": "Возвращает часть массива.",
  "Array.slice|param|end": "Конец указанной части массива. Например: 0",
  "Array.slice|param|start": "Начало указанной части массива. Например: 0",
  "Array.sort": "Упорядочить элементы массива и вернуть упорядоченный массив. Метод «sort» не обязательно стабильный.",
  "Array.splice": "Удалить элементы из массива.",
  "Array.splice|param|deleteCount": "Количество удаляемых элементов. Например: 0",
  "Array.splice|param|start": "Отсчитываемая от нуля позиция в массиве, с которой начинать удаление элементов. Например: 0",
  "Array.unshift": "Добавить один элемент в начало массива и вернуть новую длину массива.",
  "Array.unshift|param|value": "что вставлять в начало массива.",
  "Boolean.toString": "Возвращает строковое представление объекта.",
  "Buffer.fill": "Заполнить (фрагмент) буфера заданным значением.",
  "Buffer.getNumber": "Прочитать число в указанном формате из буфера.",
  "Buffer.length": "Возвращает длину объекта «буфер».",
  "Buffer.rotate": "Повернуть буфер на месте влево.",
  "Buffer.rotate|param|length": "число элементов в буфере. Если значение отрицательное, длина задается как длина буфера минус начало. Например: -1",
  "Buffer.rotate|param|offset": "число сдвигаемых байтов; отрицательное значение сдвигает вправо",
  "Buffer.rotate|param|start": "начальное смещение в буфере. По умолчанию — 0.",
  "Buffer.setNumber": "Записать в буфере число в указанном формате.",
  "Buffer.shift": "Сдвинуть буфер на месте влево, с заполнением нулями.",
  "Buffer.shift|param|length": "число элементов в буфере. Если значение отрицательное, длина задается как длина буфера минус начало. Например: -1",
  "Buffer.shift|param|offset": "число сдвигаемых байтов; отрицательное значение сдвигает вправо",
  "Buffer.shift|param|start": "начальное смещение в буфере. По умолчанию — 0.",
  "Buffer.slice": "Вернуть копию фрагмента буфера.",
  "Buffer.write": "Записать содержимое источника «src» в «dstOffset» в текущем буфере.",
  "EventCreationMode": "Как создать событие.",
  "EventCreationMode.CreateAndFire": "Событие MicroBitEvent инициализируется, и сразу же запускаются его обработчики событий (не подходит для прерываний!).",
  "EventCreationMode.CreateOnly": "Событие MicroBitEvent инициализируется, дальнейшая обработка не происходит.",
  "Gesture.EightG": "Вызывается при обнаружении удара в 8G",
  "Gesture.FreeFall": "Вызывается при падении платы!",
  "Gesture.LogoDown": "Вызывается, когда логотип ориентирован вниз, а экран вертикально",
  "Gesture.LogoUp": "Вызывается, когда логотип ориентирован вверх, а экран вертикально",
  "Gesture.ScreenDown": "Вызывается, когда экран направлен вверх, а плата стоит горизонтально",
  "Gesture.ScreenUp": "Вызывается, когда экран направлен вниз, а плата стоит горизонтально",
  "Gesture.Shake": "Вызывается при встряхивание",
  "Gesture.SixG": "Вызывается при обнаружении удара в 6G",
  "Gesture.ThreeG": "Вызывается при обнаружении удара в 3G",
  "Gesture.TiltLeft": "Вызывается, когда экран направлен влево",
  "Gesture.TiltRight": "Вызывается, когда экран направлен вправо",
  "Image.clear": "Выключает все пиксели.",
  "Image.height": "Получает высоту в строках (всегда 5)",
  "Image.pixel": "Получить состояние пикселя в положении «(x,y)»",
  "Image.pixelBrightness": "Получает яркость пикселя ([0…255]) в заданном положении",
  "Image.pixel|param|x": "ДОДЕЛАТЬ",
  "Image.pixel|param|y": "ДОДЕЛАТЬ",
  "Image.plotFrame": "Рисует на экране кадр номер «index» изображения.",
  "Image.plotFrame|param|xOffset": "индекс столбца, с которого начинать отображать изображение",
  "Image.plotImage": "Рисует на экране изображение в данном столбце",
  "Image.scrollImage": "Прокручивает изображение .",
  "Image.scrollImage|param|frameOffset": "смещение x на каждом шаге анимации, например: 1, 2, 5",
  "Image.scrollImage|param|interval": "время между шагами анимации в миллисекундах, например: 200",
  "Image.setPixel": "Задать состояние пикселя в положении «(x,y)»",
  "Image.setPixelBrightness": "Задает определенную яркость пикселей в заданном положении",
  "Image.setPixel|param|value": "ДОДЕЛАТЬ",
  "Image.setPixel|param|x": "ДОДЕЛАТЬ",
  "Image.setPixel|param|y": "ДОДЕЛАТЬ",
  "Image.showFrame": "Показывает конкретный кадр полосы изображения.",
  "Image.showFrame|param|frame": "ДОДЕЛАТЬ",
  "Image.showImage": "Показывает кадр из изображения со смещением «x offset».",
  "Image.showImage|param|xOffset": "индекс столбца, с которого начинать отображать изображение",
  "Image.width": "Получает ширину в столбцах",
  "Math": "Более сложные операции с числами.",
  "Math.abs": "Возвращает абсолютное значение числа (это значение не зависит от того положительное это число или отрицательное).\nНапример, абсолютное значение -5 равно абсолютному значению 5.",
  "Math.pow": "Возвращает значение выражения, возведенного в указанную степень.",
  "Math.random": "Вернуть псевдослучайное число между 0 и значением «limit»..",
  "Math.randomBoolean": "Произвольно генерирует значения «true» и «false», как при подбрасывании монеты.",
  "Math.random|param|limit": "верхняя граница генерируемых чисел, например: 4.",
  "Math.sqrt": "Вернуть квадратный корень числа.",
  "Number.toString": "Возвращает строковое представление числа.",
  "String": "Объединение, разделение и поиск текстовых строк.\n\nОбъединение, разделение и поиск текстовых строк.",
  "String.charAt": "Вернуть символ по указанному индексу.",
  "String.charAt|param|index": "Отсчитываемый от нуля индекс требуемого символа, например: 0",
  "String.charCodeAt": "Вернуть значение в таблице «Юникод» символа в указанном положении.",
  "String.compare": "Посмотреть, как различается порядок символов в двух строках (в кодировке ASCII).",
  "String.concat|param|other": "Строка, которую нужно добавить в конец строки, например: «добавь меня!»",
  "String.fromCharCode": "Сделать строку из заданного ASCII-кода символа.",
  "String.length": "Вернуть длину объекта String («строка»).",
  "String.substr": "Вернуть подстроку текущей строки.",
  "String.substr|param|length": "число извлекаемых символов, например: 3",
  "String.substr|param|start": "индекс первого символа (при отсчете с конца может быть отрицательным), например: 0",
  "basic": "Обеспечивает доступ к основным функциям micro:bit.",
  "basic.clearScreen": "Выключить все светодиоды",
  "basic.forever": "Постоянно повторяет код в фоновом режиме. На каждой итерации позволяет запускать другие коды.",
  "basic.pause": "Сделать паузу на заданное время в миллисекундах",
  "basic.pause|param|ms": "время приостановки, например: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Рисует изображение на экране дисплея.",
  "basic.plotLeds|param|leds": "шаблон включения светодиодных индикаторов",
  "basic.showAnimation": "Показывает последовательность светодиодных экранов в виде анимации.",
  "basic.showAnimation|param|interval": "время в миллисекундах между перерисовкой",
  "basic.showAnimation|param|leds": "шаблон включения светодиодных индикаторов",
  "basic.showArrow": "Показывает стрелку на экране",
  "basic.showArrow|param|direction": "направление стрелки",
  "basic.showArrow|param|interval": "время показа значка (в миллисекундах). По умолчанию — 600.",
  "basic.showIcon": "Рисует выбранный значок на светодиодном экране",
  "basic.showIcon|param|icon": "идентификатор заданного значка",
  "basic.showIcon|param|interval": "время показа значка (в миллисекундах). По умолчанию — 600.",
  "basic.showLeds": "Рисует изображение на экране дисплея.",
  "basic.showLeds|param|interval": "время в миллисекундах для паузы после прорисовки",
  "basic.showLeds|param|leds": "шаблон включения светодиодных индикаторов",
  "basic.showNumber": "Прокрутить на экране число. Если число влазит в экран (то есть это одна цифра), оно прокручиваться не будет.",
  "basic.showNumber|param|interval": "скорость прокрутки; например: 150, 100, 200, -100",
  "basic.showString": "Показать текст на дисплее, по одному символу за раз. Если строка влазит в экран (то есть это одна буква), она прокручиваться не будет.",
  "basic.showString|param|interval": "как быстро смещать символы; например: 150, 100, 200, -100",
  "basic.showString|param|text": "прокручиваемый на экране текст, например: «Привет!»",
  "control": "Средства событий и среды выполнения.",
  "control.inBackground": "Планирует запуск кода в фоновом режиме.",
  "control.reset": "Сбрасывает BBC micro:bit.",
  "control.waitMicros": "Блокирует текущее волокно на заданное в микросекундах время",
  "control.waitMicros|param|micros": "время ожидания в микросекундах. Например: 4",
  "game": "Спрайтовый игровой движок с одним светодиодным индикатором",
  "game.LedSprite": "Спрайт игры, отрисованный как один светодиод",
  "game.LedSprite.blink": "Сообщает длительность «мигания» спрайта",
  "game.LedSprite.brightness": "Сообщает «яркость» спрайта на светодиодном экране",
  "game.LedSprite.change": "Изменяет свойство спрайта",
  "game.LedSprite.changeBlinkBy": "Изменяет длительность «мигания» на заданное количество миллисекунд",
  "game.LedSprite.changeBlinkBy|param|ms": "ДОДЕЛАТЬ",
  "game.LedSprite.changeBrightnessBy": "Изменяет положение «y» на заданную величину",
  "game.LedSprite.changeBrightnessBy|param|value": "значение для изменения яркости",
  "game.LedSprite.changeDirectionBy": "Изменяет положение «direction» (направление) на заданную величину поворотом вправо",
  "game.LedSprite.changeDirectionBy|param|angle": "ДОДЕЛАТЬ",
  "game.LedSprite.changeXBy": "Изменяет положение «x» на заданную величину",
  "game.LedSprite.changeXBy|param|x": "ДОДЕЛАТЬ",
  "game.LedSprite.changeYBy": "Изменяет положение «y» на заданную величину",
  "game.LedSprite.changeYBy|param|y": "ДОДЕЛАТЬ",
  "game.LedSprite.change|param|property": "имя изменяемого свойства",
  "game.LedSprite.change|param|value": "величина изменения, например: 1",
  "game.LedSprite.delete": "Удаляет спрайт из игрового движка. Спрайт больше не будет отображаться на экране и не будет взаимодействовать с другими спрайтами.",
  "game.LedSprite.direction": "Сообщает текущее направление спрайта",
  "game.LedSprite.get": "Получает свойство спрайта",
  "game.LedSprite.get|param|property": "имя изменяемого свойства",
  "game.LedSprite.goTo": "Перейти к этому положению на экране",
  "game.LedSprite.goTo|param|x": "ДОДЕЛАТЬ",
  "game.LedSprite.goTo|param|y": "ДОДЕЛАТЬ",
  "game.LedSprite.ifOnEdgeBounce": "В случае касания края области лицом к ней — отвернуться.",
  "game.LedSprite.isTouching": "Сообщает «истина», если у спрайта то же положение, что и указанного спрайта",
  "game.LedSprite.isTouchingEdge": "Сообщает «истина», если спрайт касается края",
  "game.LedSprite.isTouching|param|other": "ДОДЕЛАТЬ",
  "game.LedSprite.move": "Переместить определенное количество светодиодов в текущем направлении",
  "game.LedSprite.move|param|leds": "число перемещаемых светодиодов, например: 1, -1",
  "game.LedSprite.off": "Выключает спрайт (по умолчанию включено)",
  "game.LedSprite.on": "Включает спрайт (по умолчанию включено)",
  "game.LedSprite.set": "Задает свойство спрайта",
  "game.LedSprite.setBlink": "Задает длительность мигания в миллисекундах.",
  "game.LedSprite.setBlink|param|ms": "ДОДЕЛАТЬ",
  "game.LedSprite.setBrightness": "Задать «яркость» спрайта",
  "game.LedSprite.setBrightness|param|brightness": "яркость от 0 (выкл.) до 255 (вкл.), например: 255.",
  "game.LedSprite.setDirection": "Задать направление текущего спрайта, округленное до ближайшего кратного 45",
  "game.LedSprite.setDirection|param|degrees": "ДОДЕЛАТЬ",
  "game.LedSprite.setX": "Задать положение «x» спрайта",
  "game.LedSprite.setX|param|x": "ДОДЕЛАТЬ",
  "game.LedSprite.setY": "Задать положение «y» спрайта",
  "game.LedSprite.setY|param|y": "ДОДЕЛАТЬ",
  "game.LedSprite.set|param|property": "имя изменяемого свойства",
  "game.LedSprite.turn": "Повернуть спрайт",
  "game.LedSprite.turnLeft": "Повернуть влево (против часовой стрелки)",
  "game.LedSprite.turnLeft|param|degrees": "ДОДЕЛАТЬ",
  "game.LedSprite.turnRight": "Повернуть вправо (по часовой стрелке)",
  "game.LedSprite.turnRight|param|degrees": "ДОДЕЛАТЬ",
  "game.LedSprite.turn|param|degrees": "угол поворота в градусах, например: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "влево или вправо",
  "game.LedSprite.x": "Сообщает положение «x» спрайта на светодиодном экране",
  "game.LedSprite.y": "Сообщает положение «y» спрайта на светодиодном экране",
  "game.addLife|param|lives": "ДОДЕЛАТЬ",
  "game.addScore": "Добавляет очки к текущему счету и показывает анимацию",
  "game.addScore|param|points": "сумма изменяемых баллов, например: 1",
  "game.gameOver": "Отображение анимации завершения игры и счета.",
  "game.isPaused": "Показывает, приостановлена ли игра (если да, то разрешены другие анимации)",
  "game.pause": "Приостанавливает движок отрисовки игры, чтобы разрешить другие анимации",
  "game.removeLife|param|life": "ДОДЕЛАТЬ",
  "game.resume": "Вновь запускает движок отрисовки игры",
  "game.score": "Получает текущий счет",
  "game.setLife|param|value": "ДОДЕЛАТЬ",
  "game.setScore": "Задает текущее значение счета",
  "game.setScore|param|value": "новый счет.",
  "game.startCountdown": "Показывает анимацию, затем запускает таймер обратного отсчета игры, и когда он достигает 0, игра заканчивается",
  "game.startCountdown|param|ms": "время обратного отсчета в миллисекундах, например: 10000",
  "images": "Создание, обработка и отображение светодиодных изображений.",
  "images.createBigImage": "Создает изображение с 2 кадрами.",
  "images.createImage": "Создает изображение, которое помещается на светодиодный экран.",
  "input": "События и данные от датчиков",
  "input.acceleration": "Получите значение ускорения в миллигравитациях (когда плата лежит плашмя с экраном вверх, x=0, y=0 и z=-1024)",
  "input.acceleration|param|dimension": "ДОДЕЛАТЬ",
  "input.buttonIsPressed": "Получить состояние кнопки (нажата или нет) для «A» и «B».",
  "input.buttonIsPressed|param|button": "кнопка для отправки запроса, например: Button.A (кнопка A)",
  "input.calibrate": "Устарело, используйте input.calibrateCompass.",
  "input.compassHeading": "Получить текущий компасный курс в градусах.",
  "input.lightLevel": "Считывает уровень освещенности светодиодного экрана в диапазоне от «0» (темно) до «255» (ярко).",
  "input.magneticForce": "Получите значение силы магнитного поля в «микротеслах» («µT»). Эта функция в симуляторе не поддерживается.",
  "input.magneticForce|param|dimension": "ДОДЕЛАТЬ",
  "input.onButtonPressed": "Сделать Выполнить действие, когда кнопка (A, B или A+B вместе) нажата и снова отпущена.",
  "input.onButtonPressed|param|body": "код, запускаемый при появлении события",
  "input.onButtonPressed|param|button": "кнопку, которую нужно нажать",
  "input.onGesture": "Сделать Выполнить действие, когда выполнен жест (например, когда micro:bit встряхнули).",
  "input.onGesture|param|body": "код, запускаемый при выполнении жеста",
  "input.onGesture|param|gesture": "тип отслеживаемых жестов, например: Gesture.Shake (встряхивание)",
  "input.onLogoDown": "Прикрепляет код, который запускается, когда логотип ориентирован вниз, а плата стоит вертикально.",
  "input.onLogoDown|param|body": "ДОДЕЛАТЬ",
  "input.onLogoUp": "Прикрепляет код, который запускается, когда логотип ориентирован вверх, а плата стоит вертикально.",
  "input.onLogoUp|param|body": "ДОДЕЛАТЬ",
  "input.onPinPressed": "Сделать Выполнить действие, когда контакта коснулись и отпустили (при одновременном касании контакта GND).",
  "input.onPinPressed|param|body": "код, запускаемый при нажатии на контакт",
  "input.onPinPressed|param|name": "контакт, который нужно нажать, например: TouchPin.P0",
  "input.onPinReleased": "Сделать Выполнить действие, когда контакт отпустили.",
  "input.onPinReleased|param|body": "код, запускаемый при отпускании контакта",
  "input.onPinReleased|param|name": "контакт, который нужно отпустить, например: TouchPin.P0",
  "input.onScreenDown": "Прикрепляет код, который запускается, когда экран ориентирован вниз.",
  "input.onScreenDown|param|body": "ДОДЕЛАТЬ",
  "input.onScreenUp": "Прикрепляет код, который запускается, когда экран ориентирован вверх.",
  "input.onScreenUp|param|body": "ДОДЕЛАТЬ",
  "input.onShake": "Прикрепляет код, который запускается, когда устройство потрясли.",
  "input.onShake|param|body": "ДОДЕЛАТЬ",
  "input.pinIsPressed": "Получить состояние контакта (нажат или нет). Для замыкания цепи необходимо держаться за штырь «земля».",
  "input.pinIsPressed|param|name": "контакт, используемый для обнаружения касания, например: TouchPin.P0",
  "input.rotation": "Крен или наклон устройства — вращение вдоль оси «x» или «y», в градусах.",
  "input.rotation|param|kind": "ДОДЕЛАТЬ",
  "input.runningTime": "Получает время в миллисекундах, прошедшее с момента включения питания.",
  "input.runningTimeMicros": "Получает время в микросекундах, прошедшее с момента включения питания.",
  "input.setAccelerometerRange": "Задает размах выборки акселерометра в гравитациях.",
  "input.setAccelerometerRange|param|range": "значение, описывающее максимальную интенсивность измеряемого ускорения",
  "input.temperature": "Получает температуру в градусах по Цельсию (°C).",
  "led": "Управление светодиодным экраном.",
  "led.brightness": "Получить яркость экрана от 0 (выкл.) до 255 (полная яркость).",
  "led.displayMode": "Получает текущий режим отображения",
  "led.enable": "Включает или выключает дисплей",
  "led.fadeIn": "Выводит дисплей из затемнения.",
  "led.fadeIn|param|ms": "ДОДЕЛАТЬ",
  "led.fadeOut": "Постепенное затемнение экрана.",
  "led.fadeOut|param|ms": "ДОДЕЛАТЬ",
  "led.plot": "Включает указанный светодиод по координатам x, y (x — по горизонтали, y — по вертикали). (0,0) — верхний левый светодиод.",
  "led.plotAll": "Включить все светодиоды",
  "led.plotBarGraph": "Показывает вертикальную гистограмму по значениям «value» и «high».\nЕсли значение «high» равно 0, гистограмма автоматически подстраивается.",
  "led.plotBarGraph|param|high": "максимальное значение. Если равно 0, максимальное значение подстраивается автоматически, например: 0",
  "led.plotBarGraph|param|value": "текущее значение для построения графика",
  "led.plotBrightness": "Включает указанный светодиод с указанной яркостью по координатам x, y (x горизонтально, y - вертикально). (0,0) — верхний левый светодиод.",
  "led.plotBrightness|param|brightness": "Получить яркость экрана от 0 (выкл.) до 255 (полная яркость), например: 255",
  "led.plotBrightness|param|x": "горизонтальная координата светодиода, начинается с 0",
  "led.plotBrightness|param|y": "вертикальная координата светодиода, начинается с 0",
  "led.plot|param|x": "горизонтальная координата светодиода, начинается с 0",
  "led.plot|param|y": "вертикальная координата светодиода, начинается с 0",
  "led.point": "Получить состояние «вкл» или «выкл» указанного светодиода по координатам x, y. (0,0) — верхний левый светодиод.",
  "led.point|param|x": "ДОДЕЛАТЬ",
  "led.point|param|y": "ДОДЕЛАТЬ",
  "led.screenshot": "Делает снимок светодиодного экрана и возвращает изображение.",
  "led.setBrightness": "Задать яркость экрана от 0 (выкл.) до 255 (полная яркость).",
  "led.setBrightness|param|value": "значение яркости, например: 255, 127, 0",
  "led.setDisplayMode": "Задает режим отображения для отрисовки светодиодов: черно-белый или оттенки серого.",
  "led.setDisplayMode|param|mode": "режим отображения, в котором работает экран",
  "led.stopAnimation": "Отменяет текущую анимацию и очищает остальные анимации в очереди.",
  "led.toggle": "Включает (выключает) определенный пиксель",
  "led.toggleAll": "Инвертирует текущий светодиодный дисплей",
  "led.toggle|param|x": "ДОДЕЛАТЬ",
  "led.toggle|param|y": "ДОДЕЛАТЬ",
  "led.unplot": "Выключает указанный светодиод по координатам x, y (x — по горизонтали, y — по вертикали). (0,0) — верхний левый светодиод.",
  "led.unplot|param|x": "ДОДЕЛАТЬ",
  "led.unplot|param|y": "ДОДЕЛАТЬ",
  "music": "Создание музыкальных тонов.",
  "music.beat": "Возвращает длительность удара в миллисекундах",
  "music.beginMelody": "Начинает проигрывать мелодию.\nНоты записываются как строка символов в следующем формате: НОТА[октава][:длительность]",
  "music.beginMelody|param|melodyArray": "проигрываемый массив мелодии, например: ['g5:1']",
  "music.beginMelody|param|options": "параметры мелодии: один раз или постоянно, на переднем плане или в фоне",
  "music.builtInMelody": "Получает массив мелодии для встроенной мелодии.",
  "music.changeTempoBy": "Изменить темп на указанное значение",
  "music.changeTempoBy|param|bpm": "Изменение темпа (в ударах в минуту), например: 20",
  "music.noteFrequency": "Получает частоту ноты.",
  "music.noteFrequency|param|name": "название ноты, например: Note.C",
  "music.onEvent": "Регистрирует код для запуска по различным событиям мелодии",
  "music.playTone": "Проигрывает тон заданной длительности через контакт «P0».",
  "music.playTone|param|frequency": "высота воспроизводимого тона в герцах (Гц)",
  "music.playTone|param|ms": "длительность тона в миллисекундах (мс)",
  "music.rest": "Тишина (ничего не проигрывается) в течение указанного времени на контакте «P0».",
  "music.rest|param|ms": "длительность тишины в миллисекундах (мс)",
  "music.ringTone": "Проигрывает тон через контакт «P0».",
  "music.ringTone|param|frequency": "высота воспроизводимого тона в герцах (Гц)",
  "music.setPlayTone": "Задает пользовательскую функцию playTone для проигрывания мелодий",
  "music.setTempo": "Задает темпу указанное значение",
  "music.setTempo|param|bpm": "Новый темп в ударах в минуту, например: 120",
  "music.tempo": "Возвращает темп в ударах в минуту. Темп — это скорость (bpm, или уд/мин = удары в минуту), с которой проигрываются ноты. Чем выше темп, тем быстрее будут проигрываться ноты.",
  "parseInt": "Преобразовать строку в целое число.",
  "pins": "Управляющие токи в контактах для аналоговых и цифровых сигналов, сервоприводов, i2c, …",
  "pins.analogPitch": "Выдает сигнал с широтно-импульсной модуляцией (ШИМ) на текущий контакт тона. Чтобы указать контакт тона, используйте «analog set pitch pin».",
  "pins.analogPitch|param|frequency": "модулируемая частота, Гц.",
  "pins.analogPitch|param|ms": "длительность тона в миллисекундах.",
  "pins.analogReadPin": "Прочитать значение разъема как аналоговое, то есть в виде значения от 0 до 1023.",
  "pins.analogReadPin|param|name": "контакт для записи, например: AnalogPin.P0",
  "pins.analogSetPeriod": "Задает широтно-импульсной модуляции (ШИМ) аналогового выхода значение, заданное **микросекундах** (1/1000 миллисекунды).\nЕсли этот контакт не настроен как аналоговый выход (командой «analog write pin»), операция не выполняется.",
  "pins.analogSetPeriod|param|micros": "период в микросекундах. Например: 20000",
  "pins.analogSetPeriod|param|name": "аналоговый контакт для установки периода, например: AnalogPin.P0",
  "pins.analogSetPitchPin": "Задает контакт для команды «analog pitch» или музыки.",
  "pins.analogSetPitchPin|param|name": "контакт для модуляции тона",
  "pins.analogWritePin": "Задать значение разъема как аналоговое. Значение должно быть в промежутке от 0 до 1023.",
  "pins.analogWritePin|param|name": "название контакта для записи, например: AnalogPin.P0",
  "pins.analogWritePin|param|value": "записываемое в контакт значение, от 0 до 1023. Например: 1023",
  "pins.digitalReadPin": "Прочитать указанный контакт или разъем как 0 или 1",
  "pins.digitalReadPin|param|name": "контакт для чтения, например: DigitalPin.P0",
  "pins.digitalWritePin": "Задать значение контакта или разъема как 0 или 1.",
  "pins.digitalWritePin|param|name": "контакт для записи, например: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "значение, задаваемое для контакта, например, 0",
  "pins.i2cReadNumber": "Прочитать одно число из 7-битного адреса I2C.",
  "pins.i2cWriteNumber": "Записать одно число в 7-битный адрес I2C.",
  "pins.map": "Повторно отображает число из одного диапазона в другой. То есть, значение «from low» будет отображено на значение «to low», а «from high» — на «to high»; причем значения внутри исходного диапазона будут отображены на значения внутри целевого диапазона.",
  "pins.map|param|fromHigh": "верхняя граница текущего диапазона значений, например: 1023",
  "pins.map|param|fromLow": "нижняя граница текущего диапазона значений, например:",
  "pins.map|param|toHigh": "верхняя граница целевого диапазона значений, например: 4",
  "pins.map|param|toLow": "нижняя граница целевого диапазона значений, например:",
  "pins.map|param|value": "значение для отображения в диапазонах",
  "pins.onPulsed": "Настраивает этот контакт на цифровой вход и генерирует события, где отметка времени — это промежуток времени, в течение которого контакт был в состоянии «высокого» либо «низкого» сигнала.",
  "pins.onPulsed|param|name": "цифровой контакт для регистрации, например: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "значение импульса, например: PulseValue.High (высокий)",
  "pins.pulseDuration": "Получает длительность последнего импульса в микросекундах. Эта функцию следует вызывать из обработчика «onPulsed».",
  "pins.pulseIn|param|name": "контакт, который измеряет импульс, например: DigitalPin.P0",
  "pins.pulseIn|param|value": "значение импульса, например: PulseValue.High (высокий)",
  "pins.servoSetPulse": "Настраивает этот контакт ввода-вывода как аналоговый или ШИМ-выход, устанавливает период = 20 мс и ширину импульса в зависимости от значения, указанного в **микросекундах** (1/1000 миллисекунды).",
  "pins.servoSetPulse|param|micros": "длительность импульса в микросекундах, например: 1500",
  "pins.servoSetPulse|param|name": "название контакта",
  "pins.servoWritePin": "Записывает значение на сервопривод, управляя таким образом валом. На стандартных сервоприводах задается угол вала (в градусах), и вал движется до этого угла. На сервоприводах с непрерывным вращением задается скорость сервопривода (причем «0» — полная скорость в одном направлении, а «180» — полная скорость в обратном направлении, значение около «90» — остановка).",
  "pins.servoWritePin|param|name": "контакт для записи, например: AnalogPin.P0",
  "pins.servoWritePin|param|value": "угол или скорость вращения, например: 180,90,0",
  "pins.setEvents": "Настраивает события, выдаваемые этим контактом. На события можно подписаться с помощью метода «control.onEvent()».",
  "pins.setEvents|param|name": "контакт для установки режима событий, например: DigitalPin.P0",
  "pins.setEvents|param|type": "тип событий, выдаваемых этим контактом, например: PinEventType.Edge",
  "pins.setPull": "Настраивает получение для этого контакта.",
  "pins.setPull|param|name": "контакт для установки режима получения, например: DigitalPin.P0",
  "pins.setPull|param|pull": "одна из конфигураций преобразования mbed, например: PinPullMode.PullUp (повышение)",
  "pins.spiFormat": "Задает режим и биты SPI",
  "pins.spiFormat|param|bits": "число бит, например: 8",
  "pins.spiFormat|param|mode": "режим, например: 3",
  "pins.spiFrequency": "Задает частоту SPI",
  "pins.spiFrequency|param|frequency": "тактовая частота, например: 1000000",
  "pins.spiPins": "Задает контакты MOSI, MISO, SCK, используемые экземпляром SPI",
  "pins.spiWrite": "Записать в подчиненное устройство SPI и вернуть ответ",
  "pins.spiWrite|param|value": "Данные, отправляемые в подчиненное устройство SPI",
  "serial": "Чтение и запись данных по последовательному подключению.",
  "serial.onDataReceived": "Регистрирует событие, которое запускается, когда совпал один из разделителей.",
  "serial.onDataReceived|param|delimiters": "символы, с которыми сравниваются принятые символы.",
  "serial.readBuffer": "Прочитать несколько символов из приемного буфера и заполнить пользовательский буфер.",
  "serial.readBuffer|param|length": "длина буфера по умолчанию, например: 64",
  "serial.readLine": "Читает строку текста из последовательного порта.",
  "serial.readString": "Читает буферизованные полученные данные как строку",
  "serial.readUntil": "Читает строку текста из последовательного порта и при совпадении разделителя возвращает буфер.",
  "serial.readUntil|param|delimiter": "текстовый разделитель для блоков текста",
  "serial.redirect": "Динамическая настройка последовательного экземпляра для использования отличных от USBTX и USBRX контактов.",
  "serial.redirectToUSB": "Направляет последовательный вход и выход для использования подключения USB.",
  "serial.redirect|param|rate": "новая скорость передачи, бит/с. Например: 115200",
  "serial.redirect|param|rx": "новый приемный контакт, например: SerialPin.P1",
  "serial.redirect|param|tx": "новые передающие контакты, например: SerialPin.P0",
  "serial.writeBuffer": "Отправляет буфер через последовательное подключение",
  "serial.writeLine": "Печатает строку текста в последовательный порт",
  "serial.writeNumber": "Печатает числовое значение в последовательный порт",
  "serial.writeString": "Отправляет кусок текста через последовательное подключение.",
  "serial.writeValue": "Записывает парную строку «имя: значение» в последовательный порт.",
  "serial.writeValue|param|name": "имя потока значений, например: x",
  "serial.writeValue|param|value": "записываемое значение"
}