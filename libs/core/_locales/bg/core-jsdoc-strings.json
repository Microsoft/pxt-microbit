{
  "AcceleratorRange.EightG": "Ускорителят измерва сили до 8 гравита",
  "AcceleratorRange.FourG": "Ускорителят измерва сили до 4 гравита",
  "AcceleratorRange.OneG": "Ускорителят измерва сили до 1 гравит",
  "AcceleratorRange.TwoG": "Ускорителят измерва сили до 2 гравита",
  "Array": "Добавяне, премахване и заменяне на елементи в списъци.\n\nДобавяне, премахване и заменяне на елементи в списъци.",
  "Array.filter": "Връщане на елементите от масив, отговарящи на условието, указано във функцията за обратно повикване.",
  "Array.filter|param|callbackfn": "Функция, приемаща до два аргумента. Методът на филтъра извиква функцията callbackfn веднъж за всеки елемент в масива.",
  "Array.get": "Получете стойност за конкретен индекс.",
  "Array.get|param|index": "позицията, базирана на нула в списъка с елемента, напр.: 0",
  "Array.indexOf": "Връщане на индекса на първото показване на стойност в масив.",
  "Array.indexOf|param|fromIndex": "Индексът на масива, от който да започне търсенето. Ако fromIndex е пропуснат, търсенето започва с индекс 0.",
  "Array.indexOf|param|item": "Стойността за откриване в масива.",
  "Array.insertAt": "Въведете стойността за конкретен индекс, увеличете дължината на масива с 1.",
  "Array.insertAt|param|index": "базираната на нула позиция в списъка за въвеждане на стойността, напр.: 0",
  "Array.insertAt|param|value": "да въведе, напр.: 0",
  "Array.length": "Получава или задава дължината на масива. Това е число, по-голямо с едно от най-големия елемент в даден масив.",
  "Array.map": "Повикване на определена функция за обратно повикване за всеки елемент от масив и връщане на масив, съдържащ резултатите.",
  "Array.map|param|callbackfn": "Функция, приемаща до два аргумента. Методът на разпределяне извиква фунцкията callbackfn още веднъж за всеки елемент в масива.",
  "Array.pop": "Премахва последния елемент от масив и го връща.",
  "Array.push": "Добавяне на нови елементи към масив.",
  "Array.push|param|item": "да се добави към масив.",
  "Array.reduce": "Извиква указаната функция за обратно повикване за всички елементи в масив. Стойността за връщане на обратното повикване е акумулираният резултат и се предоставя като аргумент в следващото повикване за функцията обратно повикване.",
  "Array.reduce|param|callbackfn": "Функция, която приема до три аргумента. Методът за намаляване извиква функцията callbackfn веднъж за всеки елемент в масива.",
  "Array.reduce|param|initialValue": "Първоначална стойност за стартиране на акумулацията. Първото повикване към функцията callbackfn предоставя тази стойност като аргумент вместо стойност на масив.",
  "Array.removeAt": "Премахване на елемента за определен индекс.",
  "Array.removeAt|param|index": "позицията, базирана на нула в първия списък, да премахне стойността от, напр.: 0",
  "Array.removeElement": "Премахнете първата поява на обект. Връщане на вярно, ако е премахнат.",
  "Array.reverse": "Разменя елементите в масив. Първият елемент в масив става последен, а последният елемент в масив става първи.",
  "Array.set": "Съхранете стойност за конкретен индекс.",
  "Array.set|param|index": "базираната на нула позиция в списъка за съхраняване на стойността, напр.: 0",
  "Array.shift": "Премахва първия елемент от масив и го връща. Този метод променя дължината на масива.",
  "Array.slice": "Връща секция от масив.",
  "Array.slice|param|end": "Краят на указаната част от масива, напр.: 0",
  "Array.slice|param|start": "Началото на указаната част от масива, напр.: 0",
  "Array.sort": "Сортира елементите от масив на едно място и връща масива. Сортирането не е непременно стабилно.",
  "Array.splice": "Премахва елементите от масив.",
  "Array.splice|param|deleteCount": "Броят елементи за премахване, напр.: 0",
  "Array.splice|param|start": "Базираното на нула местоположение в масива, от който да стартира премахването на елементи, напр.: 0",
  "Array.unshift": "Добавя един елемент към началото на масив и връща новата дължина на масива.",
  "Array.unshift|param|value": "да се въведе в началото на масив.",
  "Boolean.toString": "Връща представяне на низ на обект.",
  "Buffer.fill": "Запълване (на фрагмент) на буфера с дадена стойност.",
  "Buffer.getNumber": "Прочита число в указан формат от буфера.",
  "Buffer.length": "Връща дължината на обект от буфер.",
  "Buffer.rotate": "Въртене на буфера вляво на място.",
  "Buffer.rotate|param|length": "брой елементи в буфер. Ако е отрицателно, дължината се задава като дължина на буфера минус начало. напр.: -1",
  "Buffer.rotate|param|offset": "брой битове за преместване; използвайте отрицателна стойност за преместване вдясно",
  "Buffer.rotate|param|start": "стартира изместване в буфер. По подразбиране е 0.",
  "Buffer.setNumber": "Записва число в указания формат в буфера.",
  "Buffer.shift": "Изместване на буфера вляво, с нулево допълване.",
  "Buffer.shift|param|length": "брой елементи в буфер. Ако е отрицателно, дължината се задава като дължина на буфера минус начало. напр.: -1",
  "Buffer.shift|param|offset": "брой битове за преместване; използвайте отрицателна стойност за преместване вдясно",
  "Buffer.shift|param|start": "стартира изместване в буфер. По подразбиране е 0.",
  "Buffer.slice": "Връща копие от фрагмента на буфер.",
  "Buffer.write": "Записва съдържание за `src` на `dstOffset` в текущия буфер.",
  "EventCreationMode": "Как да създаде събитие.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent е иницииран и неговите манипулатори за събития са изпратени незабавно (неподходящо за използване при прекъсвания!).",
  "EventCreationMode.CreateOnly": "MicroBitEvent е иницииран и не се осъществява последваща обработка.",
  "Gesture.EightG": "Задейства се когато е се разпознава 8G шок",
  "Gesture.FreeFall": "Задействано при падащо табло!",
  "Gesture.LogoDown": "Задействано при насочено надолу лого и вертикален екран",
  "Gesture.LogoUp": "Задействано при насочено нагоре лого и вертикален екран",
  "Gesture.ScreenDown": "Задействано при екран насочен нагоре и хоризонтално табло",
  "Gesture.ScreenUp": "Задейства се, когато екранът е насочен надолу и бордът е хоризонтално",
  "Gesture.Shake": "Задейства се, когато се разклати",
  "Gesture.SixG": "Задействано при разпознат 6G шок",
  "Gesture.ThreeG": "Задействано при разпознат 3G шок",
  "Gesture.TiltLeft": "Задейства се, когато екранът е насочен наляво",
  "Gesture.TiltRight": "Задейства се, когато екранът е насочен надясно",
  "Image.clear": "Изключване на всички пиксели.",
  "Image.height": "Получава височината в редове (винаги 5)",
  "Image.pixel": "Получава състоянието на пиксела в позиция ``(x,y)``",
  "Image.pixelBrightness": "Получава яркостта на пиксела ([0..255]) за дадена позиция",
  "Image.pixel|param|x": "TODO",
  "Image.pixel|param|y": "TODO",
  "Image.plotFrame": "Изтегля рамката ``индекс``-th на изображението на екрана.",
  "Image.plotFrame|param|xOffset": "колонка индекс за стартиране на показването на изображение",
  "Image.plotImage": "Рисува изображението в дадена колонка на екрана",
  "Image.scrollImage": "Скролира изображение.",
  "Image.scrollImage|param|frameOffset": "изместването x преместено на всяка стъпка за анимация, напр.: 1, 2, 5",
  "Image.scrollImage|param|interval": "време между всяка стъпка на анимацията в милисекунди, напр.: 200",
  "Image.setPixel": "Задаване на състояние на пиксел в позиция ``(x,y)``",
  "Image.setPixelBrightness": "Задава конкретна яркост на пиксел за дадена позиция",
  "Image.setPixel|param|value": "TODO",
  "Image.setPixel|param|x": "TODO",
  "Image.setPixel|param|y": "TODO",
  "Image.showFrame": "Показва конкретна рамка на ивицата на изображението.",
  "Image.showFrame|param|frame": "TODO",
  "Image.showImage": "Показва рамка от изображението на изместване ``x изместване``.",
  "Image.showImage|param|xOffset": "колонка индекс за стартиране на показването на изображение",
  "Image.width": "Получава широчината в колонки",
  "Math": "По-сложни операции с числа.",
  "Math.abs": "Връща абсолютната стойност на число (стойност независимо дали е положително или отрицателно).\nЗа пример абсолютната стойност на -5 е същата като на абсолютната стойност на 5.",
  "Math.pow": "Върнете стойността на базов израз на определена степен.",
  "Math.random": "Върнете псевдоначално число между 0 и „ограничение“.",
  "Math.randomBoolean": "Генерира стойност „вярно“ или „грешно“ случайно, точно като обръщане на монетата.",
  "Math.random|param|limit": "горната граница на генерираното число, напр.: 4.",
  "Math.sqrt": "Върнете квадратния корен на число.",
  "Number.toString": "Връща представяне на низ на число.",
  "String": "Комбиниране, разделяне и търсене на текстови низове.\n\nКомбиниране, разделяне и търсене на текстови низове.",
  "String.charAt": "Върнете знака за указания индекс.",
  "String.charAt|param|index": "Базираният на нула индекс на желания знак, напр.: 0",
  "String.charCodeAt": "Върнете Unicode стойността на знак за указаната локация.",
  "String.compare": "Вижте как се различава редът на знаците в два низа (при ASCII кодиране).",
  "String.concat|param|other": "Низът за добавяне в края на низа, напр. „добави ме!“",
  "String.fromCharCode": "Направи стринг от даден ASCII код.",
  "String.length": "Върнете дължината на обект за низ.",
  "String.substr": "Върнете подниз на текущ низ.",
  "String.substr|param|length": "брой знаци за извличане, напр.: 3",
  "String.substr|param|start": "индекс на първия знак; може да бъде отрицателен при преброяване от края, напр.: 0",
  "basic": "Осигурява достъп до основни micro:bit функции.",
  "basic.clearScreen": "Изключва всички светодиоди",
  "basic.forever": "Повтаря кода завинаги във фонов режим. На всяка итерация позволява други кодове за изпълнение.",
  "basic.pause": "Пауза за определено време в милисекунди",
  "basic.pause|param|ms": "колко дълго продължава паузата, например: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Рисува изображение на LED екрана.",
  "basic.plotLeds|param|leds": "модел на светодиоди за включване/изключване",
  "basic.showAnimation": "Показва поредица от LED екрани като анимация.",
  "basic.showAnimation|param|interval": "време в милисекунди между всяко повторно теглене",
  "basic.showAnimation|param|leds": "модел на светодиоди за включване/изключване",
  "basic.showArrow": "Показва стрелка на екрана",
  "basic.showArrow|param|direction": "посока на стрелката",
  "basic.showArrow|param|interval": "времето (милисекунди) за покаване иконата. По подразбиране е 600.",
  "basic.showIcon": "Показва избраната икона на LED екрана",
  "basic.showIcon|param|icon": "предварително дефинираното id на икона",
  "basic.showIcon|param|interval": "времето (милисекунди) за покаване иконата. По подразбиране е 600.",
  "basic.showLeds": "Рисува изображение на LED екрана.",
  "basic.showLeds|param|interval": "време в милисекунди за пауза след рисунка",
  "basic.showLeds|param|leds": "модел на светодиоди за включване/изключване",
  "basic.showNumber": "Превъртане число на екрана. Ако номера се побира на екрана (т.е. е една цифра), не се превърта.",
  "basic.showNumber|param|interval": "скоростта на превъртане; например: 150, 100, 200, -100",
  "basic.showString": "Показване на текст на дисплея, един символ в даден момент. Ако стрингът се побира на екрана (т.е. е една буква), не се превърта.",
  "basic.showString|param|interval": "как бързо да сменя знаците; например: 150, 100, 200, -100",
  "basic.showString|param|text": "текстът за превъртане на екрана, например: „Здравей!“",
  "control": "Изпълними помощни приложения и помощни приложения за събития.",
  "control.inBackground": "Следи код, който работи във фонов режим.",
  "control.reset": "Нулира на BBC micro:bit.",
  "control.waitMicros": "Блокира текущия фибър за дадените микросекунди",
  "control.waitMicros|param|micros": "брой на микро-секунди за изчакване. например: 4",
  "game": "Единичен игрови двигател с LED елфче",
  "game.LedSprite": "Елфче от играта като единичен LED",
  "game.LedSprite.blink": "Докладва продължителността на ``премигване`` на елфче",
  "game.LedSprite.brightness": "Докладва ``яркост` на елфче на LED екрана",
  "game.LedSprite.change": "Променя свойството на елфчето",
  "game.LedSprite.changeBlinkBy": "Променя продължителността на ``премигване`` според даденото количество милисекунди",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "Променя позицията ``y`` според даденото количество",
  "game.LedSprite.changeBrightnessBy|param|value": "стойността за промяна на яркостта",
  "game.LedSprite.changeDirectionBy": "Променя позицията ``посока`` според даденото количество чрез обръщане вдясно",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "Променя позицията ``x`` според даденото количество",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "Променя позицията ``y`` според даденото количество",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "името на свойството за промяна",
  "game.LedSprite.change|param|value": "количество на промяната, напр.: 1",
  "game.LedSprite.delete": "Изтрива елфчето от двигателя на играта. Елфчето повече няма да се появява на екрана или да взаимодейства с други елфчета.",
  "game.LedSprite.direction": "Докладва текущата посока на елфче",
  "game.LedSprite.get": "Получава свойство на елфчето",
  "game.LedSprite.get|param|property": "името на свойството за промяна",
  "game.LedSprite.goTo": "Отиди на тази позиция на екрана",
  "game.LedSprite.goTo|param|x": "TODO",
  "game.LedSprite.goTo|param|y": "TODO",
  "game.LedSprite.ifOnEdgeBounce": "Ако докосва на края на екрана и е с лице към него, се обърнете.",
  "game.LedSprite.isTouching": "Докладва вярно, ако елфчето е заело същата позиция като указаното елфче",
  "game.LedSprite.isTouchingEdge": "Докладва вярно, ако елфчето докосва екран",
  "game.LedSprite.isTouching|param|other": "TODO",
  "game.LedSprite.move": "Премести определен брой LED в текущата посока",
  "game.LedSprite.move|param|leds": "брой led за преместване, напр.: 1, -1",
  "game.LedSprite.off": "Изключва елфчето (включено по подразбиране)",
  "game.LedSprite.on": "Включва елфчето (включено по подразбиране)",
  "game.LedSprite.set": "Задава свойството на елфчето",
  "game.LedSprite.setBlink": "Задава интервала на премигване в милисекунди.",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "Задава ``яркост`` на елфче",
  "game.LedSprite.setBrightness|param|brightness": "яркостта от 0 (изключена) до 255 (включена), напр.: 255.",
  "game.LedSprite.setDirection": "Задава посоката на текущото елфче, закръглено до най-близкото кратно на 45",
  "game.LedSprite.setDirection|param|degrees": "TODO",
  "game.LedSprite.setX": "Задава позицията``x`` на елфче",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "Задава позицията ``y`` на елфче",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "името на свойството за промяна",
  "game.LedSprite.turn": "Обърни елфчето",
  "game.LedSprite.turnLeft": "Обърни наляво (обратно на часовниковата стрелка)",
  "game.LedSprite.turnLeft|param|degrees": "TODO",
  "game.LedSprite.turnRight": "Обърни надясно (по посока на часовниковата стрелка)",
  "game.LedSprite.turnRight|param|degrees": "TODO",
  "game.LedSprite.turn|param|degrees": "ъгъл в градуси за обръщане, напр.: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "ляво или дясно",
  "game.LedSprite.x": "Докладва позицията ``x`` на елфче на LED екрана",
  "game.LedSprite.y": "Докладва позицията ``y`` на елфче на LED екрана",
  "game.addLife|param|lives": "TODO",
  "game.addScore": "Добавя точки към текущия резултат",
  "game.addScore|param|points": "с колко да се променят точките, например: 1",
  "game.gameOver": "Показва игра над анимацията и резултата.",
  "game.isPaused": "Указва дали рендирането на играта е на пауза, за да разреши други анимации",
  "game.pause": "Поставя рендирането на играта на пауза, за да позволи други анимации",
  "game.removeLife|param|life": "TODO",
  "game.resume": "Подновяваигровия рендиращ двигател",
  "game.score": "Показва текущия резултат",
  "game.setLife|param|value": "TODO",
  "game.setScore": "Задава текущата стойност на резултата",
  "game.setScore|param|value": "нов резултат стойност.",
  "game.startCountdown": "Показва анимация, след което стартира хронометъра, което води до край на играта, когато достигне 0",
  "game.startCountdown|param|ms": "продължителност на отброяване в милисекунди, напр.: 10 000",
  "images": "Създаване, манипулиране и показване на LED изображения.",
  "images.createBigImage": "Създава изображение с 2 рамки.",
  "images.createImage": "Създава изображение, което пасва на LED екрана.",
  "input": "Събития и данни от сензорите",
  "input.acceleration": "Получете стойността на ускоряване в мили-гравити (когато таблото е легнало с екрана нагоре, x=0, y=0 и z=-1024)",
  "input.acceleration|param|dimension": "TODO",
  "input.buttonIsPressed": "Получете състоянието на бутона (натиснат или не) за ``A`` и ``B``.",
  "input.buttonIsPressed|param|button": "бутона за запитване за заявка, напр.: Button.A",
  "input.calibrate": "Остаряло, вместо това използвайте input.calibrateCompass.",
  "input.compassHeading": "Получете текущата позиция на компаса в градуси.",
  "input.lightLevel": "Прочита нивото на свтлината, приложена към LED екрана в диапазон от ``0`` (тъмно) до ``255`` светло.",
  "input.magneticForce": "Получете стойността на могнитната сила в ``микротесли`` (``µT``). Тази функция не се поддържа в симулатора.",
  "input.magneticForce|param|dimension": "TODO",
  "input.onButtonPressed": "Направете нещо, когато бутон (A, B или A+B) е натиснат надолу и е отново освободен.",
  "input.onButtonPressed|param|body": "код за изпълнение, когато събитието е задействано",
  "input.onButtonPressed|param|button": "бутонът, който трябва да бъде натиснат",
  "input.onGesture": "Направете нещо при даден жест (като поклащане на micro:bit).",
  "input.onGesture|param|body": "код за изпълнение, когато се задейства жест",
  "input.onGesture|param|gesture": "типът жест за проследяване, напр.: Gesture.Shake",
  "input.onLogoDown": "Прикрепя код за изпълнение, когато логото е насочено надолу, а таблото е във вертикално положение.",
  "input.onLogoDown|param|body": "TODO",
  "input.onLogoUp": "Прикрепя код за изпълнение, когато логото е насочено нагоре, а таблото е във вертикално положение.",
  "input.onLogoUp|param|body": "TODO",
  "input.onPinPressed": "Направете нещо, когато пинът е докоснат и освободен отново (като също така докосвате GND пина).",
  "input.onPinPressed|param|body": "кодът да се стартира, когато пинът е натиснат",
  "input.onPinPressed|param|name": "кодът, който трябва да бъде натиснат, напр.: TouchPin.P0",
  "input.onPinReleased": "Направете нещо, когато пинът е освободен.",
  "input.onPinReleased|param|body": "кодът да стартира, когато пинът е освободен",
  "input.onPinReleased|param|name": "пинът, който трябва да бъде освободен: TouchPin.P0",
  "input.onScreenDown": "Прикрепя код за стартиране, когато екранът гледа надолу.",
  "input.onScreenDown|param|body": "TODO",
  "input.onScreenUp": "Прикрепя код за стартиране, когато екранът гледа нагоре.",
  "input.onScreenUp|param|body": "TODO",
  "input.onShake": "Прикрепя код за стартиране, когато устройството е разклатено.",
  "input.onShake|param|body": "TODO",
  "input.pinIsPressed": "Получете състояние на пин (натиснат или не). Изисква се задържане на земята, за да се затвори веригата.",
  "input.pinIsPressed|param|name": "пин, използван за разпознаване на докосването, напр.: TouchPin.P0",
  "input.rotation": "Настройката или завъртането на устройството, завъртане по дължина на ``x-оста`` или ``y-оста``, в градуси.",
  "input.rotation|param|kind": "TODO",
  "input.runningTime": "Получава броя изминали милисекунди след включване на захранването.",
  "input.runningTimeMicros": "Получава броя изминали микросекунди след включване на захранването.",
  "input.setAccelerometerRange": "Задава примерния обхват на акселометъра в гравити.",
  "input.setAccelerometerRange|param|range": "стойност, описваща максималната сила на измереното ускорение",
  "input.temperature": "Получава температурата в градуси по Целзий (°C).",
  "led": "Контрол върху LED екрана.",
  "led.brightness": "Получава яркостта на екрана от 0 (изключено) до 255 (пълна яркост).",
  "led.displayMode": "Получава текущия режим на дисплей",
  "led.enable": "Включва дисплея",
  "led.fadeIn": "Избледняване на дисплея на екрана.",
  "led.fadeIn|param|ms": "TODO",
  "led.fadeOut": "Избледняване на яркостта на екрана.",
  "led.fadeOut|param|ms": "TODO",
  "led.plot": "Включете указания LED, като използвате x, y координати (x е хоризонтална, y е вертикална). (0,0) е горно ляво.",
  "led.plotAll": "Включва всички LED",
  "led.plotBarGraph": "Показва вертикална стълбовидна диаграма, базирана на `стойност` и `висока` стойност.\nАко`високо` е 0, диаграмата автоматично се регулира.",
  "led.plotBarGraph|param|high": "максимална стойност. Ако е 0, максималната стойност се регулира автоматично, напр.: 0",
  "led.plotBarGraph|param|value": "текуща стойност на чертеж",
  "led.plotBrightness": "Включете указания LED с конкретна яркост, като използвате координатите x, y (x е хоризонтална, y е вертикална). (0,0) е горно ляво.",
  "led.plotBrightness|param|brightness": "яркостта от 0 (изключена) до 255 (ярко), напр.:255",
  "led.plotBrightness|param|x": "хоризонталната координата на LED, започваща от 0",
  "led.plotBrightness|param|y": "вертикалната координата на LED, започваща от 0",
  "led.plot|param|x": "хоризонталната координата на LED, започваща от 0",
  "led.plot|param|y": "вертикалната координата на LED, започваща от 0",
  "led.point": "Получете състоянието включено/изключено на указания LED, като използвате координатите x, y. (0,0) е горно ляво.",
  "led.point|param|x": "TODO",
  "led.point|param|y": "TODO",
  "led.screenshot": "Прави екранна снимка на LED екрана и връща изображение.",
  "led.setBrightness": "Задайте яркостта на екрана от 0 (изключено) до 255 (пълна яркост).",
  "led.setBrightness|param|value": "стойността на яркостта, напр.:255, 127, 0",
  "led.setDisplayMode": "Задава режим на дисплей между черно и бяло и скалата на сивото за рендиране на LED.",
  "led.setDisplayMode|param|mode": "режим на дисплей, в който екранът оперира",
  "led.stopAnimation": "Отменя текущата анимация и изчиства другите чакащи анимации.",
  "led.toggle": "Включва и изключва",
  "led.toggleAll": "Инвертира текущия LED дисплей",
  "led.toggle|param|x": "TODO",
  "led.toggle|param|y": "TODO",
  "led.unplot": "Изключете указания LED, като използвате координатите x, y (x е хоризонтална, y е вертикална). (0,0) е горно ляво.",
  "led.unplot|param|x": "TODO",
  "led.unplot|param|y": "TODO",
  "music": "Генериране на музикални тонове.",
  "music.beat": "Връща времетраенето на ударите в милисекунди",
  "music.beginMelody": "Започва проиграването на мелодия.\nНотите се изразяват като низ от знаци в следния формат: NOTE[octave][:duration]",
  "music.beginMelody|param|melodyArray": "масивът на мелодия за проиграване, напр.: ['g5:1']",
  "music.beginMelody|param|options": "опции за мелодия, веднъж/завинаги, на преден план/на заден план",
  "music.builtInMelody": "Получава масив на мелодия от вградена мелодия.",
  "music.changeTempoBy": "Промяна на темпото с указаното количество",
  "music.changeTempoBy|param|bpm": "Промяната в удари за минута към темпото, напр.: 20",
  "music.noteFrequency": "Получава честотата на нотата.",
  "music.noteFrequency|param|name": "името на нотата, напр.: Note.C",
  "music.onEvent": "Регистрира код, който да стартира при различни събития с мелодии",
  "music.playTone": "Проиграва тон чрез пин ``P0`` за дадената продължителност.",
  "music.playTone|param|frequency": "настройка на тона за проиграване в херцове (Hz)",
  "music.playTone|param|ms": "продължителност на тона в милисекунди (ms)",
  "music.rest": "Почива (не проиграва) за указаното време чрез пин ``P0``.",
  "music.rest|param|ms": "времетраене на почивката в милисекунди (ms)",
  "music.ringTone": "Проиграва тон чрез пин ``P0``.",
  "music.ringTone|param|frequency": "настройка на тона за проиграване в херцове (Hz)",
  "music.setPlayTone": "Задава персонализирана функция playTone за проиграване на мелодии",
  "music.setTempo": "Задава темпо за указаното количество",
  "music.setTempo|param|bpm": "Новото темпо в удари за минута, напр.: 120",
  "music.tempo": "Връща темпото в удари за минута. Темпото е скоростта (bpm = удара за минута), с която нотите се проиграват. Колкото по-голяма е стойността на темпото, толкова по-бързо ще се проиграват нотите.",
  "parseInt": "Преобразуване на низ A в цяло число.",
  "pins": "Контролира теченията в пинове за аналогови/дигитални сигнали, сервомеханизъм, i2c, ...",
  "pins.analogPitch": "Излъчва сигнал на широчинно-импулсна модулация (PWM) към текущия пин на настройката. Използвайте `аналогово задаване на пина на настройката`, за да дефинирате пина на настройката.",
  "pins.analogPitch|param|frequency": "честота за модулиране в Hz.",
  "pins.analogPitch|param|ms": "подължителност на настройката в милисекунди.",
  "pins.analogReadPin": "Прочетете стойността на конектора като аналог, тоест като стойност, съставена между 0 и 1023.",
  "pins.analogReadPin|param|name": "пин, който да се напише, напр.: AnalogPin.P0",
  "pins.analogSetPeriod": "Конфигурира широчинно-импулсната модулация (PWM) от аналоговия изход към дадената стойност в **микросекунди** или `1/1000` милисекунди.\nАко този пин не е конфигуриран като аналогов изход (с помощта на `аналогово написан пин`), операцията няма ефект.",
  "pins.analogSetPeriod|param|micros": "период в микросекунди, напр.:20000",
  "pins.analogSetPeriod|param|name": "аналогов пин за задаване на период до, напр.: AnalogPin.P0",
  "pins.analogSetPitchPin": "Задава използвания пин при използване на `аналогова настройка` или музика.",
  "pins.analogSetPitchPin|param|name": "пин да модулира настройка от",
  "pins.analogWritePin": "Задайте стойността на конектора като аналогова. Стойността трябва да бъде между 0 и 1023.",
  "pins.analogWritePin|param|name": "име на пин за записване, напр.: AnalogPin.P0",
  "pins.analogWritePin|param|value": "стойност за записване към пина между ``0`` и ``1023``. напр.:1023,0",
  "pins.digitalReadPin": "Прочетете указания пин или конектора като 0 или 1",
  "pins.digitalReadPin|param|name": "пин, от който да се чете, напр.: DigitalPin.P0",
  "pins.digitalWritePin": "Задайте пин или стойност на конектор на 0 или 1.",
  "pins.digitalWritePin|param|name": "пин, към който да се запише, напр.: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "стойност, която да бъде зададена към пина, 1 напр. 0",
  "pins.i2cReadNumber": "Прочети едно число от 7-битов I2C адрес.",
  "pins.i2cWriteNumber": "Напиши едно число към 7-битов I2C адрес.",
  "pins.map": "Преразпределя число от един диапазон в друг. Тоест стойност ``от ниско`` би се разпределила до ``към ниско``, стойност ``от високо`` до ``до ниско``, междинни стойности до междинни стойности и т.н.",
  "pins.map|param|fromHigh": "горната граница на текущия диапазон на стойността, напр.: 1023",
  "pins.map|param|fromLow": "долната граница на текущия диапазон на стойността",
  "pins.map|param|toHigh": "горната граница на целевия диапазон на стойността, напр.: 4",
  "pins.map|param|toLow": "долната граница на целевия диапазон на стойността",
  "pins.map|param|value": "стойност за разпределяне в диапазони",
  "pins.onPulsed": "Конфигурира този пин за дигитално въвеждане и генерира събития, при които времевото клеймо е продължителността, която този пин е бил ``висок`` или ``нисък``.",
  "pins.onPulsed|param|name": "дигитален пин за регистрация, напр.: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "стойността на удара, напр.: PulseValue.High",
  "pins.pulseDuration": "Получава продължителността на последния удар в микросекунди. Тази функция трябва да се извика от манипулатора ``onPulsed``.",
  "pins.pulseIn|param|name": "пинът, който измерва удара, напр.: DigitalPin.P0",
  "pins.pulseIn|param|value": "стойността на удара, напр.: PulseValue.High",
  "pins.servoSetPulse": "Конфигурира този IO пин като аналогов/pwm изход, конфигурира периода да бъде 20 ms, и задава широчината на удара, базирана на дадената стойност **микросекунди** или `1/1000` милисекунди.",
  "pins.servoSetPulse|param|micros": "продължителност на удара в микросекунди, напр.:1500",
  "pins.servoSetPulse|param|name": "име на пин",
  "pins.servoWritePin": "Записва стойността на сервомеханизма, като контролира стълба (в градуси), като стълбът се пресмества до тази ориентация. На продължителен ротационен сервомеханизъм това ще настрои скоростта на сервомеханизма (където ``0`` е пълната скорост в една посока, ``180`` е пълната скорост в другата посока, а стойността близо до ``90`` е без движение).",
  "pins.servoWritePin|param|name": "пин, който да се напише, напр.: AnalogPin.P0",
  "pins.servoWritePin|param|value": "ъгъл на ротационната скорост, напр.:180,90,0",
  "pins.setEvents": "Конфигурира събитията, излъчени от този пин. Можете да се абонирате за събитията, като използвате ``control.onEvent()``.",
  "pins.setEvents|param|name": "пин за задаване на режим на събитие включен, напр.: DigitalPin.P0",
  "pins.setEvents|param|type": "типът събития за излъчване от този пин, напр.: PinEventType.Edge",
  "pins.setPull": "Конфигурира извеждането на този пин.",
  "pins.setPull|param|name": "пин за задаване на режим на извеждане, напр.: DigitalPin.P0",
  "pins.setPull|param|pull": "една от конфигурациите за извеждане mbed, напр.: PinPullMode.PullUp",
  "pins.spiFormat": "Задава SPI битовете и режима",
  "pins.spiFormat|param|bits": "броят битове, напр.: 8",
  "pins.spiFormat|param|mode": "режимът, напр.: 3",
  "pins.spiFrequency": "Задава SPI честотата",
  "pins.spiFrequency|param|frequency": "честотата на часовника, напр.: 1000000",
  "pins.spiPins": "Задава MOSI, MISO, SCK пинове, използвани от събитието SPI",
  "pins.spiWrite": "Напишете в подчиненото устройство SPI и върнете отговора",
  "pins.spiWrite|param|value": "Данни, които да се изпратят към подчиненото устройство SPI",
  "serial": "Четене и написване на данни на серийна връзка.",
  "serial.onDataReceived": "Регистрира събитие, което да бъде изпратено, когато един от разделителите съответства.",
  "serial.onDataReceived|param|delimiters": "знаците за съответствие получиха препятстващи знаци.",
  "serial.readBuffer": "Чете множество знаци от получения буфер. Поставете на пауза, докато се появят достатъчно знаци.",
  "serial.readBuffer|param|length": "дължина на буфер по подразбиране, напр.: 64",
  "serial.readLine": "Чете ред текст от сериен портал.",
  "serial.readString": "Чете буферираните получени данни като низ",
  "serial.readUntil": "Чете ред текст от серийния порт и връща буфера, когато разделителят е изпълнен.",
  "serial.readUntil|param|delimiter": "текстови разделите, разделящ всеки блок текст",
  "serial.redirect": "Задайте серийния вход и изход, за да се използват пинове, вместо USB връзката.",
  "serial.redirectToUSB": "Насочете серийния вход и изход, за да използвате USB връзката.",
  "serial.redirect|param|rate": "нова скорост в бодове, напр.: 115200",
  "serial.redirect|param|rx": "новият пин за получаване, напр.: SerialPin.P1",
  "serial.redirect|param|tx": "новата трансмисия на пинове, напр.: SerialPin.P0",
  "serial.writeBuffer": "Изпраща буфер чрез серийна връзка",
  "serial.writeLine": "Разпечатва ред текст в серията",
  "serial.writeNumber": "Разпечатва числена стойност в серията",
  "serial.writeString": "Изпраща част от текст чрез серийна връзка.",
  "serial.writeValue": "Записва двоен ред ``име: стойност`` в серията.",
  "serial.writeValue|param|name": "име на поток със стойност, напр.: x",
  "serial.writeValue|param|value": "да запише"
}