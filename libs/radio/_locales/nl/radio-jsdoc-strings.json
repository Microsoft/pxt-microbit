{
  "radio": "Communiceren van gegevens met behulp van radiopakketten",
  "radio.Packet.receivedNumber": "De getallading als in dit pakket een getal is verzonden (via ``sendNumber()`` of ``sendValue()``)\nof 0 als dit pakket geen getal bevat.",
  "radio.Packet.receivedString": "De tekenreekslading als in dit pakket een tekenreeks is verzonden (via ``sendString()`` of ``sendValue()``)\nof de lege tekenreeks als dit pakket geen tekenreeks bevat.",
  "radio.Packet.serial": "Het serienummer van de afzender van het pakket of 0 als de afzender geen serienummer heeft verzonden.",
  "radio.Packet.signal": "De indicator voor de sterkte van het ontvangen signaal (RSSI) van het pakket.",
  "radio.Packet.time": "De systeemtijd van de afzender van het pakket op het moment dat het pakket is verzonden.",
  "radio.onDataPacketReceived": "Registreert code om uit te voeren wanneer de radio een pakket ontvangt. Neemt het pakket ook uit de radio wachtrij.",
  "radio.onDataReceived": "Hiermee registreert u code kan worden uitgevoerd als een pakket wordt ontvangen via radio.",
  "radio.receiveNumber": "Het volgende pakket worden gelezen als een nummer uit de wachtrij van de radio.",
  "radio.receiveString": "Leest het volgende pakket als een tekenreeks en retourneert het.",
  "radio.receivedNumber": "Retourneert de getal lading van het laatste pakket uit de radio wachtrij (via ``receiveNumber``, ``receiveString``, etc) of een 0 als dat pakket geen nummer bevatte.",
  "radio.receivedSerial": "Retourneert het serienummer van de afzender micro:bit van het laatste pakket wat uit de radio wachtrij gehaald is (via ``receiveNumber``, ``receiveString``, etc) of 0 als dat pakket geen serienummer bevatte.",
  "radio.receivedSignalStrength": "Haalt de ontvangen signaalsterkte-indicatie (RSSI) uit het laatste pakket van de radiowachtrij (via ``receiveNumber``, ``receiveString``, etc). Wordt niet ondersteund in simulator.\nnamespace=radio",
  "radio.receivedString": "Retourneert de tekenreeks inhoud van het laatste pakket wat uit de radio wachtrij gehaald is (via ``receiveNumber``, ``receiveString``, etc) of een lege reeks als dat pakket geen tekenreeks bevatte.",
  "radio.receivedTime": "Retourneert de systeemtijd van de afzender micro:bit op het moment dat het laatste pakket uit de radio wachtrij verstuurd werd (via ``receiveNumber``,\n``receiveString``, etc).",
  "radio.sendNumber": "Zendt via radio een nummer uit naar elke aangesloten micro:bit in de groep.",
  "radio.sendString": "Zendt een tekenreeks samen met het serienummer van het apparaat en de speelduur door naar alle verbonden micro:bit(s) in de groep.",
  "radio.sendValue": "Zendt een naam / waarde samen met het serienummer van het apparaat en de speelduur door naar alle aangesloten micro:bit in de groep.",
  "radio.sendValue|param|name": "het veld naam (max 12 karakters), bijvoorbeeld: \"gegevens\"",
  "radio.sendValue|param|value": "de numerieke waarde",
  "radio.setGroup": "Stelt de groeps-id voor radiocommunicatie in. Een micro:bit kan maar naar één groeps-ID tegelijk luisteren.",
  "radio.setGroup|param|id": "de groep id tussen ``0`` en ``255``, bijv: 1",
  "radio.setTransmitPower": "Verandert het zendvermogen naar de aangegeven waarde.",
  "radio.setTransmitPower|param|power": "een waarde in het bereik van de 0..7, waar 0 de laagste vermogen en 7 is is de hoogste. BV: 7",
  "radio.setTransmitSerialNumber": "Stel de radio in zodat het serienummer in elk bericht wordt verzonden.",
  "radio.setTransmitSerialNumber|param|transmit": "waarde die aangeeft dat het serienummer is uitgezonden (b.v. WAAR)",
  "radio.writeReceivedPacketToSerial": "Vertaal het laatste ontvangen pakket in een JSON bericht. Deze functie dient te worden gebruikt in de ``onDataPacketReceived`` callback functie.",
  "radio.writeValueToSerial": "Een waarde die wordt verzonden met 'stream waarde' leest en schrijft het naar de seriële stroom als JSON"
}