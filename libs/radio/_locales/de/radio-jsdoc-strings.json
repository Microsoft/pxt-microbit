{
  "radio": "Daten mithilfe von Funk-Paketen übertragen",
  "radio.Packet.receivedNumber": "Die Nummer-Nutzdaten, wenn in diesem Paket eine Nummer gesendet wurde (über ``sendNumber()`` oder ``sendValue()``) oder 0, wenn das Paket keine Nummer enthielt.",
  "radio.Packet.receivedString": "Die Zeichenfolge-Nutzdaten, wenn in diesem Paket eine Zeichenfolge gesendet wurde (über ``sendString()`` oder ``sendValue()``) oder die leere Zeichenfolge, wenn das Paket keine Zeichenfolge enthielt.",
  "radio.Packet.serial": "Die Seriennummer des Senders des Paketes oder 0, wenn der Sender seine Seriennummer nicht gesendet hat.",
  "radio.Packet.signal": "Indikator für die Empfangsfeldstärke (RSSI) des Paketes.",
  "radio.Packet.time": "Die Systemzeit des Senders des Paketes zu dem Zeitpunkt, an dem das Paket gesendet wurde.",
  "radio.onDataPacketReceived": "Registriert Funktionen, die ausgeführt werden, wenn das Radio ein Datenpaket empfängt. Entnimmt das empfangene Paket aus der Warteschlange des Radios.",
  "radio.onDataReceived": "Registriert Code der ausgeführt wird, wenn ein Paket über Funk empfangen wird.",
  "radio.receiveNumber": "Liest das nächste Paket aus der Funk-Warteschlange und gibt die Paketnummer oder 0 aus, wenn das Paket keine Nummer enthält.",
  "radio.receiveString": "Liest das nächste Paket aus der Funk-Warteschlange und gibt die enthaltene Zeichenfolge oder die leere Zeichenfolge aus, wenn das Paket keine Zeichenfolge enthält.",
  "radio.receivedNumber": "Extrahiert eine Zahl aus dem Inhalt des letzten Datenpakets, welches aus der Warteschlange des Radios (via ``Zahl empfangen``, ``Zeichenkette empfangen``, etc) entnommen wurde oder eine 0, wenn das Paket keine Zahl enthält.",
  "radio.receivedSerial": "Extrahiert die Seriennummer des Calliope mini Senders aus dem Inhalt des letzten Datenpakets, welches aus der Warteschlange des Radios entnommen wurde oder eine 0, wenn der Absender keine Seriennummer gesendet hat.",
  "radio.receivedSignalStrength": "Ruft den empfangenen Signalstärkeindikator (RSSI) aus dem letzten Paket aus der Funk-Warteschlange aus (via ``receiveNumber``, ``receiveString``, etc). Wird im Simulator nicht unterstützt.\nnamespace=radio",
  "radio.receivedString": "Extrahiert die Zeichenkette aus dem Inhalt des letzten Datenpakets, welches aus der Warteschlange des Radios (via ``Zahl empfangen``, ``Zeichenkette empfangen``, etc) entnommen wurde oder eine leere Zeichenkette, wenn das Paket keine Zeichenkette enthält.",
  "radio.receivedTime": "Extrahiert die Systemzeit des Absenders aus dem Inhalt des letzten Datenpakets, welches aus der Warteschlange des Radios (via ``Zahl empfangen``, ``Zeichenkette empfangen``, etc) entnommen wurde.",
  "radio.sendNumber": "Überträgt eine Nummer über Funk an jeden angeschlossenen mini in der Gruppe.",
  "radio.sendString": "Überträgt eine Zeichenfolge über Funk mit Seriennummer des Geräts und Laufzeit an jeden angeschlossenen mini in der Gruppe.",
  "radio.sendValue": "Sendet ein Name / Wert-Paar zusammen mit der Seriennummer des Geräts und die Laufzeit auf alle angeschlossenen minis in der Gruppe.",
  "radio.sendValue|param|name": "die Feldnamen (max. 12 Zeichen), z.B.: \"Daten\"",
  "radio.sendValue|param|value": "der numerische Wert",
  "radio.setGroup": "Legt die Gruppen-ID für Funkverbindungen fest. Ein micro:bit kann gleichzeitig nur auf eine Gruppen-ID hören.",
  "radio.setGroup|param|id": "die Gruppen-ID zwischen ``0`` und ``255``, z. B.: 1",
  "radio.setTransmitPower": "Ändere die Ausgabeleistung des Senders auf den angegebenen Wert.",
  "radio.setTransmitPower|param|power": "ein Wert im Bereich 0..7, wo 0 die niedrigste Leistung und 7 ist ist die höchste. z. B. 7",
  "radio.setTransmitSerialNumber": "Stelle den Dunk so ein, dass die Seriennummer in jeder Nachricht übertragen wird.",
  "radio.setTransmitSerialNumber|param|transmit": "Wert, der anzeigt, ob die Seriennummer übertragen wird, z.B. wahr",
  "radio.writeReceivedPacketToSerial": "Schreibt das letzte empfangene Paket als JSON auf Seriell. Sollte in einem ´´onDataPacketReceived``-Callback aufgerufen werden.",
  "radio.writeValueToSerial": "Liest das nächste Paket aus der Funk-Warteschlange und schreibt dieses als JSON auf Seriell."
}