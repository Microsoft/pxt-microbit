{
  "radio": "Communique les données via des paquets radio",
  "radio.Packet.receivedNumber": "La charge utile de numéro si un numéro a été envoyé dans ce paquet (via ``sendNumber()`` ou ``sendValue()``)\nou 0 si ce paquet ne contient pas de numéro.",
  "radio.Packet.receivedString": "La charge utile de chaîne si une chaîne a été envoyée dans ce paquet (via ``sendString()`` ou ``sendValue()``)\nou la chaîne vide si ce paquet ne contenait pas de chaîne.",
  "radio.Packet.serial": "Le numéro de série de l'expéditeur du paquet ou 0 si l'expéditeur n'a pas envoyé de numéro de série.",
  "radio.Packet.signal": "L'indicateur de force du signal reçu (RSSI) du paquet.",
  "radio.Packet.time": "L'heure du système de l'expéditeur du paquet au moment de l'envoi du paquet.",
  "radio.onDataReceived": "Enregistre le code à exécuter quand un paquet est reçu par radio.",
  "radio.receiveNumber": "Lit le prochain paquet d'une file d'attente radio et renvoie la charge utile du numéro\ndu paquet ou 0 si le paquet ne contient pas de numéro.",
  "radio.receiveString": "Lit le prochain paquet d'une file d'attente radio et renvoie la charge utile de la chaîne\ndu paquet ou une chaîne vide si le paquet ne contient pas de chaîne.",
  "radio.receivedSignalStrength": "Récupère l'indicateur de la force du signal reçu (RSSI) du dernier paquet pris dans la file d'attente radio (via ``receiveNumber``, ``receiveString``, etc.). Non pris en charge en simulateur.\nnamespace=radio",
  "radio.sendNumber": "Diffuse un nombre par radio à tout micro:bit connecté au groupe.",
  "radio.sendString": "Diffuse une chaîne avec le numéro de série de l'appareil et le temps d'exécution à tout micro:bit connecté au groupe.",
  "radio.sendValue": "Diffuse un nom / une valeur associé au numéro de série de l'appareil et le temps d'exécution à tout micro:bit connecté au groupe.",
  "radio.sendValue|param|name": "nom du champ (max 12 caractères). Ex. : \"nom\"",
  "radio.sendValue|param|value": "valeur numérique",
  "radio.setGroup": "Définit l'id du groupe pour les communications par radio. Un micro:bit ne peut écouter qu'une id de groupe à la fois.",
  "radio.setGroup|param|id": "l'id de groupe entre ``0`` et ``255``. Ex : 1",
  "radio.setTransmitPower": "Modifie le niveau de puissance de sortie de l’émetteur en lui attribuant la valeur donnée.",
  "radio.setTransmitPower|param|power": "une valeur de la plage 0..7, 0 correspondant à la puissance la plus faible et 7 à la plus élevée. Ex. : 7",
  "radio.setTransmitSerialNumber": "Régle la radio pour qu'elle puisse transmettre le numéro de série dans chaque message.",
  "radio.setTransmitSerialNumber|param|transmit": "la valeur indiquant si le numéro de série est transmis. Ex : vrai",
  "radio.writeReceivedPacketToSerial": "Écrit le dernier paquet reçu en série en tant que JSON. Cela devrait être appelé\ndans un rappel ``onDataPacketReceived``.",
  "radio.writeValueToSerial": "Lit le prochain paquet de la file d'attente radio et l'envoie sur le série en tant que JSON."
}